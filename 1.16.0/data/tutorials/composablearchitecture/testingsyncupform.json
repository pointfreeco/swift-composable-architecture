{"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm"},"sections":[{"kind":"hero","chapter":"New sync-up form","estimatedTimeInMinutes":10,"title":"Testing the sync-up form","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We now have a moderately complex feature for editing the details of a sync-up, the "},{"type":"codeVoice","code":"SyncUpForm"},{"text":" ","type":"text"},{"text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come","type":"text"},{"type":"text","text":" "},{"type":"text","text":"face-to-face with dependencies for the first time in this tutorial."}]}]},{"kind":"tasks","tasks":[{"stepsSection":[{"content":[{"inlineContent":[{"text":"Create a new test file called SyncUpFormTests.swift and paste in some basic scaffolding for","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a new test case."}],"type":"paragraph"}],"runtimePreview":null,"caption":[],"code":"TestingSyncUpForm-01-code-0001.swift","type":"step","media":null},{"runtimePreview":null,"code":"TestingSyncUpForm-01-code-0002.swift","caption":[],"media":null,"content":[{"inlineContent":[{"type":"text","text":"Construct a "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","type":"reference"},{"text":" with the initial state that has two","type":"text"},{"type":"text","text":" "},{"text":"attendees so that we can delete one of them.","type":"text"}],"type":"paragraph"}],"type":"step"},{"runtimePreview":null,"media":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Emulate the user deleting the attendee by sending the ","type":"text"},{"type":"codeVoice","code":"onDeleteAttendees"},{"text":" action and assert","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"that the attendee is indeed removed from the array, leaving only the other attendee in the"},{"type":"text","text":" "},{"type":"text","text":"array."}]}],"code":"TestingSyncUpForm-01-code-0003.swift","type":"step"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Run the test suite to make sure everything passes."}]},{"type":"paragraph","inlineContent":[{"text":"That’s all it takes to test the very basic functionality of removing an attendee. But there’s","type":"text"},{"type":"text","text":" "},{"type":"text","text":"additional logic that we haven’t yet covered in the test, which is how the focus changes."},{"type":"text","text":" "},{"text":"Let’s also test that logic.","type":"text"}]},{"media":null,"code":"TestingSyncUpForm-01-code-0004.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a new test method for testing what happens when we delete a focused attendee. This time"},{"type":"text","text":" "},{"text":"the initial state with start with two attendees, which have been pulled out into variables","type":"text"},{"type":"text","text":" "},{"type":"text","text":"so that we can reference them. The first attendee will also be focused."}]}],"caption":[{"name":"Note","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"We have collapsed the ","type":"text"},{"code":"testRemoveAttendee","type":"codeVoice"},{"type":"text","text":" method in the code snippet."}]}]}],"runtimePreview":null,"type":"step"},{"code":"TestingSyncUpForm-01-code-0005.swift","type":"step","caption":[],"media":null,"runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Emulate the user deleting the first attendee by sending the "},{"type":"codeVoice","code":"onDeleteAttendees"},{"text":" action.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This time the state will change a little differently. The "},{"type":"codeVoice","code":"attendees"},{"text":" array will hold a","type":"text"},{"type":"text","text":" "},{"text":"single element, the 2nd attendee, and further the focus will change to the 2nd attendee.","type":"text"}],"type":"paragraph"}]},{"inlineContent":[{"type":"text","text":"Run the test suite to make sure everything passes."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"We have now verified that the focus correctly changes when removing an attendee. There is","type":"text"},{"type":"text","text":" "},{"text":"still an edge case we have not tested. What happens when there are two attendees, neither of","type":"text"},{"text":" ","type":"text"},{"text":"which is focused, and you delete one? We would expect that the focus does ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"not","type":"text"}]},{"text":" change, but","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the best way to prove that is to write a test. We leave that test as an exercise for the"},{"text":" ","type":"text"},{"type":"text","text":"reader."}]}],"anchor":"Removing-attendees","title":"Removing attendees","contentSection":[{"content":[{"inlineContent":[{"type":"text","text":"The first significant logic we added to our feature was that of adding and removing attendees."},{"type":"text","text":" "},{"text":"Let’s start by testing the logic for removing attendees since it’s quite similar to what","type":"text"},{"type":"text","text":" "},{"text":"we already did in ","type":"text"},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" feature."}],"type":"paragraph"}],"kind":"contentAndMedia","mediaPosition":"trailing"}]},{"anchor":"Adding-attendees","title":"Adding attendees","contentSection":[{"content":[{"inlineContent":[{"type":"text","text":"Let’s move on to the next bit of functionality in the feature: adding an attendee. This turns"},{"text":" ","type":"text"},{"type":"text","text":"out to be trickier than you might expect due to an uncontrolled dependency."}],"type":"paragraph"}],"mediaPosition":"trailing","kind":"contentAndMedia"}],"stepsSection":[{"media":null,"type":"step","runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Add a new test method for testing the flow of adding a new attendee. We can start in an"},{"text":" ","type":"text"},{"type":"text","text":"initial state with no attendees."}],"type":"paragraph"}],"code":"TestingSyncUpForm-02-code-0001.swift","caption":[]},{"media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Emulate the user tapping on “Add attendee” button by sending the ","type":"text"},{"type":"codeVoice","code":"addAttendeeButtonTapped"},{"type":"text","text":" "},{"type":"text","text":"action. When the action is sent we expect the state to be mutated in a way that causes"},{"text":" ","type":"text"},{"type":"text","text":"an attendee to be added to the "},{"type":"codeVoice","code":"attendees"},{"type":"text","text":" array, and the focus should also point at that"},{"type":"text","text":" "},{"type":"text","text":"new attendee."}]}],"runtimePreview":null,"type":"step","caption":[],"code":"TestingSyncUpForm-02-code-0002.swift"},{"runtimePreview":null,"media":null,"caption":[],"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Run the test suite to see that it unfortunately fails. The reason it fails is because in the"},{"type":"text","text":" "},{"type":"text","text":"reducer we are reaching out to an uncontrolled dependency for generating attendee IDs, which"},{"type":"text","text":" "},{"text":"are UUIDs under the hood.","type":"text"}]}],"code":"TestingSyncUpForm-02-code-0003.swift"},{"inlineContent":[{"type":"text","text":"There are two ways one can fix this test. You can use the library’s “non-exhaustive” testing"},{"type":"text","text":" "},{"text":"tools (see ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Testing#Non-exhaustive-testing"},{"text":" for more info), which allows you to assert","type":"text"},{"type":"text","text":" "},{"type":"text","text":"on only the bits of state you care about. That can be handy, but we don’t feel it is"},{"type":"text","text":" "},{"type":"text","text":"appropriate in such a simple feature like "},{"code":"SyncUpForm","type":"codeVoice"},{"type":"text","text":". We think non-exhaustive testing is"},{"text":" ","type":"text"},{"type":"text","text":"best saved for testing the integration of features, and that exhaustive testing is best for"},{"type":"text","text":" "},{"type":"text","text":"testing isolated, leaf features."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The other way to test this feature is to control our feature’s dependence on UUID generation."},{"type":"text","text":" "},{"text":"That way we can predict what UUIDs will be generated during the test, and then we will be","type":"text"},{"text":" ","type":"text"},{"text":"able to write a passing, fully exhaustive test. And luckily the Composable Architecture comes","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with a full dependency management system (see "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement","isActive":true,"type":"reference"},{"text":" for more info) that","type":"text"},{"type":"text","text":" "},{"text":"makes it very easy to control and override dependencies.","type":"text"}],"type":"paragraph"},{"runtimePreview":null,"code":"TestingSyncUpForm-02-code-0004.swift","caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Go back to SyncUpForm.swift, where the reducer is implemented, and add a new property to the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"SyncUpForm"},{"text":" type. It will use the ","type":"text"},{"type":"codeVoice","code":"@Dependency"},{"text":" property wrapper to express that the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"feature has a dependency, and we will provide the key path "},{"type":"codeVoice","code":"\\.uuid"},{"type":"text","text":" to denote the dependence"},{"type":"text","text":" "},{"type":"text","text":"on UUID generation."}]}],"type":"step","media":null},{"media":null,"caption":[],"code":"TestingSyncUpForm-02-code-0005.swift","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Then, in the reducer’s logic, any place we reached out to the uncontrolled UUID generator,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"for example "},{"code":"Attendee.ID()","type":"codeVoice"},{"text":", we will instead use the ","type":"text"},{"type":"codeVoice","code":"uuid"},{"type":"text","text":" dependency."}]}],"type":"step"},{"type":"paragraph","inlineContent":[{"text":"With that one change, if you were to run the test suite again you would get the same test","type":"text"},{"type":"text","text":" "},{"type":"text","text":"failures as before, but there would also be a new one letting you know that the"},{"type":"text","text":" "},{"type":"codeVoice","code":"uuid"},{"text":" dependency was used in a testing context without being overridden. That is a great","type":"text"},{"type":"text","text":" "},{"type":"text","text":"test failure to have because it keeps you from accidentally using live dependencies in a"},{"type":"text","text":" "},{"text":"testing context, which can be very problematic for things like API clients, analytics,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and more."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To fix this we will override the "},{"type":"codeVoice","code":"uuid"},{"type":"text","text":" dependency when when construct the "},{"type":"codeVoice","code":"TestStore"},{"type":"text","text":" in the"},{"text":" ","type":"text"},{"type":"text","text":"test."}]},{"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The initializer on "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","type":"reference"},{"type":"text","text":" has an optional trailing closure"},{"type":"text","text":" "},{"type":"text","text":"that can be provided to override any dependencies for the test. Use it to override the"},{"type":"text","text":" "},{"type":"codeVoice","code":"uuid"},{"type":"text","text":" dependency with an “incrementing” UUID generator. This is a generator that when"},{"text":" ","type":"text"},{"text":"invoked simply chooses the next UUID starting at 00000000-0000-0000-0000-000000000000.","type":"text"}]}],"code":"TestingSyncUpForm-02-code-0006.swift","media":null,"type":"step","runtimePreview":null},{"media":null,"caption":[],"runtimePreview":null,"content":[{"inlineContent":[{"text":"We can now deterministically predict the UUID that will be generated for the new attendee","type":"text"},{"type":"text","text":" "},{"type":"text","text":"when the button is tapped. It will be 00000000-0000-0000-0000-0000000000000000, but there"},{"text":" ","type":"text"},{"type":"text","text":"is also a helper on "},{"type":"codeVoice","code":"UUID"},{"type":"text","text":" provided to generate a UUID from an integer."}],"type":"paragraph"}],"code":"TestingSyncUpForm-02-code-0007.swift","type":"step"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Run the test suite to see that it passes. We now have a lot of test coverage on adding"},{"type":"text","text":" "},{"type":"text","text":"and removing attendees, and how the focus changes during those actions. There is one more"},{"type":"text","text":" "},{"type":"text","text":"edge case that we do not have test coverage for: removing the last attendee. We had added"},{"text":" ","type":"text"},{"type":"text","text":"extra logic in the reducer so that when you remove the last attendee we insert a new one so"},{"type":"text","text":" "},{"type":"text","text":"that the list is never empty. We leave writing a test for that scenario as an exercise for the"},{"text":" ","type":"text"},{"text":"reader.","type":"text"}]}]}]},{"title":"Presenting the sync-up form","featuredEyebrow":"Tutorial","kind":"callToAction","action":{"type":"reference","overridingTitle":"Get started","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Get started"}]},"abstract":[{"text":"We now have two features built: the sync-ups list and the sync-up form. These features do not","type":"text"},{"type":"text","text":" "},{"text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then"},{"type":"text","text":" "},{"text":"add that sync-up to the root list.","type":"text"}]}],"kind":"project","metadata":{"category":"Building SyncUps","role":"project","categoryPathComponent":"BuildingSyncUps","title":"Testing the sync-up form"},"variants":[{"paths":["\/tutorials\/composablearchitecture\/testingsyncupform"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","modules":[{"projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#A-tour-of-SyncUps"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#Create-the-SyncUps-project","kind":"task"}]}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/What-is-SyncUps-"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Lists-of-sync-ups","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#Domain-models"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#SyncUpsList-feature","kind":"task"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#A-handy-debugging-tool"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps#Writing-your-first-test","kind":"task"}]}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/New-sync-up-form","projects":[{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Sync-up-form-basics","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-an-approach","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-a-better-approach","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Removing-attendees"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Adding-attendees"}]}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Presenting-the-sync-up-form","projects":[{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-domains-together","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-views-together","kind":"task"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Adding-a-sync-up"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Non-exhaustive-testing"}]}]},{"projects":[{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Persisting-data-to-disk","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Testing-persistence","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Persisting-sync-ups-to-disk"},{"projects":[{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail#Create-the-sync-up-detail","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Editing-the-sync-up","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Deleting-the-sync-up","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#More-concise-domain-modeling","kind":"task"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail#Testing-the-edit-flow"}]}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Sync-up-detail"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Navigating-to-sync-up-detail","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-feature"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-view"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Navigating-to-the-detail"}]},{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#The-meeting-screen","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#Navigate-to-a-meeting","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation"},{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation#Deleting-a-sync-up","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Record-meeting","projects":[{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Create-a-new-feature","kind":"task"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Navigating-to-the-record-meeting-feature"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature"},{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#A-basic-timer","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Controlling-dependencies-early","kind":"task"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Ending-the-meeting-early"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Testing-the-timer"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer"},{"sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer"}]}],"paths":[["doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/$volume","doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/New-sync-up-form"]]},"references":{"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Ending-the-meeting-early":{"abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and","type":"text"},{"type":"text","text":" "},{"text":"we need to implement nuanced logic to figure out when to proceed to the next speaker.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/implementingtimer#Ending-the-meeting-early","type":"section","title":"Ending the meeting early","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Ending-the-meeting-early","kind":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/What-is-SyncUps-":{"kind":"article","type":"topic","role":"article","title":"What is SyncUps?","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/What-is-SyncUps-","url":"\/tutorials\/buildingsyncups\/what-is-syncups-"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps":{"kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps","estimatedTime":"5min","type":"topic","url":"\/tutorials\/composablearchitecture\/persistingsyncups","abstract":[{"type":"text","text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some"},{"text":" ","type":"text"},{"type":"text","text":"persistence. This will involve using the “shared state” tools from the library, such as"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","isActive":true,"overridingTitleInlineContent":[{"code":"@Shared","type":"codeVoice"}],"overridingTitle":"@Shared"},{"type":"text","text":" and "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decoder:encoder:)","type":"reference","isActive":true},{"type":"text","text":"."}],"role":"project","title":"Persisting sync-ups"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpDetail#Testing-the-edit-flow":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail#Testing-the-edit-flow","type":"section","url":"\/tutorials\/composablearchitecture\/testingsyncupdetail#Testing-the-edit-flow","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":" feature has slowly become quite complex. It now handles two forms of"},{"type":"text","text":" "},{"type":"text","text":"navigation (an alert and sheet), it models navigation state with a single enum, and it"},{"type":"text","text":" "},{"type":"text","text":"communicates with a parent feature via delegate actions. It’s about time we got some test"},{"type":"text","text":" "},{"text":"coverage on this feature so we can be sure it works as we expect, and so that we can make future","type":"text"},{"type":"text","text":" "},{"text":"changes with confidence.","type":"text"}],"role":"pseudoSymbol","title":"Testing the edit flow"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#Deleting-the-sync-up":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Deleting-the-sync-up","type":"section","url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#Deleting-the-sync-up","abstract":[{"text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"type":"text","text":" "},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}],"role":"pseudoSymbol","title":"Deleting the sync-up"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps#Create-the-SyncUps-project":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#Create-the-SyncUps-project","type":"section","url":"\/tutorials\/composablearchitecture\/whatissyncups#Create-the-SyncUps-project","abstract":[{"type":"text","text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a"},{"text":" ","type":"text"},{"type":"text","text":"recreation of Apple’s Scrumdinger demo application."}],"role":"pseudoSymbol","title":"Create the SyncUps project"},"TestingSyncUpForm-01-code-0002.swift":{"highlights":[{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22}],"fileName":"SyncUpFormTests.swift","fileType":"swift","syntax":"swift","content":["import ComposableArchitecture","import Testing","","@testable import SyncUps","","@MainActor","struct SyncUpFormTests {","  @Test","  func removeAttendee() async {","    let store = TestStore(","      initialState: SyncUpForm.State(","        syncUp: SyncUp(","          id: SyncUp.ID(),","          attendees: [","            Attendee(id: Attendee.ID()),","            Attendee(id: Attendee.ID())","          ]","        )","      )","    ) {","      SyncUpForm()","    }","  }","}"],"identifier":"TestingSyncUpForm-01-code-0002.swift","type":"file"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Testing-the-timer":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Testing-the-timer","type":"section","abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"text":" ","type":"text"},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"text":" ","type":"text"},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}],"url":"\/tutorials\/composablearchitecture\/implementingtimer#Testing-the-timer","role":"pseudoSymbol","title":"Testing the timer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/fileStorage(_:decoder:encoder:)":{"type":"topic","abstract":[{"type":"text","text":"Creates a persistence key that can read and write to a "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" value in the file system."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decoder:encoder:)","url":"\/documentation\/composablearchitecture\/persistencereaderkey\/filestorage(_:decoder:encoder:)","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fileStorage"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"text":", ","kind":"text"},{"text":"decoder","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC","text":"JSONDecoder"},{"kind":"text","text":", "},{"text":"encoder","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation11JSONEncoderC","kind":"typeIdentifier","text":"JSONEncoder"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","title":"fileStorage(_:decoder:encoder:)"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation":{"estimatedTime":"20min","kind":"project","type":"topic","role":"project","abstract":[{"type":"text","text":"We will wrap the application built so far in a "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" so that we can navigate to"},{"text":" ","type":"text"},{"type":"text","text":"the detail screen. To do this we will create a new root-level feature that will be responsible"},{"text":" ","type":"text"},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"title":"Navigating to a sync-up detail","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation","url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature":{"estimatedTime":"5min","kind":"project","type":"topic","role":"project","abstract":[{"type":"text","text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will"},{"type":"text","text":" "},{"type":"text","text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer."}],"title":"The RecordMeeting feature","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature","url":"\/tutorials\/composablearchitecture\/recordmeetingfeature"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list":{"kind":"section","type":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"text":" ","type":"text"},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"type":"text","text":" "},{"type":"text","text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}],"title":"Adding a new sync-up to the list","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list","url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Adding-a-new-sync-up-to-the-list"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingListOfSyncUps#Writing-your-first-test":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps#Writing-your-first-test","type":"section","url":"\/tutorials\/composablearchitecture\/testinglistofsyncups#Writing-your-first-test","abstract":[{"type":"text","text":"The SyncUpsList feature we have built so far isn’t very complex. In fact, it only has one"},{"type":"text","text":" "},{"type":"text","text":"primary action, that of deleting sync-ups from its collection. However, it can be good practice"},{"type":"text","text":" "},{"type":"text","text":"to test new features as you add them, and in the future we will have much more complicated"},{"text":" ","type":"text"},{"type":"text","text":"behavior to test."}],"role":"pseudoSymbol","title":"Writing your first test"},"TestingSyncUpForm-02-code-0006.swift":{"type":"file","fileType":"swift","highlights":[{"line":16},{"line":17}],"content":["import ComposableArchitecture","import Testing","","@testable import SyncUps","","@MainActor","struct SyncUpFormTests {","  @Test","  func addAttendee() async {","    let store = TestStore(","      initialState: SyncUpForm.State(","        syncUp: SyncUp(id: SyncUp.ID())","      )","    ) {","      SyncUpForm()","    } withDependencies: {","      $0.uuid = .incrementing","    }","","    await store.send(.addAttendeeButtonTapped) {","      let attendee = Attendee(id: Attendee.ID())","      $0.focus = .attendee(attendee.id)","      $0.syncUp.attendees.append(attendee)","    }","  }","","  @Test","  func removeFocusedAttendee() async {","    \/\/ ...","  }","","  @Test","  func removeAttendee() async {","    \/\/ ...","  }","}"],"identifier":"TestingSyncUpForm-02-code-0006.swift","fileName":"SyncUpFormTests.swift","syntax":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetail#Create-the-sync-up-detail":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail#Create-the-sync-up-detail","type":"section","url":"\/tutorials\/composablearchitecture\/syncupdetail#Create-the-sync-up-detail","abstract":[{"text":"The “sync-up detail” screen shows all the information of a sync-up, and has many actions that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"can take place in the screen. The user can edit the sync-up, or start a new meeting in the sync"},{"type":"text","text":" "},{"type":"text","text":"up, or drill-down to a past meeting, or even delete the meeting."}],"role":"pseudoSymbol","title":"Create the sync-up detail"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm#Removing-attendees":{"abstract":[{"text":"We now have a moderately complex feature for editing the details of a sync-up, the ","type":"text"},{"type":"codeVoice","code":"SyncUpForm"},{"text":" ","type":"text"},{"type":"text","text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come"},{"type":"text","text":" "},{"type":"text","text":"face-to-face with dependencies for the first time in this tutorial."}],"url":"\/tutorials\/composablearchitecture\/testingsyncupform#Removing-attendees","type":"section","title":"Removing attendees","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Removing-attendees","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Persisting-sync-ups-to-disk":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Persisting-sync-ups-to-disk","type":"topic","url":"\/tutorials\/buildingsyncups\/persisting-sync-ups-to-disk","abstract":[],"role":"article","title":"Persisting sync-ups to disk"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation":{"kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation","estimatedTime":"5min","type":"topic","url":"\/tutorials\/composablearchitecture\/meetingnavigation","abstract":[{"type":"text","text":"Now that we have a navigation stack in place we can start navigating to other features in the"},{"type":"text","text":" "},{"type":"text","text":"application. The simplest is the meeting screen, which allows you to see the details of a"},{"type":"text","text":" "},{"type":"text","text":"previous recorded meeting."}],"role":"project","title":"Navigating to a meeting"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingNavigation#Deleting-a-sync-up":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation#Deleting-a-sync-up","type":"section","abstract":[{"type":"text","text":"We have now implemented a navigation stack at the root of our application, and integrated"},{"text":" ","type":"text"},{"type":"text","text":"3 features into the stack: the "},{"code":"SyncUpsList","type":"codeVoice"},{"type":"text","text":" feature, the "},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":" feature, and the"},{"type":"text","text":" "},{"type":"codeVoice","code":"MeetingView"},{"type":"text","text":". Some of these features have quite complex logic binding them together, such as"},{"type":"text","text":" "},{"type":"text","text":"when one deletes a sync-up from the detail screen it should pop the screen off the stack."}],"url":"\/tutorials\/composablearchitecture\/testingnavigation#Deleting-a-sync-up","role":"pseudoSymbol","title":"Deleting a sync-up"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Sync-up-form-basics":{"kind":"section","type":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"type":"text","text":" "},{"type":"text","text":"feature to make things a little more interesting."}],"title":"Sync-up form basics","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Sync-up-form-basics","url":"\/tutorials\/composablearchitecture\/syncupform#Sync-up-form-basics"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetail":{"estimatedTime":"5min","kind":"project","type":"topic","role":"project","title":"Sync-up detail","abstract":[{"type":"text","text":"The “sync-up detail” screen shows all the information of a sync-up, and has many actions that"},{"type":"text","text":" "},{"type":"text","text":"can take place in the screen. The user can edit the sync-up, or start a new meeting in the sync"},{"type":"text","text":" "},{"text":"up, or drill-down to a past meeting, or even delete the meeting.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail","url":"\/tutorials\/composablearchitecture\/syncupdetail"},"TestingSyncUpForm-01-code-0003.swift":{"highlights":[{"line":23},{"line":24},{"line":25},{"line":26}],"fileName":"SyncUpFormTests.swift","fileType":"swift","syntax":"swift","content":["import ComposableArchitecture","import Testing","","@testable import SyncUps","","@MainActor","struct SyncUpFormTests {","  @Test","  func removeAttendee() async {","    let store = TestStore(","      initialState: SyncUpForm.State(","        syncUp: SyncUp(","          id: SyncUp.ID(),","          attendees: [","            Attendee(id: Attendee.ID()),","            Attendee(id: Attendee.ID())","          ]","        )","      )","    ) {","      SyncUpForm()","    }","","    await store.send(.onDeleteAttendees([0])) {","      $0.syncUp.attendees.removeFirst()","    }","  }","}"],"identifier":"TestingSyncUpForm-01-code-0003.swift","type":"file"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps":{"kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps","estimatedTime":"10min","type":"topic","url":"\/tutorials\/composablearchitecture\/listsofsyncups","abstract":[{"type":"text","text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the"},{"type":"text","text":" "},{"type":"text","text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as"},{"type":"text","text":" "},{"text":"the app evolves.","type":"text"}],"role":"project","title":"Lists of sync-ups"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#Domain-models":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#Domain-models","title":"Domain models","kind":"section","abstract":[{"text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the","type":"text"},{"type":"text","text":" "},{"text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the app evolves."}],"type":"section","url":"\/tutorials\/composablearchitecture\/listsofsyncups#Domain-models","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Form-focus-a-better-approach":{"kind":"section","type":"section","role":"pseudoSymbol","title":"Form focus: a better approach","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"text":" ","type":"text"},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"type":"text","text":" "},{"type":"text","text":"feature to make things a little more interesting."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-a-better-approach","url":"\/tutorials\/composablearchitecture\/syncupform#Form-focus-a-better-approach"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps#Persisting-data-to-disk":{"title":"Persisting data to disk","url":"\/tutorials\/composablearchitecture\/persistingsyncups#Persisting-data-to-disk","role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Persisting-data-to-disk","kind":"section","abstract":[{"type":"text","text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some"},{"text":" ","type":"text"},{"type":"text","text":"persistence. This will involve using the “shared state” tools from the library, such as"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","isActive":true,"overridingTitle":"@Shared","overridingTitleInlineContent":[{"type":"codeVoice","code":"@Shared"}]},{"text":" and ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decoder:encoder:)"},{"type":"text","text":"."}],"type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#More-concise-domain-modeling":{"kind":"section","type":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"text":" ","type":"text"},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"text":" ","type":"text"},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}],"title":"More concise domain modeling","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#More-concise-domain-modeling","url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#More-concise-domain-modeling"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Navigating-to-sync-up-detail":{"kind":"article","type":"topic","role":"article","abstract":[],"title":"Navigating to sync-up detail","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Navigating-to-sync-up-detail","url":"\/tutorials\/buildingsyncups\/navigating-to-sync-up-detail"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation":{"kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation","estimatedTime":"10min","type":"topic","url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation","abstract":[{"type":"text","text":"We have now integrated two moderately complex features, the "},{"code":"SyncUpsList","type":"codeVoice"},{"type":"text","text":" and "},{"code":"SyncUpForm","type":"codeVoice"},{"type":"text","text":", and"},{"type":"text","text":" "},{"type":"text","text":"so its time to write some tests. This will give us the opportunity to prove that the features"},{"type":"text","text":" "},{"type":"text","text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less"},{"type":"text","text":" "},{"type":"text","text":"fragile."}],"role":"project","title":"Testing the add sync-up flow"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Presenting-the-sync-up-form":{"kind":"article","type":"topic","role":"article","abstract":[],"title":"Presenting the sync-up form","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Presenting-the-sync-up-form","url":"\/tutorials\/buildingsyncups\/presenting-the-sync-up-form"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Creating-the-app-view":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-view","type":"section","url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Creating-the-app-view","abstract":[{"text":"We will wrap the application built so far in a ","type":"text"},{"code":"NavigationStack","type":"codeVoice"},{"type":"text","text":" so that we can navigate to"},{"type":"text","text":" "},{"type":"text","text":"the detail screen. To do this we will create a new root-level feature that will be responsible"},{"type":"text","text":" "},{"text":"for implementing the logic of the stack and integrating all of the features together.","type":"text"}],"role":"pseudoSymbol","title":"Creating the app view"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Navigating-to-the-detail":{"kind":"section","type":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"We will wrap the application built so far in a "},{"code":"NavigationStack","type":"codeVoice"},{"type":"text","text":" so that we can navigate to"},{"text":" ","type":"text"},{"type":"text","text":"the detail screen. To do this we will create a new root-level feature that will be responsible"},{"type":"text","text":" "},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"title":"Navigating to the detail","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Navigating-to-the-detail","url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Navigating-to-the-detail"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingNavigation":{"estimatedTime":"10min","kind":"project","type":"topic","role":"project","title":"Testing navigation","abstract":[{"type":"text","text":"We have now implemented a navigation stack at the root of our application, and integrated"},{"type":"text","text":" "},{"type":"text","text":"3 features into the stack: the "},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" feature, the "},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":" feature, and the"},{"type":"text","text":" "},{"code":"MeetingView","type":"codeVoice"},{"type":"text","text":". Some of these features have quite complex logic binding them together, such as"},{"text":" ","type":"text"},{"type":"text","text":"when one deletes a sync-up from the detail screen it should pop the screen off the stack."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation","url":"\/tutorials\/composablearchitecture\/testingnavigation"},"TestingSyncUpForm-02-code-0002.swift":{"type":"file","fileType":"swift","highlights":[{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22}],"content":["import ComposableArchitecture","import Testing","","@testable import SyncUps","","@MainActor","struct SyncUpFormTests {","  @Test","  func addAttendee() async {","    let store = TestStore(","      initialState: SyncUpForm.State(","        syncUp: SyncUp(id: SyncUp.ID())","      )","    ) {","      SyncUpForm()","    }","","    await store.send(.addAttendeeButtonTapped) {","      let attendee = Attendee(id: Attendee.ID())","      $0.focus = .attendee(attendee.id)","      $0.syncUp.attendees.append(attendee)","    }","  }","","  @Test","  func removeFocusedAttendee() async {","    \/\/ ...","  }","","  @Test","  func removeAttendee() async {","    \/\/ ...","  }","}"],"identifier":"TestingSyncUpForm-02-code-0002.swift","fileName":"SyncUpFormTests.swift","syntax":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation#Adding-a-sync-up":{"kind":"section","type":"section","role":"pseudoSymbol","title":"Adding a sync-up","abstract":[{"type":"text","text":"We have now integrated two moderately complex features, the "},{"code":"SyncUpsList","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":", and"},{"type":"text","text":" "},{"type":"text","text":"so its time to write some tests. This will give us the opportunity to prove that the features"},{"text":" ","type":"text"},{"type":"text","text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less"},{"type":"text","text":" "},{"type":"text","text":"fragile."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Adding-a-sync-up","url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation#Adding-a-sync-up"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm":{"kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm","estimatedTime":"10min","type":"topic","url":"\/tutorials\/composablearchitecture\/presentingsyncupform","abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"type":"text","text":" "},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"type":"text","text":" "},{"type":"text","text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}],"role":"project","title":"Presenting the sync-up form"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Sync-up-detail":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Sync-up-detail","type":"topic","url":"\/tutorials\/buildingsyncups\/sync-up-detail","abstract":[],"role":"article","title":"Sync-up detail"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingListOfSyncUps":{"estimatedTime":"5min","kind":"project","type":"topic","role":"project","title":"Testing the list of sync-ups","abstract":[{"type":"text","text":"The SyncUpsList feature we have built so far isn’t very complex. In fact, it only has one"},{"type":"text","text":" "},{"type":"text","text":"primary action, that of deleting sync-ups from its collection. However, it can be good practice"},{"type":"text","text":" "},{"type":"text","text":"to test new features as you add them, and in the future we will have much more complicated"},{"type":"text","text":" "},{"type":"text","text":"behavior to test."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps","url":"\/tutorials\/composablearchitecture\/testinglistofsyncups"},"TestingSyncUpForm-02-code-0003.swift":{"highlights":[{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38},{"line":39},{"line":40},{"line":41},{"line":42},{"line":43},{"line":44},{"line":45},{"line":46}],"fileName":"SyncUpFormTests.swift","fileType":"swift","syntax":"swift","content":["import ComposableArchitecture","import Testing","","@testable import SyncUps","","@MainActor","struct SyncUpFormTests {","  @Test","  func addAttendee() async {","    let store = TestStore(","      initialState: SyncUpForm.State(","        syncUp: SyncUp(id: SyncUp.ID())","      )","    ) {","      SyncUpForm()","    }","","    await store.send(.addAttendeeButtonTapped) {","      let attendee = Attendee(id: Attendee.ID())","      $0.focus = .attendee(attendee.id)","      $0.syncUp.attendees.append(attendee)","    }","    \/\/ ❌ A state change does not match expectation: …","    \/\/","    \/\/       SyncUpForm.State(","    \/\/         _focus: .attendee(","    \/\/     −     Tagged(rawValue: UUID(B7833D85-CFA3-49A8-9B4C-54A4084372F7))","    \/\/     +     Tagged(rawValue: UUID(AEF24FB1-BC0E-438A-85B8-1E045A9D8A88))","    \/\/         ),","    \/\/         _syncUp: SyncUp(","    \/\/           id: Tagged(rawValue: UUID(D8CCE06C-F6BB-4D3D-A61A-59DF5D603B07)),","    \/\/           attendees: [","    \/\/             [0]: Attendee(","    \/\/     −         id: Tagged(rawValue: UUID(B7833D85-CFA3-49A8-9B4C-54A4084372F7))","    \/\/     +         id: Tagged(rawValue: UUID(AEF24FB1-BC0E-438A-85B8-1E045A9D8A88))","    \/\/               name: \"\"","    \/\/             )","    \/\/           ],","    \/\/           duration: 5 minutes,","    \/\/           meetings: [],","    \/\/           theme: .bubblegum,","    \/\/           title: \"Engineering\"","    \/\/         )","    \/\/       )","    \/\/","    \/\/ (Expected: −, Actual: +)","  }","","  @Test","  func removeFocusedAttendee() async {","    \/\/ ...","  }","","  @Test","  func removeAttendee() async {","    \/\/ ...","  }","}"],"identifier":"TestingSyncUpForm-02-code-0003.swift","type":"file"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Controlling-dependencies-early":{"abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"text":" ","type":"text"},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}],"url":"\/tutorials\/composablearchitecture\/implementingtimer#Controlling-dependencies-early","type":"section","title":"Controlling dependencies early","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Controlling-dependencies-early","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#Editing-the-sync-up":{"kind":"section","type":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"type":"text","text":" "},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"type":"text","text":" "},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}],"title":"Editing the sync-up","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Editing-the-sync-up","url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#Editing-the-sync-up"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#SyncUpsList-feature":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#SyncUpsList-feature","type":"section","url":"\/tutorials\/composablearchitecture\/listsofsyncups#SyncUpsList-feature","abstract":[{"type":"text","text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the"},{"type":"text","text":" "},{"type":"text","text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as"},{"type":"text","text":" "},{"type":"text","text":"the app evolves."}],"role":"pseudoSymbol","title":"SyncUpsList feature"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps#Testing-persistence":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Testing-persistence","type":"section","url":"\/tutorials\/composablearchitecture\/persistingsyncups#Testing-persistence","abstract":[{"type":"text","text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some"},{"type":"text","text":" "},{"type":"text","text":"persistence. This will involve using the “shared state” tools from the library, such as"},{"type":"text","text":" "},{"overridingTitleInlineContent":[{"code":"@Shared","type":"codeVoice"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","type":"reference","isActive":true,"overridingTitle":"@Shared"},{"type":"text","text":" and "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decoder:encoder:)","isActive":true,"type":"reference"},{"type":"text","text":"."}],"role":"pseudoSymbol","title":"Testing persistence"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation#Non-exhaustive-testing":{"kind":"section","type":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"We have now integrated two moderately complex features, the "},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" and "},{"code":"SyncUpForm","type":"codeVoice"},{"type":"text","text":", and"},{"type":"text","text":" "},{"type":"text","text":"so its time to write some tests. This will give us the opportunity to prove that the features"},{"type":"text","text":" "},{"type":"text","text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less"},{"text":" ","type":"text"},{"type":"text","text":"fragile."}],"title":"Non-exhaustive testing","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Non-exhaustive-testing","url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation#Non-exhaustive-testing"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingSpeechRecognizer":{"estimatedTime":"10min","kind":"project","type":"topic","role":"project","abstract":[{"type":"text","text":"We have just one feature left to implement, and it’s one of the most complicated ones. We need"},{"type":"text","text":" "},{"type":"text","text":"to use Apple’s "},{"type":"codeVoice","code":"SFSpeechRecognizer"},{"type":"text","text":" API to ask the user for permission to transcribe their"},{"text":" ","type":"text"},{"type":"text","text":"audio, and then start a speech recognition task to live transcribe the meeting while it is"},{"text":" ","type":"text"},{"type":"text","text":"in progress."}],"title":"Adding a speech recognizer","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer","url":"\/tutorials\/composablearchitecture\/implementingspeechrecognizer"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpDetail":{"kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail","estimatedTime":"10min","type":"topic","url":"\/tutorials\/composablearchitecture\/testingsyncupdetail","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":" feature has slowly become quite complex. It now handles two forms of"},{"text":" ","type":"text"},{"type":"text","text":"navigation (an alert and sheet), it models navigation state with a single enum, and it"},{"type":"text","text":" "},{"type":"text","text":"communicates with a parent feature via delegate actions. It’s about time we got some test"},{"type":"text","text":" "},{"type":"text","text":"coverage on this feature so we can be sure it works as we expect, and so that we can make future"},{"text":" ","type":"text"},{"type":"text","text":"changes with confidence."}],"role":"project","title":"Testing the sync-up detail"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps#A-tour-of-SyncUps":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#A-tour-of-SyncUps","type":"section","url":"\/tutorials\/composablearchitecture\/whatissyncups#A-tour-of-SyncUps","abstract":[{"type":"text","text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a"},{"text":" ","type":"text"},{"type":"text","text":"recreation of Apple’s Scrumdinger demo application."}],"role":"pseudoSymbol","title":"A tour of SyncUps"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm#Adding-attendees":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Adding-attendees","title":"Adding attendees","kind":"section","abstract":[{"type":"text","text":"We now have a moderately complex feature for editing the details of a sync-up, the "},{"code":"SyncUpForm","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come"},{"type":"text","text":" "},{"text":"face-to-face with dependencies for the first time in this tutorial.","type":"text"}],"type":"section","url":"\/tutorials\/composablearchitecture\/testingsyncupform#Adding-attendees","role":"pseudoSymbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Shared":{"role":"symbol","title":"Shared","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Shared","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","navigatorTitle":[{"text":"Shared","kind":"identifier"}],"abstract":[{"type":"text","text":"A property wrapper type that shares a value with multiple parts of an application."}],"url":"\/documentation\/composablearchitecture\/shared"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer":{"estimatedTime":"25min","kind":"project","type":"topic","role":"project","title":"Adding a meeting timer","abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"text":"we need to implement nuanced logic to figure out when to proceed to the next speaker.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer","url":"\/tutorials\/composablearchitecture\/implementingtimer"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature#Create-a-new-feature":{"kind":"section","type":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will"},{"text":" ","type":"text"},{"type":"text","text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer."}],"title":"Create a new feature","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Create-a-new-feature","url":"\/tutorials\/composablearchitecture\/recordmeetingfeature#Create-a-new-feature"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm":{"estimatedTime":"10min","kind":"project","type":"topic","role":"project","abstract":[{"type":"text","text":"We now have a moderately complex feature for editing the details of a sync-up, the "},{"type":"codeVoice","code":"SyncUpForm"},{"text":" ","type":"text"},{"type":"text","text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come"},{"text":" ","type":"text"},{"type":"text","text":"face-to-face with dependencies for the first time in this tutorial."}],"title":"Testing the sync-up form","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm","url":"\/tutorials\/composablearchitecture\/testingsyncupform"},"TestingSyncUpForm-02-code-0007.swift":{"type":"file","fileType":"swift","highlights":[{"line":21},{"line":22}],"content":["import ComposableArchitecture","import Testing","","@testable import SyncUps","","@MainActor","struct SyncUpFormTests {","  @Test","  func addAttendee() async {","    let store = TestStore(","      initialState: SyncUpForm.State(","        syncUp: SyncUp(id: SyncUp.ID())","      )","    ) {","      SyncUpForm()","    } withDependencies: {","      $0.uuid = .incrementing","    }","","    await store.send(.addAttendeeButtonTapped) {","      $0.focus = .attendee(Attendee.ID(0))","      $0.syncUp.attendees.append(Attendee(id: Attendee.ID(0)))","    }","  }","","  @Test","  func removeFocusedAttendee() async {","    \/\/ ...","  }","","  @Test","  func removeAttendee() async {","    \/\/ ...","  }","}"],"identifier":"TestingSyncUpForm-02-code-0007.swift","fileName":"SyncUpFormTests.swift","syntax":"swift"},"TestingSyncUpForm-02-code-0001.swift":{"highlights":[{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19}],"fileName":"SyncUpFormTests.swift","fileType":"swift","syntax":"swift","content":["import ComposableArchitecture","import Testing","","@testable import SyncUps","","@MainActor","struct SyncUpFormTests {","  @Test","  func addAttendee() async {","    let store = TestStore(","      initialState: SyncUpForm.State(","        syncUp: SyncUp(id: SyncUp.ID())","      )","    ) {","      SyncUpForm()","    }","  }","","  @Test","  func removeFocusedAttendee() async {","    \/\/ ...","  }","","  @Test","  func removeAttendee() async {","    \/\/ ...","  }","}"],"identifier":"TestingSyncUpForm-02-code-0001.swift","type":"file"},"TestingSyncUpForm-02-code-0005.swift":{"type":"file","fileType":"swift","highlights":[{"line":31},{"line":46}],"content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpForm {","  @ObservableState","  struct State: Equatable {","    var focus: Field? = .title","    var syncUp: SyncUp","","    enum Field: Hashable {","      case attendee(Attendee.ID)","      case title","    }","  }","","  enum Action: BindableAction {","    case addAttendeeButtonTapped","    case binding(BindingAction<State>)","    case onDeleteAttendees(IndexSet)","  }","","  @Dependency(\\.uuid) var uuid","","  var body: some ReducerOf<Self> {","    BindingReducer()","","    Reduce { state, action in","      switch action {","      case .addAttendeeButtonTapped:","        let attendee = Attendee(id: uuid())","        state.syncUp.attendees.append(attendee)","        state.focus = .attendee(attendee.id)","        return .none","","      case .binding:","        return .none","","      case let .onDeleteAttendees(indices):","        state.syncUp.attendees.remove(atOffsets: indices)","        guard","          !state.syncUp.attendees.isEmpty,","          let firstIndex = indices.first","        else {","          state.syncUp.attendees.append(","            Attendee(id: uuid())","          )","          return .none","        }","        let index = min(firstIndex, state.syncUp.attendees.count - 1)","        state.focus = .attendee(state.syncUp.attendees[index].id)","        return .none","      }","    }","  }","}","","struct SyncUpFormView: View {","  \/\/ ...","}"],"identifier":"TestingSyncUpForm-02-code-0005.swift","fileName":"SyncUpForm.swift","syntax":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission":{"kind":"section","type":"section","role":"pseudoSymbol","title":"Asking for speech recognition permission","abstract":[{"type":"text","text":"We have just one feature left to implement, and it’s one of the most complicated ones. We need"},{"type":"text","text":" "},{"type":"text","text":"to use Apple’s "},{"type":"codeVoice","code":"SFSpeechRecognizer"},{"type":"text","text":" API to ask the user for permission to transcribe their"},{"type":"text","text":" "},{"type":"text","text":"audio, and then start a speech recognition task to live transcribe the meeting while it is"},{"text":" ","type":"text"},{"type":"text","text":"in progress."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission","url":"\/tutorials\/composablearchitecture\/implementingspeechrecognizer#Asking-for-speech-recognition-permission"},"TestingSyncUpForm-01-code-0004.swift":{"highlights":[{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25}],"fileName":"SyncUpFormTests.swift","fileType":"swift","syntax":"swift","content":["import ComposableArchitecture","import Testing","","@testable import SyncUps","","@MainActor","struct SyncUpFormTests {","  @Test","  func removeFocusedAttendee() async {","    let attendee1 = Attendee(id: Attendee.ID())","    let attendee2 = Attendee(id: Attendee.ID())","    let store = TestStore(","      initialState: SyncUpForm.State(","        focus: .attendee(attendee1.id),","        syncUp: SyncUp(","          id: SyncUp.ID(),","          attendees: [attendee1, attendee2]","        )","      )","    ) {","      SyncUpForm()","    }","  }","","  @Test","  func removeAttendee() async {","    \/\/ ...","  }","}"],"identifier":"TestingSyncUpForm-01-code-0004.swift","type":"file"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DependencyManagement":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement","url":"\/documentation\/composablearchitecture\/dependencymanagement","role":"article","title":"Dependencies","abstract":[{"type":"text","text":"Learn how to register dependencies with the library so that they can be immediately accessible from"},{"text":" ","type":"text"},{"type":"text","text":"any reducer."}],"type":"topic","kind":"article"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Form-focus-an-approach":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-an-approach","type":"section","url":"\/tutorials\/composablearchitecture\/syncupform#Form-focus-an-approach","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"text":" ","type":"text"},{"type":"text","text":"feature to make things a little more interesting."}],"role":"pseudoSymbol","title":"Form focus: an approach"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Lists-of-sync-ups":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Lists-of-sync-ups","type":"topic","abstract":[],"url":"\/tutorials\/buildingsyncups\/lists-of-sync-ups","role":"article","title":"Lists of sync-ups"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/New-sync-up-form":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/New-sync-up-form","type":"topic","url":"\/tutorials\/buildingsyncups\/new-sync-up-form","abstract":[],"role":"article","title":"New sync-up form"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps":{"kind":"overview","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","type":"topic","url":"\/tutorials\/buildingsyncups","abstract":[{"type":"text","text":"The SyncUps application is a recreation of one of Apple’s more interesting demo applications,"},{"text":" ","type":"text"},{"type":"text","text":"Scrumdinger. We recreate it from scratch using the Composable Architecture, with a focus on"},{"text":" ","type":"text"},{"type":"text","text":"domain modeling, controlling dependencies, and testability."}],"role":"overview","title":"Building SyncUps"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp":{"estimatedTime":"30min","kind":"project","type":"topic","role":"project","abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"text":" ","type":"text"},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"type":"text","text":" "},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}],"title":"Editing and deleting a sync-up","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp","url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup"},"TestingSyncUpForm-01-code-0005.swift":{"type":"file","fileType":"swift","highlights":[{"line":23},{"line":24},{"line":25},{"line":26},{"line":27}],"content":["import ComposableArchitecture","import Testing","","@testable import SyncUps","","@MainActor","struct SyncUpFormTests {","  @Test","  func removeFocusedAttendee() async {","    let attendee1 = Attendee(id: Attendee.ID())","    let attendee2 = Attendee(id: Attendee.ID())","    let store = TestStore(","      initialState: SyncUpForm.State(","        focus: .attendee(attendee1.id),","        syncUp: SyncUp(","          id: SyncUp.ID(),","          attendees: [attendee1, attendee2]","        )","      )","    ) {","      SyncUpForm()","    }","","    await store.send(.onDeleteAttendees([0])) {","      $0.focus = .attendee(attendee2.id)","      $0.syncUp.attendees = [attendee2]","    }","  }","","  @Test","  func removeAttendee() async {","    \/\/ ...","  }","}"],"identifier":"TestingSyncUpForm-01-code-0005.swift","fileName":"SyncUpFormTests.swift","syntax":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Integrating-the-feature-domains-together":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-domains-together","type":"section","abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"text":" ","type":"text"},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"text":" ","type":"text"},{"type":"text","text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}],"url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Integrating-the-feature-domains-together","role":"pseudoSymbol","title":"Integrating the feature domains together"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Creating-the-app-feature":{"abstract":[{"text":"We will wrap the application built so far in a ","type":"text"},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" so that we can navigate to"},{"type":"text","text":" "},{"text":"the detail screen. To do this we will create a new root-level feature that will be responsible","type":"text"},{"type":"text","text":" "},{"text":"for implementing the logic of the stack and integrating all of the features together.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Creating-the-app-feature","type":"section","title":"Creating the app feature","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-feature","kind":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps":{"estimatedTime":"5min","kind":"project","type":"topic","role":"project","title":"What is SyncUps?","abstract":[{"type":"text","text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a"},{"type":"text","text":" "},{"type":"text","text":"recreation of Apple’s Scrumdinger demo application."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps","url":"\/tutorials\/composablearchitecture\/whatissyncups"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#A-basic-timer":{"abstract":[{"text":"The first major piece of logic and behavior we will introduce to the record meeting feature is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"text":"we need to implement nuanced logic to figure out when to proceed to the next speaker.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/implementingtimer#A-basic-timer","type":"section","title":"A basic timer","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#A-basic-timer","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#A-handy-debugging-tool":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#A-handy-debugging-tool","type":"section","url":"\/tutorials\/composablearchitecture\/listsofsyncups#A-handy-debugging-tool","abstract":[{"text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the","type":"text"},{"type":"text","text":" "},{"text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the app evolves."}],"role":"pseudoSymbol","title":"A handy debugging tool"},"TestingSyncUpForm-01-code-0001.swift":{"highlights":[],"fileName":"SyncUpFormTests.swift","fileType":"swift","syntax":"swift","content":["import ComposableArchitecture","import Testing","","@testable import SyncUps","","@MainActor","struct SyncUpFormTests {","  @Test","  func removeAttendee() async {","","  }","}"],"identifier":"TestingSyncUpForm-01-code-0001.swift","type":"file"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation#Navigate-to-a-meeting":{"kind":"section","type":"section","role":"pseudoSymbol","title":"Navigate to a meeting","abstract":[{"text":"Now that we have a navigation stack in place we can start navigating to other features in the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"application. The simplest is the meeting screen, which allows you to see the details of a"},{"type":"text","text":" "},{"type":"text","text":"previous recorded meeting."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#Navigate-to-a-meeting","url":"\/tutorials\/composablearchitecture\/meetingnavigation#Navigate-to-a-meeting"},"TestingSyncUpForm-02-code-0004.swift":{"type":"file","fileType":"swift","highlights":[{"line":23},{"line":24}],"content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpForm {","  @ObservableState","  struct State: Equatable {","    var focus: Field? = .title","    var syncUp: SyncUp","","    enum Field: Hashable {","      case attendee(Attendee.ID)","      case title","    }","  }","","  enum Action: BindableAction {","    case addAttendeeButtonTapped","    case binding(BindingAction<State>)","    case onDeleteAttendees(IndexSet)","  }","","  @Dependency(\\.uuid) var uuid","","  var body: some ReducerOf<Self> {","    BindingReducer()","","    Reduce { state, action in","      switch action {","      case .addAttendeeButtonTapped:","        let attendee = Attendee(id: Attendee.ID())","        state.syncUp.attendees.append(attendee)","        state.focus = .attendee(attendee.id)","        return .none","","      case .binding:","        return .none","","      case let .onDeleteAttendees(indices):","        state.syncUp.attendees.remove(atOffsets: indices)","        guard","          !state.syncUp.attendees.isEmpty,","          let firstIndex = indices.first","        else {","          state.syncUp.attendees.append(","            Attendee(id: Attendee.ID())","          )","          return .none","        }","        let index = min(firstIndex, state.syncUp.attendees.count - 1)","        state.focus = .attendee(state.syncUp.attendees[index].id)","        return .none","      }","    }","  }","}","","struct SyncUpFormView: View {","  \/\/ ...","}"],"identifier":"TestingSyncUpForm-02-code-0004.swift","fileName":"SyncUpForm.swift","syntax":"swift"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Record-meeting":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Record-meeting","title":"Record meeting","kind":"article","abstract":[],"type":"topic","url":"\/tutorials\/buildingsyncups\/record-meeting","role":"article"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation#The-meeting-screen":{"kind":"section","type":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"Now that we have a navigation stack in place we can start navigating to other features in the"},{"text":" ","type":"text"},{"type":"text","text":"application. The simplest is the meeting screen, which allows you to see the details of a"},{"text":" ","type":"text"},{"type":"text","text":"previous recorded meeting."}],"title":"The meeting screen","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#The-meeting-screen","url":"\/tutorials\/composablearchitecture\/meetingnavigation#The-meeting-screen"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Testing#Non-exhaustive-testing":{"abstract":[],"url":"\/documentation\/composablearchitecture\/testing#Non-exhaustive-testing","type":"topic","title":"Non-exhaustive testing","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Testing#Non-exhaustive-testing"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature#Navigating-to-the-record-meeting-feature":{"abstract":[{"type":"text","text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will"},{"type":"text","text":" "},{"text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/recordmeetingfeature#Navigating-to-the-record-meeting-feature","type":"section","title":"Navigating to the record meeting feature","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Navigating-to-the-record-meeting-feature","kind":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm":{"estimatedTime":"15min","kind":"project","type":"topic","role":"project","title":"Sync-up form","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"text":" ","type":"text"},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"text":" ","type":"text"},{"type":"text","text":"feature to make things a little more interesting."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm","url":"\/tutorials\/composablearchitecture\/syncupform"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"url":"\/documentation\/composablearchitecture\/teststore","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TestStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"title":"TestStore","kind":"symbol","navigatorTitle":[{"text":"TestStore","kind":"identifier"}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Integrating-the-feature-views-together":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-views-together","type":"section","url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Integrating-the-feature-views-together","abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"text":" ","type":"text"},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"type":"text","text":" "},{"type":"text","text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}],"role":"pseudoSymbol","title":"Integrating the feature views together"}}}