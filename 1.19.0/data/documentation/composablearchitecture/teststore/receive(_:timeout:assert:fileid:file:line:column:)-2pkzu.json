{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"]]},"metadata":{"extendedModule":"ComposableArchitecture","symbolKind":"method","externalID":"s:22ComposableArchitecture9TestStoreCAASQR_rlE7receive_7timeout6assert6fileID0H04line6columnyq__s8DurationVyxzKcSgs12StaticStringVAOS2utYaF","platforms":[{"introducedAt":"16.0","unavailable":false,"deprecated":false,"name":"iOS","beta":false},{"name":"macOS","introducedAt":"13.0","unavailable":false,"beta":false,"deprecated":false},{"beta":false,"deprecated":false,"name":"tvOS","introducedAt":"16.0","unavailable":false},{"name":"watchOS","deprecated":false,"beta":false,"introducedAt":"9.0","unavailable":false}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"State","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Action"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"receive","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":": "},{"text":"Duration","preciseIdentifier":"s:s8DurationV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"assert","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")?, ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"modules":[{"name":"ComposableArchitecture"}],"role":"symbol","roleHeading":"Instance Method","title":"receive(_:timeout:assert:fileID:file:line:column:)"},"abstract":[{"text":"Asserts an action was received from an effect and asserts how the state changes.","type":"text"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/teststore\/receive(_:timeout:assert:fileid:file:line:column:)-2pkzu"]}],"kind":"symbol","identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/receive(_:timeout:assert:fileID:file:line:column:)-2pkzu","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","preciseIdentifier":"s:ScM","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"receive","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"expectedAction","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":" "},{"kind":"internalParam","text":"duration"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:s8DurationV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"assert"},{"text":" ","kind":"text"},{"text":"updateStateToExpectedResult","kind":"internalParam"},{"kind":"text","text":": (("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")? = nil, ","kind":"text"},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#fileID"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"filePath"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":" = ","kind":"text"},{"text":"#filePath","kind":"keyword"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":" = "},{"text":"#line","kind":"keyword"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"kind":"keyword","text":"#column"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"An action expected from an effect."}],"type":"paragraph"}],"name":"expectedAction"},{"name":"duration","content":[{"inlineContent":[{"text":"The amount of time to wait for the expected action.","type":"text"}],"type":"paragraph"}]},{"name":"updateStateToExpectedResult","content":[{"inlineContent":[{"type":"text","text":"A closure that asserts state changed by sending the action"},{"text":" ","type":"text"},{"text":"to the store. The mutable state sent to this closure must be modified to match the state","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of the store after processing the given action. Do not provide a closure if no change"},{"text":" ","type":"text"},{"type":"text","text":"is expected."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The fileID.","type":"text"}]}],"name":"fileID"},{"name":"filePath","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The filePath."}]}]},{"name":"line","content":[{"type":"paragraph","inlineContent":[{"text":"The line.","type":"text"}]}]},{"name":"column","content":[{"inlineContent":[{"type":"text","text":"The column."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"inlineContent":[{"text":"When an effect is executed in your feature and sends an action back into the system, you can","type":"text"},{"type":"text","text":" "},{"text":"use this method to assert that fact, and further assert how state changes after the effect","type":"text"},{"type":"text","text":" "},{"type":"text","text":"action is received:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["await store.send(.buttonTapped)","await store.receive(.response(.success(42)) {","  $0.count = 42","}"]},{"inlineContent":[{"type":"text","text":"Due to the variability of concurrency in Swift, sometimes a small amount of time needs to pass"},{"type":"text","text":" "},{"text":"before effects execute and send actions, and that is why this method suspends. The default","type":"text"},{"text":" ","type":"text"},{"text":"time waited is very small, and typically it is enough so you should be controlling your","type":"text"},{"type":"text","text":" "},{"text":"dependencies so that they do not wait for real world time to pass (see","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement","isActive":true},{"type":"text","text":" for more information on how to do that)."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"To change the amount of time this method waits for an action, pass an explicit "},{"type":"codeVoice","code":"timeout"},{"type":"text","text":" "},{"type":"text","text":"argument, or set the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/timeout","isActive":true},{"type":"text","text":" on the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"},{"type":"text","text":"."}],"type":"paragraph"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TestStore"}],"type":"topic","url":"\/documentation\/composablearchitecture\/teststore","kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","title":"TestStore","navigatorTitle":[{"text":"TestStore","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"kind":"symbol","title":"ComposableArchitecture","type":"topic","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DependencyManagement":{"url":"\/documentation\/composablearchitecture\/dependencymanagement","title":"Dependencies","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement","role":"article","kind":"article","abstract":[{"type":"text","text":"Learn how to register dependencies with the library so that they can be immediately accessible from"},{"type":"text","text":" "},{"type":"text","text":"any reducer."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/receive(_:timeout:assert:fileID:file:line:column:)-2pkzu":{"role":"symbol","url":"\/documentation\/composablearchitecture\/teststore\/receive(_:timeout:assert:fileid:file:line:column:)-2pkzu","conformance":{"constraints":[{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"text":" and ","type":"text"},{"code":"Action","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/receive(_:timeout:assert:fileID:file:line:column:)-2pkzu","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"receive","kind":"identifier"},{"kind":"text","text":"("},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"timeout","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s8DurationV","text":"Duration","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"assert","kind":"externalParam"},{"text":": ((","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"State"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"abstract":[{"type":"text","text":"Asserts an action was received from an effect and asserts how the state changes."}],"title":"receive(_:timeout:assert:fileID:file:line:column:)","kind":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/timeout":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"timeout","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V","text":"UInt64"}],"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/teststore\/timeout","title":"timeout","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/timeout","abstract":[{"type":"text","text":"The default timeout used in all methods that take an optional timeout."}]}}}