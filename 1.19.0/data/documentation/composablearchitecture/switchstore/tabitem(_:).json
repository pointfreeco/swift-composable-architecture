{"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"role":"symbol","platforms":[{"name":"iOS","message":"Use `Tab(title:image:value:content:)` and related initializers instead","deprecated":false,"unavailable":false,"beta":false,"introducedAt":"13.0","deprecatedAt":"100000.0"},{"introducedAt":"10.15","message":"Use `Tab(title:image:value:content:)` and related initializers instead","name":"macOS","beta":false,"deprecatedAt":"100000.0","deprecated":false,"unavailable":false},{"deprecated":false,"unavailable":false,"name":"tvOS","deprecatedAt":"100000.0","beta":false,"introducedAt":"13.0","message":"Use `Tab(title:image:value:content:)` and related initializers instead"},{"unavailable":false,"message":"Use `Tab(title:image:value:content:)` and related initializers instead","name":"watchOS","introducedAt":"7.0","deprecated":false,"beta":false,"deprecatedAt":"100000.0"}],"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"tabItem","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"text":">(() -> ","kind":"text"},{"kind":"typeIdentifier","text":"V"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"symbolKind":"method","extendedModule":"SwiftUICore","externalID":"s:7SwiftUI4ViewPAAE7tabItemyQrqd__yXEAaBRd__lF::SYNTHESIZED::s:22ComposableArchitecture11SwitchStoreV","title":"tabItem(_:)"},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use `Tab(title:image:value:content:)` and related initializers instead"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/switchstore\/tabitem(_:)"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations"]]},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.tabItem(_:)"},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/tabItem(_:)","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"nonisolated"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"tabItem"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"text":"@","kind":"attribute"},{"kind":"attribute","text":"ViewBuilder","preciseIdentifier":"s:7SwiftUI11ViewBuilderV"},{"text":" ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"label"},{"text":": () -> ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"kind":"text","text":"\n"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"kind":"symbol","title":"ComposableArchitecture","type":"topic","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"url":"\/documentation\/composablearchitecture\/switchstore","type":"topic","abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"type":"text","text":" views."}],"title":"SwitchStore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SwitchStore","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"deprecated":true,"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"url":"\/documentation\/composablearchitecture\/swiftuideprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","role":"collectionGroup","kind":"article","title":"Deprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"role":"collectionGroup","type":"topic","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/View-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations","url":"\/documentation\/composablearchitecture\/switchstore\/view-implementations","type":"topic","title":"View Implementations","abstract":[],"role":"collectionGroup","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/tabItem(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"tabItem"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"text":">(() -> ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"deprecated":true,"url":"\/documentation\/composablearchitecture\/switchstore\/tabitem(_:)","abstract":[],"type":"topic","title":"tabItem(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/tabItem(_:)","kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"url":"\/documentation\/composablearchitecture\/caselet","type":"topic","abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","type":"reference"},{"type":"text","text":"."}],"title":"CaseLet","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CaseLet","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"deprecated":true,"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"}}}