{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm"},"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/composablearchitecture\/testingsyncupform"]}],"kind":"project","metadata":{"title":"Testing the sync-up form","category":"Building SyncUps","role":"project","categoryPathComponent":"BuildingSyncUps"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/$volume","doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/New-sync-up-form"]],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","modules":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/What-is-SyncUps-","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#A-tour-of-SyncUps"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#Create-the-SyncUps-project"}]}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Lists-of-sync-ups","projects":[{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#Domain-models","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#SyncUpsList-feature","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#A-handy-debugging-tool","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps"},{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps#Writing-your-first-test","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/New-sync-up-form","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Sync-up-form-basics","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-an-approach","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-a-better-approach","kind":"task"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Removing-attendees","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Adding-attendees","kind":"task"}]}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Presenting-the-sync-up-form","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-domains-together","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-views-together","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list","kind":"task"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Adding-a-sync-up"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Non-exhaustive-testing"}]}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Persisting-sync-ups-to-disk","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Persisting-data-to-disk"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Testing-persistence"}]}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Sync-up-detail","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail#Create-the-sync-up-detail","kind":"task"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Editing-the-sync-up"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Deleting-the-sync-up"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#More-concise-domain-modeling"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail#Testing-the-edit-flow","kind":"task"}]}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Navigating-to-sync-up-detail","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-feature","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-view","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Navigating-to-the-detail","kind":"task"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#The-meeting-screen","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#Navigate-to-a-meeting","kind":"task"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation#Deleting-a-sync-up"}]}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Record-meeting","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Create-a-new-feature","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Navigating-to-the-record-meeting-feature","kind":"task"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#A-basic-timer","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Controlling-dependencies-early","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Ending-the-meeting-early","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Testing-the-timer","kind":"task"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission"}]}]}]},"sections":[{"estimatedTimeInMinutes":10,"content":[{"inlineContent":[{"type":"text","text":"We now have a moderately complex feature for editing the details of a sync-up, the "},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":" "},{"type":"text","text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come"},{"type":"text","text":" "},{"type":"text","text":"face-to-face with dependencies for the first time in this tutorial."}],"type":"paragraph"}],"kind":"hero","title":"Testing the sync-up form","chapter":"New sync-up form"},{"tasks":[{"stepsSection":[{"runtimePreview":null,"code":"TestingSyncUpForm-01-code-0001.swift","type":"step","content":[{"inlineContent":[{"type":"text","text":"Create a new test file called SyncUpFormTests.swift and paste in some basic scaffolding for"},{"type":"text","text":" "},{"type":"text","text":"a new test case."}],"type":"paragraph"}],"caption":[],"media":null},{"runtimePreview":null,"code":"TestingSyncUpForm-01-code-0002.swift","type":"step","content":[{"inlineContent":[{"type":"text","text":"Construct a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"},{"type":"text","text":" with the initial state that has two"},{"type":"text","text":" "},{"type":"text","text":"attendees so that we can delete one of them."}],"type":"paragraph"}],"caption":[],"media":null},{"runtimePreview":null,"code":"TestingSyncUpForm-01-code-0003.swift","type":"step","content":[{"inlineContent":[{"type":"text","text":"Emulate the user deleting the attendee by sending the "},{"type":"codeVoice","code":"onDeleteAttendees"},{"type":"text","text":" action and assert"},{"type":"text","text":" "},{"type":"text","text":"that the attendee is indeed removed from the array, leaving only the other attendee in the"},{"type":"text","text":" "},{"type":"text","text":"array."}],"type":"paragraph"}],"caption":[],"media":null},{"inlineContent":[{"type":"text","text":"Run the test suite to make sure everything passes."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"That’s all it takes to test the very basic functionality of removing an attendee. But there’s"},{"type":"text","text":" "},{"type":"text","text":"additional logic that we haven’t yet covered in the test, which is how the focus changes."},{"type":"text","text":" "},{"type":"text","text":"Let’s also test that logic."}],"type":"paragraph"},{"runtimePreview":null,"code":"TestingSyncUpForm-01-code-0004.swift","type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a new test method for testing what happens when we delete a focused attendee. This time"},{"type":"text","text":" "},{"type":"text","text":"the initial state will start with two attendees, which have been pulled out into variables"},{"type":"text","text":" "},{"type":"text","text":"so that we can reference them. The first attendee will also be focused."}]}],"caption":[{"style":"note","name":"Note","content":[{"inlineContent":[{"type":"text","text":"We have collapsed the "},{"type":"codeVoice","code":"removeAttendee"},{"type":"text","text":" test method in the code snippet."}],"type":"paragraph"}],"type":"aside"}],"media":null},{"caption":[],"media":null,"code":"TestingSyncUpForm-01-code-0005.swift","type":"step","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Emulate the user deleting the first attendee by sending the "},{"type":"codeVoice","code":"onDeleteAttendees"},{"type":"text","text":" action."},{"type":"text","text":" "},{"type":"text","text":"This time the state will change a little differently. The "},{"type":"codeVoice","code":"attendees"},{"text":" array will hold a","type":"text"},{"text":" ","type":"text"},{"text":"single element, the 2nd attendee, and further the focus will change to the 2nd attendee.","type":"text"}]}]},{"type":"paragraph","inlineContent":[{"text":"Run the test suite to make sure everything passes.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"We have now verified that the focus correctly changes when removing an attendee. There is"},{"type":"text","text":" "},{"type":"text","text":"still an edge case we have not tested. What happens when there are two attendees, neither of"},{"type":"text","text":" "},{"type":"text","text":"which is focused, and you delete one? We would expect that the focus does "},{"type":"emphasis","inlineContent":[{"text":"not","type":"text"}]},{"type":"text","text":" change, but"},{"type":"text","text":" "},{"type":"text","text":"the best way to prove that is to write a test. We leave that test as an exercise for the"},{"type":"text","text":" "},{"type":"text","text":"reader."}]}],"title":"Removing attendees","contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The first significant logic we added to our feature was that of adding and removing attendees."},{"type":"text","text":" "},{"type":"text","text":"Let’s start by testing the logic for removing attendees since it’s quite similar to what"},{"type":"text","text":" "},{"type":"text","text":"we already did in "},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" feature."}]}]}],"anchor":"Removing-attendees"},{"stepsSection":[{"caption":[],"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a new test method for testing the flow of adding a new attendee. We can start in an"},{"type":"text","text":" "},{"type":"text","text":"initial state with no attendees."}]}],"code":"TestingSyncUpForm-02-code-0001.swift","media":null,"runtimePreview":null},{"caption":[],"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Emulate the user tapping on “Add attendee” button by sending the ","type":"text"},{"code":"addAttendeeButtonTapped","type":"codeVoice"},{"text":" ","type":"text"},{"text":"action. When the action is sent we expect the state to be mutated in a way that causes","type":"text"},{"text":" ","type":"text"},{"text":"an attendee to be added to the ","type":"text"},{"code":"attendees","type":"codeVoice"},{"text":" array, and the focus should also point at that","type":"text"},{"text":" ","type":"text"},{"text":"new attendee.","type":"text"}]}],"code":"TestingSyncUpForm-02-code-0002.swift","media":null,"runtimePreview":null},{"caption":[],"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Run the test suite to see that it unfortunately fails. The reason it fails is because in the","type":"text"},{"text":" ","type":"text"},{"text":"reducer we are reaching out to an uncontrolled dependency for generating attendee IDs, which","type":"text"},{"text":" ","type":"text"},{"text":"are UUIDs under the hood.","type":"text"}]}],"code":"TestingSyncUpForm-02-code-0003.swift","media":null,"runtimePreview":null},{"type":"paragraph","inlineContent":[{"text":"There are two ways one can fix this test. You can use the library’s “non-exhaustive” testing","type":"text"},{"text":" ","type":"text"},{"text":"tools (see ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestingTCA#Non-exhaustive-testing","type":"reference"},{"text":" for more info), which allows you to assert","type":"text"},{"text":" ","type":"text"},{"text":"on only the bits of state you care about. That can be handy, but we don’t feel it is","type":"text"},{"text":" ","type":"text"},{"text":"appropriate in such a simple feature like ","type":"text"},{"code":"SyncUpForm","type":"codeVoice"},{"text":". We think non-exhaustive testing is","type":"text"},{"text":" ","type":"text"},{"text":"best saved for testing the integration of features, and that exhaustive testing is best for","type":"text"},{"text":" ","type":"text"},{"text":"testing isolated, leaf features.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The other way to test this feature is to control our feature’s dependence on UUID generation."},{"type":"text","text":" "},{"type":"text","text":"That way we can predict what UUIDs will be generated during the test, and then we will be"},{"type":"text","text":" "},{"type":"text","text":"able to write a passing, fully exhaustive test. And luckily the Composable Architecture comes"},{"type":"text","text":" "},{"type":"text","text":"with a full dependency management system (see "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement","isActive":true},{"type":"text","text":" for more info) that"},{"type":"text","text":" "},{"type":"text","text":"makes it very easy to control and override dependencies."}]},{"caption":[],"type":"step","content":[{"inlineContent":[{"text":"Go back to SyncUpForm.swift, where the reducer is implemented, and add a new property to the","type":"text"},{"text":" ","type":"text"},{"code":"SyncUpForm","type":"codeVoice"},{"text":" type. It will use the ","type":"text"},{"code":"@Dependency","type":"codeVoice"},{"text":" property wrapper to express that the","type":"text"},{"text":" ","type":"text"},{"text":"feature has a dependency, and we will provide the key path ","type":"text"},{"code":"\\.uuid","type":"codeVoice"},{"text":" to denote the dependence","type":"text"},{"text":" ","type":"text"},{"text":"on UUID generation.","type":"text"}],"type":"paragraph"}],"code":"TestingSyncUpForm-02-code-0004.swift","media":null,"runtimePreview":null},{"caption":[],"type":"step","content":[{"inlineContent":[{"type":"text","text":"Then, in the reducer’s logic, any place we reached out to the uncontrolled UUID generator,"},{"type":"text","text":" "},{"type":"text","text":"for example "},{"type":"codeVoice","code":"Attendee.ID()"},{"type":"text","text":", we will instead use the "},{"type":"codeVoice","code":"uuid"},{"type":"text","text":" dependency."}],"type":"paragraph"}],"code":"TestingSyncUpForm-02-code-0005.swift","media":null,"runtimePreview":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"With that one change, if you were to run the test suite again you would get the same test"},{"type":"text","text":" "},{"type":"text","text":"failures as before, but there would also be a new one letting you know that the"},{"type":"text","text":" "},{"type":"codeVoice","code":"uuid"},{"type":"text","text":" dependency was used in a testing context without being overridden. That is a great"},{"type":"text","text":" "},{"type":"text","text":"test failure to have because it keeps you from accidentally using live dependencies in a"},{"type":"text","text":" "},{"type":"text","text":"testing context, which can be very problematic for things like API clients, analytics,"},{"type":"text","text":" "},{"type":"text","text":"and more."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To fix this we will override the "},{"type":"codeVoice","code":"uuid"},{"type":"text","text":" dependency when when construct the "},{"type":"codeVoice","code":"TestStore"},{"type":"text","text":" in the"},{"type":"text","text":" "},{"type":"text","text":"test."}]},{"caption":[],"type":"step","content":[{"inlineContent":[{"text":"The initializer on ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","type":"reference"},{"text":" has an optional trailing closure","type":"text"},{"text":" ","type":"text"},{"text":"that can be provided to override any dependencies for the test. Use it to override the","type":"text"},{"text":" ","type":"text"},{"code":"uuid","type":"codeVoice"},{"text":" dependency with an “incrementing” UUID generator. This is a generator that when","type":"text"},{"text":" ","type":"text"},{"text":"invoked simply chooses the next UUID starting at 00000000-0000-0000-0000-000000000000.","type":"text"}],"type":"paragraph"}],"code":"TestingSyncUpForm-02-code-0006.swift","media":null,"runtimePreview":null},{"caption":[],"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We can now deterministically predict the UUID that will be generated for the new attendee"},{"type":"text","text":" "},{"type":"text","text":"when the button is tapped. It will be 00000000-0000-0000-0000-0000000000000000, but there"},{"type":"text","text":" "},{"type":"text","text":"is also a helper on "},{"type":"codeVoice","code":"UUID"},{"type":"text","text":" provided to generate a UUID from an integer."}]}],"code":"TestingSyncUpForm-02-code-0007.swift","media":null,"runtimePreview":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Run the test suite to see that it passes. We now have a lot of test coverage on adding"},{"type":"text","text":" "},{"type":"text","text":"and removing attendees, and how the focus changes during those actions. There is one more"},{"type":"text","text":" "},{"type":"text","text":"edge case that we do not have test coverage for: removing the last attendee. We had added"},{"type":"text","text":" "},{"type":"text","text":"extra logic in the reducer so that when you remove the last attendee we insert a new one so"},{"type":"text","text":" "},{"type":"text","text":"that the list is never empty. We leave writing a test for that scenario as an exercise for the"},{"type":"text","text":" "},{"type":"text","text":"reader."}]}],"title":"Adding attendees","contentSection":[{"mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"text":"Let’s move on to the next bit of functionality in the feature: adding an attendee. This turns","type":"text"},{"text":" ","type":"text"},{"text":"out to be trickier than you might expect due to an uncontrolled dependency.","type":"text"}]}],"kind":"contentAndMedia"}],"anchor":"Adding-attendees"}],"kind":"tasks"},{"action":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm","overridingTitleInlineContent":[{"text":"Get started","type":"text"}],"type":"reference","overridingTitle":"Get started","isActive":true},"featuredEyebrow":"Tutorial","kind":"callToAction","title":"Presenting the sync-up form","abstract":[{"text":"We now have two features built: the sync-ups list and the sync-up form. These features do not","type":"text"},{"text":" ","type":"text"},{"text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to","type":"text"},{"text":" ","type":"text"},{"text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then","type":"text"},{"text":" ","type":"text"},{"text":"add that sync-up to the root list.","type":"text"}]}],"references":{"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Creating-the-app-feature":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-feature","title":"Creating the app feature","url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Creating-the-app-feature","type":"section","abstract":[{"type":"text","text":"We will wrap the application built so far in a "},{"code":"NavigationStack","type":"codeVoice"},{"type":"text","text":" so that we can navigate to"},{"type":"text","text":" "},{"type":"text","text":"the detail screen. To do this we will create a new root-level feature that will be responsible"},{"type":"text","text":" "},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"role":"pseudoSymbol","kind":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Form-focus-an-approach":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-an-approach","title":"Form focus: an approach","url":"\/tutorials\/composablearchitecture\/syncupform#Form-focus-an-approach","type":"section","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"type":"text","text":" "},{"type":"text","text":"feature to make things a little more interesting."}],"role":"pseudoSymbol","kind":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps#Create-the-SyncUps-project":{"type":"section","title":"Create the SyncUps project","abstract":[{"type":"text","text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a"},{"type":"text","text":" "},{"type":"text","text":"recreation of Apple’s Scrumdinger demo application."}],"role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/whatissyncups#Create-the-SyncUps-project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#Create-the-SyncUps-project","kind":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation#Non-exhaustive-testing":{"abstract":[{"type":"text","text":"We have now integrated two moderately complex features, the "},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" and "},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":", and"},{"type":"text","text":" "},{"type":"text","text":"so its time to write some tests. This will give us the opportunity to prove that the features"},{"type":"text","text":" "},{"type":"text","text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less"},{"type":"text","text":" "},{"type":"text","text":"fragile."}],"type":"section","title":"Non-exhaustive testing","role":"pseudoSymbol","kind":"section","url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation#Non-exhaustive-testing","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Non-exhaustive-testing"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps":{"kind":"project","role":"project","url":"\/tutorials\/composablearchitecture\/listsofsyncups","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps","abstract":[{"text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the","type":"text"},{"text":" ","type":"text"},{"text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as","type":"text"},{"text":" ","type":"text"},{"text":"the app evolves.","type":"text"}],"estimatedTime":"10min","title":"Lists of sync-ups"},"TestingSyncUpForm-01-code-0005.swift":{"type":"file","fileName":"SyncUpFormTests.swift","content":["import ComposableArchitecture","import Testing","","@testable import SyncUps","","@MainActor","struct SyncUpFormTests {","  @Test","  func removeFocusedAttendee() async {","    let attendee1 = Attendee(id: Attendee.ID())","    let attendee2 = Attendee(id: Attendee.ID())","    let store = TestStore(","      initialState: SyncUpForm.State(","        focus: .attendee(attendee1.id),","        syncUp: SyncUp(","          id: SyncUp.ID(),","          attendees: [attendee1, attendee2]","        )","      )","    ) {","      SyncUpForm()","    }","","    await store.send(.onDeleteAttendees([0])) {","      $0.focus = .attendee(attendee2.id)","      $0.syncUp.attendees = [attendee2]","    }","  }","","  @Test","  func removeAttendee() async {","    \/\/ ...","  }","}"],"fileType":"swift","highlights":[{"line":23},{"line":24},{"line":25},{"line":26},{"line":27}],"identifier":"TestingSyncUpForm-01-code-0005.swift","syntax":"swift"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/What-is-SyncUps-":{"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/What-is-SyncUps-","role":"article","kind":"article","url":"\/tutorials\/buildingsyncups\/what-is-syncups-","title":"What is SyncUps?","type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature#Create-a-new-feature":{"role":"pseudoSymbol","title":"Create a new feature","url":"\/tutorials\/composablearchitecture\/recordmeetingfeature#Create-a-new-feature","type":"section","abstract":[{"text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will","type":"text"},{"text":" ","type":"text"},{"text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Create-a-new-feature","kind":"section"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Lists-of-sync-ups":{"title":"Lists of sync-ups","type":"topic","role":"article","kind":"article","abstract":[],"url":"\/tutorials\/buildingsyncups\/lists-of-sync-ups","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Lists-of-sync-ups"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation":{"url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation","title":"Testing the add sync-up flow","abstract":[{"type":"text","text":"We have now integrated two moderately complex features, the "},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" and "},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":", and"},{"type":"text","text":" "},{"type":"text","text":"so its time to write some tests. This will give us the opportunity to prove that the features"},{"type":"text","text":" "},{"type":"text","text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less"},{"type":"text","text":" "},{"type":"text","text":"fragile."}],"kind":"project","role":"project","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation","estimatedTime":"10min"},"TestingSyncUpForm-02-code-0003.swift":{"fileName":"SyncUpFormTests.swift","syntax":"swift","content":["import ComposableArchitecture","import Testing","","@testable import SyncUps","","@MainActor","struct SyncUpFormTests {","  @Test","  func addAttendee() async {","    let store = TestStore(","      initialState: SyncUpForm.State(","        syncUp: SyncUp(id: SyncUp.ID())","      )","    ) {","      SyncUpForm()","    }","","    await store.send(.addAttendeeButtonTapped) {","      let attendee = Attendee(id: Attendee.ID())","      $0.focus = .attendee(attendee.id)","      $0.syncUp.attendees.append(attendee)","    }","    \/\/ ❌ A state change does not match expectation: …","    \/\/","    \/\/       SyncUpForm.State(","    \/\/         _focus: .attendee(","    \/\/     −     Tagged(rawValue: UUID(B7833D85-CFA3-49A8-9B4C-54A4084372F7))","    \/\/     +     Tagged(rawValue: UUID(AEF24FB1-BC0E-438A-85B8-1E045A9D8A88))","    \/\/         ),","    \/\/         _syncUp: SyncUp(","    \/\/           id: Tagged(rawValue: UUID(D8CCE06C-F6BB-4D3D-A61A-59DF5D603B07)),","    \/\/           attendees: [","    \/\/             [0]: Attendee(","    \/\/     −         id: Tagged(rawValue: UUID(B7833D85-CFA3-49A8-9B4C-54A4084372F7))","    \/\/     +         id: Tagged(rawValue: UUID(AEF24FB1-BC0E-438A-85B8-1E045A9D8A88))","    \/\/               name: \"\"","    \/\/             )","    \/\/           ],","    \/\/           duration: 5 minutes,","    \/\/           meetings: [],","    \/\/           theme: .bubblegum,","    \/\/           title: \"Engineering\"","    \/\/         )","    \/\/       )","    \/\/","    \/\/ (Expected: −, Actual: +)","  }","","  @Test","  func removeFocusedAttendee() async {","    \/\/ ...","  }","","  @Test","  func removeAttendee() async {","    \/\/ ...","  }","}"],"type":"file","highlights":[{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38},{"line":39},{"line":40},{"line":41},{"line":42},{"line":43},{"line":44},{"line":45},{"line":46}],"identifier":"TestingSyncUpForm-02-code-0003.swift","fileType":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingListOfSyncUps":{"type":"topic","role":"project","title":"Testing the list of sync-ups","url":"\/tutorials\/composablearchitecture\/testinglistofsyncups","abstract":[{"text":"The SyncUpsList feature we have built so far isn’t very complex. In fact, it only has one","type":"text"},{"text":" ","type":"text"},{"text":"primary action, that of deleting sync-ups from its collection. However, it can be good practice","type":"text"},{"text":" ","type":"text"},{"text":"to test new features as you add them, and in the future we will have much more complicated","type":"text"},{"text":" ","type":"text"},{"text":"behavior to test.","type":"text"}],"kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps","estimatedTime":"5min"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature#Navigating-to-the-record-meeting-feature":{"role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/recordmeetingfeature#Navigating-to-the-record-meeting-feature","title":"Navigating to the record meeting feature","type":"section","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Navigating-to-the-record-meeting-feature","abstract":[{"type":"text","text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will"},{"type":"text","text":" "},{"type":"text","text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer."}]},"TestingSyncUpForm-01-code-0003.swift":{"fileType":"swift","content":["import ComposableArchitecture","import Testing","","@testable import SyncUps","","@MainActor","struct SyncUpFormTests {","  @Test","  func removeAttendee() async {","    let store = TestStore(","      initialState: SyncUpForm.State(","        syncUp: SyncUp(","          id: SyncUp.ID(),","          attendees: [","            Attendee(id: Attendee.ID()),","            Attendee(id: Attendee.ID())","          ]","        )","      )","    ) {","      SyncUpForm()","    }","","    await store.send(.onDeleteAttendees([0])) {","      $0.syncUp.attendees.removeFirst()","    }","  }","}"],"highlights":[{"line":23},{"line":24},{"line":25},{"line":26}],"identifier":"TestingSyncUpForm-01-code-0003.swift","fileName":"SyncUpFormTests.swift","type":"file","syntax":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#More-concise-domain-modeling":{"abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"type":"text","text":" "},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"type":"text","text":" "},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}],"url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#More-concise-domain-modeling","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#More-concise-domain-modeling","title":"More concise domain modeling","type":"section","kind":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Integrating-the-feature-domains-together":{"url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Integrating-the-feature-domains-together","type":"section","title":"Integrating the feature domains together","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-domains-together","abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"type":"text","text":" "},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"type":"text","text":" "},{"type":"text","text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}],"kind":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Navigating-to-the-detail":{"kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Navigating-to-the-detail","url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Navigating-to-the-detail","abstract":[{"type":"text","text":"We will wrap the application built so far in a "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" so that we can navigate to"},{"type":"text","text":" "},{"type":"text","text":"the detail screen. To do this we will create a new root-level feature that will be responsible"},{"type":"text","text":" "},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"type":"section","title":"Navigating to the detail"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation":{"role":"project","url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation","kind":"project","estimatedTime":"20min","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation","abstract":[{"text":"We will wrap the application built so far in a ","type":"text"},{"code":"NavigationStack","type":"codeVoice"},{"text":" so that we can navigate to","type":"text"},{"text":" ","type":"text"},{"text":"the detail screen. To do this we will create a new root-level feature that will be responsible","type":"text"},{"text":" ","type":"text"},{"text":"for implementing the logic of the stack and integrating all of the features together.","type":"text"}],"title":"Navigating to a sync-up detail","type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp":{"url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup","role":"project","estimatedTime":"30min","kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp","type":"topic","title":"Editing and deleting a sync-up","abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"type":"text","text":" "},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"type":"text","text":" "},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps#A-tour-of-SyncUps":{"title":"A tour of SyncUps","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#A-tour-of-SyncUps","abstract":[{"text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a","type":"text"},{"text":" ","type":"text"},{"text":"recreation of Apple’s Scrumdinger demo application.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/whatissyncups#A-tour-of-SyncUps","role":"pseudoSymbol","kind":"section","type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation#The-meeting-screen":{"kind":"section","abstract":[{"text":"Now that we have a navigation stack in place we can start navigating to other features in the","type":"text"},{"text":" ","type":"text"},{"text":"application. The simplest is the meeting screen, which allows you to see the details of a","type":"text"},{"text":" ","type":"text"},{"text":"previous recorded meeting.","type":"text"}],"role":"pseudoSymbol","type":"section","title":"The meeting screen","url":"\/tutorials\/composablearchitecture\/meetingnavigation#The-meeting-screen","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#The-meeting-screen"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Record-meeting":{"abstract":[],"url":"\/tutorials\/buildingsyncups\/record-meeting","kind":"article","role":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Record-meeting","type":"topic","title":"Record meeting"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation#Adding-a-sync-up":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Adding-a-sync-up","type":"section","kind":"section","url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation#Adding-a-sync-up","abstract":[{"text":"We have now integrated two moderately complex features, the ","type":"text"},{"code":"SyncUpsList","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"SyncUpForm","type":"codeVoice"},{"text":", and","type":"text"},{"text":" ","type":"text"},{"text":"so its time to write some tests. This will give us the opportunity to prove that the features","type":"text"},{"text":" ","type":"text"},{"text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less","type":"text"},{"text":" ","type":"text"},{"text":"fragile.","type":"text"}],"role":"pseudoSymbol","title":"Adding a sync-up"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Testing-the-timer":{"url":"\/tutorials\/composablearchitecture\/implementingtimer#Testing-the-timer","abstract":[{"text":"The first major piece of logic and behavior we will introduce to the record meeting feature is","type":"text"},{"text":" ","type":"text"},{"text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and","type":"text"},{"text":" ","type":"text"},{"text":"we need to implement nuanced logic to figure out when to proceed to the next speaker.","type":"text"}],"title":"Testing the timer","type":"section","role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Testing-the-timer"},"TestingSyncUpForm-02-code-0007.swift":{"fileType":"swift","fileName":"SyncUpFormTests.swift","type":"file","highlights":[{"line":21},{"line":22}],"syntax":"swift","identifier":"TestingSyncUpForm-02-code-0007.swift","content":["import ComposableArchitecture","import Testing","","@testable import SyncUps","","@MainActor","struct SyncUpFormTests {","  @Test","  func addAttendee() async {","    let store = TestStore(","      initialState: SyncUpForm.State(","        syncUp: SyncUp(id: SyncUp.ID())","      )","    ) {","      SyncUpForm()","    } withDependencies: {","      $0.uuid = .incrementing","    }","","    await store.send(.addAttendeeButtonTapped) {","      $0.focus = .attendee(Attendee.ID(0))","      $0.syncUp.attendees.append(Attendee(id: Attendee.ID(0)))","    }","  }","","  @Test","  func removeFocusedAttendee() async {","    \/\/ ...","  }","","  @Test","  func removeAttendee() async {","    \/\/ ...","  }","}"]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#A-basic-timer":{"kind":"section","url":"\/tutorials\/composablearchitecture\/implementingtimer#A-basic-timer","title":"A basic timer","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#A-basic-timer","type":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm":{"title":"Testing the sync-up form","abstract":[{"text":"We now have a moderately complex feature for editing the details of a sync-up, the ","type":"text"},{"type":"codeVoice","code":"SyncUpForm"},{"text":" ","type":"text"},{"text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come","type":"text"},{"text":" ","type":"text"},{"text":"face-to-face with dependencies for the first time in this tutorial.","type":"text"}],"kind":"project","estimatedTime":"10min","url":"\/tutorials\/composablearchitecture\/testingsyncupform","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm","type":"topic","role":"project"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission":{"url":"\/tutorials\/composablearchitecture\/implementingspeechrecognizer#Asking-for-speech-recognition-permission","title":"Asking for speech recognition permission","type":"section","abstract":[{"text":"We have just one feature left to implement, and it’s one of the most complicated ones. We need","type":"text"},{"text":" ","type":"text"},{"text":"to use Apple’s ","type":"text"},{"code":"SFSpeechRecognizer","type":"codeVoice"},{"text":" API to ask the user for permission to transcribe their","type":"text"},{"text":" ","type":"text"},{"text":"audio, and then start a speech recognition task to live transcribe the meeting while it is","type":"text"},{"text":" ","type":"text"},{"text":"in progress.","type":"text"}],"role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission"},"TestingSyncUpForm-02-code-0006.swift":{"highlights":[{"line":16},{"line":17}],"fileName":"SyncUpFormTests.swift","content":["import ComposableArchitecture","import Testing","","@testable import SyncUps","","@MainActor","struct SyncUpFormTests {","  @Test","  func addAttendee() async {","    let store = TestStore(","      initialState: SyncUpForm.State(","        syncUp: SyncUp(id: SyncUp.ID())","      )","    ) {","      SyncUpForm()","    } withDependencies: {","      $0.uuid = .incrementing","    }","","    await store.send(.addAttendeeButtonTapped) {","      let attendee = Attendee(id: Attendee.ID())","      $0.focus = .attendee(attendee.id)","      $0.syncUp.attendees.append(attendee)","    }","  }","","  @Test","  func removeFocusedAttendee() async {","    \/\/ ...","  }","","  @Test","  func removeAttendee() async {","    \/\/ ...","  }","}"],"type":"file","syntax":"swift","identifier":"TestingSyncUpForm-02-code-0006.swift","fileType":"swift"},"TestingSyncUpForm-01-code-0004.swift":{"content":["import ComposableArchitecture","import Testing","","@testable import SyncUps","","@MainActor","struct SyncUpFormTests {","  @Test","  func removeFocusedAttendee() async {","    let attendee1 = Attendee(id: Attendee.ID())","    let attendee2 = Attendee(id: Attendee.ID())","    let store = TestStore(","      initialState: SyncUpForm.State(","        focus: .attendee(attendee1.id),","        syncUp: SyncUp(","          id: SyncUp.ID(),","          attendees: [attendee1, attendee2]","        )","      )","    ) {","      SyncUpForm()","    }","  }","","  @Test","  func removeAttendee() async {","    \/\/ ...","  }","}"],"type":"file","identifier":"TestingSyncUpForm-01-code-0004.swift","fileName":"SyncUpFormTests.swift","syntax":"swift","fileType":"swift","highlights":[{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer":{"title":"Adding a meeting timer","url":"\/tutorials\/composablearchitecture\/implementingtimer","kind":"project","role":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer","abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}],"type":"topic","estimatedTime":"25min"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm":{"abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"type":"text","text":" "},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"type":"text","text":" "},{"type":"text","text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm","estimatedTime":"10min","kind":"project","url":"\/tutorials\/composablearchitecture\/presentingsyncupform","type":"topic","title":"Presenting the sync-up form","role":"project"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list","url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Adding-a-new-sync-up-to-the-list","title":"Adding a new sync-up to the list","type":"section","abstract":[{"text":"We now have two features built: the sync-ups list and the sync-up form. These features do not","type":"text"},{"text":" ","type":"text"},{"text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to","type":"text"},{"text":" ","type":"text"},{"text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then","type":"text"},{"text":" ","type":"text"},{"text":"add that sync-up to the root list.","type":"text"}],"role":"pseudoSymbol","kind":"section"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/New-sync-up-form":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/New-sync-up-form","type":"topic","url":"\/tutorials\/buildingsyncups\/new-sync-up-form","abstract":[],"title":"New sync-up form","kind":"article","role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestingTCA#Non-exhaustive-testing":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestingTCA#Non-exhaustive-testing","title":"Non-exhaustive testing","abstract":[],"kind":"section","url":"\/documentation\/composablearchitecture\/testingtca#Non-exhaustive-testing","type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#Domain-models":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#Domain-models","abstract":[{"type":"text","text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the"},{"type":"text","text":" "},{"type":"text","text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as"},{"type":"text","text":" "},{"type":"text","text":"the app evolves."}],"type":"section","url":"\/tutorials\/composablearchitecture\/listsofsyncups#Domain-models","role":"pseudoSymbol","title":"Domain models"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Ending-the-meeting-early":{"url":"\/tutorials\/composablearchitecture\/implementingtimer#Ending-the-meeting-early","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Ending-the-meeting-early","type":"section","role":"pseudoSymbol","kind":"section","title":"Ending the meeting early","abstract":[{"text":"The first major piece of logic and behavior we will introduce to the record meeting feature is","type":"text"},{"text":" ","type":"text"},{"text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and","type":"text"},{"text":" ","type":"text"},{"text":"we need to implement nuanced logic to figure out when to proceed to the next speaker.","type":"text"}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps#Persisting-data-to-disk":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Persisting-data-to-disk","url":"\/tutorials\/composablearchitecture\/persistingsyncups#Persisting-data-to-disk","title":"Persisting data to disk","role":"pseudoSymbol","kind":"section","type":"section","abstract":[{"text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some","type":"text"},{"text":" ","type":"text"},{"text":"persistence. This will involve using the “shared state” tools from the library, such as","type":"text"},{"text":" ","type":"text"},{"code":"@Shared","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"fileStorage","type":"codeVoice"},{"text":".","type":"text"}]},"doc://ComposableArchitecture/tutorials/BuildingSyncUps":{"type":"topic","title":"Building SyncUps","url":"\/tutorials\/buildingsyncups","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","abstract":[{"type":"text","text":"The SyncUps application is a recreation of one of Apple’s more interesting demo applications,"},{"type":"text","text":" "},{"type":"text","text":"Scrumdinger. We recreate it from scratch using the Composable Architecture, with a focus on"},{"type":"text","text":" "},{"type":"text","text":"domain modeling, controlling dependencies, and testability."}],"role":"overview","kind":"overview"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Presenting-the-sync-up-form":{"abstract":[],"title":"Presenting the sync-up form","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Presenting-the-sync-up-form","kind":"article","type":"topic","role":"article","url":"\/tutorials\/buildingsyncups\/presenting-the-sync-up-form"},"TestingSyncUpForm-02-code-0004.swift":{"fileName":"SyncUpForm.swift","syntax":"swift","type":"file","fileType":"swift","identifier":"TestingSyncUpForm-02-code-0004.swift","highlights":[{"line":23},{"line":24}],"content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpForm {","  @ObservableState","  struct State: Equatable {","    var focus: Field? = .title","    var syncUp: SyncUp","","    enum Field: Hashable {","      case attendee(Attendee.ID)","      case title","    }","  }","","  enum Action: BindableAction {","    case addAttendeeButtonTapped","    case binding(BindingAction<State>)","    case onDeleteAttendees(IndexSet)","  }","","  @Dependency(\\.uuid) var uuid","","  var body: some ReducerOf<Self> {","    BindingReducer()","","    Reduce { state, action in","      switch action {","      case .addAttendeeButtonTapped:","        let attendee = Attendee(id: Attendee.ID())","        state.syncUp.attendees.append(attendee)","        state.focus = .attendee(attendee.id)","        return .none","","      case .binding:","        return .none","","      case let .onDeleteAttendees(indices):","        state.syncUp.attendees.remove(atOffsets: indices)","        guard","          !state.syncUp.attendees.isEmpty,","          let firstIndex = indices.first","        else {","          state.syncUp.attendees.append(","            Attendee(id: Attendee.ID())","          )","          return .none","        }","        let index = min(firstIndex, state.syncUp.attendees.count - 1)","        state.focus = .attendee(state.syncUp.attendees[index].id)","        return .none","      }","    }","  }","}","","struct SyncUpFormView: View {","  \/\/ ...","}"]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps":{"role":"project","estimatedTime":"5min","type":"topic","title":"What is SyncUps?","url":"\/tutorials\/composablearchitecture\/whatissyncups","kind":"project","abstract":[{"text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a","type":"text"},{"text":" ","type":"text"},{"text":"recreation of Apple’s Scrumdinger demo application.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#Editing-the-sync-up":{"title":"Editing the sync-up","abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"type":"text","text":" "},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"type":"text","text":" "},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}],"kind":"section","type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Editing-the-sync-up","url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#Editing-the-sync-up","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps":{"role":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps","kind":"project","estimatedTime":"5min","abstract":[{"text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some","type":"text"},{"text":" ","type":"text"},{"text":"persistence. This will involve using the “shared state” tools from the library, such as","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"@Shared"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"fileStorage"},{"text":".","type":"text"}],"type":"topic","url":"\/tutorials\/composablearchitecture\/persistingsyncups","title":"Persisting sync-ups"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Integrating-the-feature-views-together":{"url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Integrating-the-feature-views-together","abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"type":"text","text":" "},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"type":"text","text":" "},{"type":"text","text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}],"role":"pseudoSymbol","type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-views-together","title":"Integrating the feature views together","kind":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature":{"url":"\/tutorials\/composablearchitecture\/recordmeetingfeature","abstract":[{"text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will","type":"text"},{"text":" ","type":"text"},{"text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer.","type":"text"}],"role":"project","title":"The RecordMeeting feature","estimatedTime":"5min","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature","type":"topic","kind":"project"},"TestingSyncUpForm-02-code-0002.swift":{"content":["import ComposableArchitecture","import Testing","","@testable import SyncUps","","@MainActor","struct SyncUpFormTests {","  @Test","  func addAttendee() async {","    let store = TestStore(","      initialState: SyncUpForm.State(","        syncUp: SyncUp(id: SyncUp.ID())","      )","    ) {","      SyncUpForm()","    }","","    await store.send(.addAttendeeButtonTapped) {","      let attendee = Attendee(id: Attendee.ID())","      $0.focus = .attendee(attendee.id)","      $0.syncUp.attendees.append(attendee)","    }","  }","","  @Test","  func removeFocusedAttendee() async {","    \/\/ ...","  }","","  @Test","  func removeAttendee() async {","    \/\/ ...","  }","}"],"identifier":"TestingSyncUpForm-02-code-0002.swift","syntax":"swift","fileName":"SyncUpFormTests.swift","type":"file","highlights":[{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22}],"fileType":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation":{"role":"project","estimatedTime":"5min","url":"\/tutorials\/composablearchitecture\/meetingnavigation","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation","abstract":[{"type":"text","text":"Now that we have a navigation stack in place we can start navigating to other features in the"},{"type":"text","text":" "},{"type":"text","text":"application. The simplest is the meeting screen, which allows you to see the details of a"},{"type":"text","text":" "},{"type":"text","text":"previous recorded meeting."}],"type":"topic","kind":"project","title":"Navigating to a meeting"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Controlling-dependencies-early":{"title":"Controlling dependencies early","abstract":[{"text":"The first major piece of logic and behavior we will introduce to the record meeting feature is","type":"text"},{"text":" ","type":"text"},{"text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and","type":"text"},{"text":" ","type":"text"},{"text":"we need to implement nuanced logic to figure out when to proceed to the next speaker.","type":"text"}],"type":"section","kind":"section","role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/implementingtimer#Controlling-dependencies-early","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Controlling-dependencies-early"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpDetail#Testing-the-edit-flow":{"title":"Testing the edit flow","kind":"section","type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail#Testing-the-edit-flow","url":"\/tutorials\/composablearchitecture\/testingsyncupdetail#Testing-the-edit-flow","role":"pseudoSymbol","abstract":[{"text":"The ","type":"text"},{"code":"SyncUpDetail","type":"codeVoice"},{"text":" feature has slowly become quite complex. It now handles two forms of","type":"text"},{"text":" ","type":"text"},{"text":"navigation (an alert and sheet), it models navigation state with a single enum, and it","type":"text"},{"text":" ","type":"text"},{"text":"updates the parent feature via a shared property. It’s about time we got some test","type":"text"},{"text":" ","type":"text"},{"text":"coverage on this feature so we can be sure it works as we expect, and so that we can make future","type":"text"},{"text":" ","type":"text"},{"text":"changes with confidence.","type":"text"}]},"TestingSyncUpForm-01-code-0001.swift":{"fileName":"SyncUpFormTests.swift","content":["import ComposableArchitecture","import Testing","","@testable import SyncUps","","@MainActor","struct SyncUpFormTests {","  @Test","  func removeAttendee() async {","","  }","}"],"highlights":[],"identifier":"TestingSyncUpForm-01-code-0001.swift","type":"file","syntax":"swift","fileType":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#A-handy-debugging-tool":{"kind":"section","abstract":[{"type":"text","text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the"},{"type":"text","text":" "},{"type":"text","text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as"},{"type":"text","text":" "},{"type":"text","text":"the app evolves."}],"role":"pseudoSymbol","type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#A-handy-debugging-tool","url":"\/tutorials\/composablearchitecture\/listsofsyncups#A-handy-debugging-tool","title":"A handy debugging tool"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DependencyManagement":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement","role":"article","type":"topic","url":"\/documentation\/composablearchitecture\/dependencymanagement","abstract":[{"type":"text","text":"Learn how to register dependencies with the library so that they can be immediately accessible from"},{"type":"text","text":" "},{"type":"text","text":"any reducer."}],"title":"Dependencies"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm":{"url":"\/tutorials\/composablearchitecture\/syncupform","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"type":"text","text":" "},{"type":"text","text":"feature to make things a little more interesting."}],"estimatedTime":"15min","kind":"project","title":"Sync-up form","type":"topic","role":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetail#Create-the-sync-up-detail":{"kind":"section","title":"Create the sync-up detail","type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail#Create-the-sync-up-detail","url":"\/tutorials\/composablearchitecture\/syncupdetail#Create-the-sync-up-detail","role":"pseudoSymbol","abstract":[{"type":"text","text":"The “sync-up detail” screen shows all the information of a sync-up, and has many actions that"},{"type":"text","text":" "},{"type":"text","text":"can take place in the screen. The user can edit the sync-up, or start a new meeting in the sync"},{"type":"text","text":" "},{"type":"text","text":"up, or drill-down to a past meeting, or even delete the meeting."}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Creating-the-app-view":{"abstract":[{"text":"We will wrap the application built so far in a ","type":"text"},{"code":"NavigationStack","type":"codeVoice"},{"text":" so that we can navigate to","type":"text"},{"text":" ","type":"text"},{"text":"the detail screen. To do this we will create a new root-level feature that will be responsible","type":"text"},{"text":" ","type":"text"},{"text":"for implementing the logic of the stack and integrating all of the features together.","type":"text"}],"title":"Creating the app view","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-view","kind":"section","role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Creating-the-app-view","type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetail":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail","title":"Sync-up detail","estimatedTime":"5min","kind":"project","type":"topic","url":"\/tutorials\/composablearchitecture\/syncupdetail","abstract":[{"type":"text","text":"The “sync-up detail” screen shows all the information of a sync-up, and has many actions that"},{"type":"text","text":" "},{"type":"text","text":"can take place in the screen. The user can edit the sync-up, or start a new meeting in the sync"},{"type":"text","text":" "},{"type":"text","text":"up, or drill-down to a past meeting, or even delete the meeting."}],"role":"project"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Form-focus-a-better-approach":{"title":"Form focus: a better approach","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-a-better-approach","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"type":"text","text":" "},{"type":"text","text":"feature to make things a little more interesting."}],"kind":"section","role":"pseudoSymbol","type":"section","url":"\/tutorials\/composablearchitecture\/syncupform#Form-focus-a-better-approach"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingListOfSyncUps#Writing-your-first-test":{"title":"Writing your first test","abstract":[{"text":"The SyncUpsList feature we have built so far isn’t very complex. In fact, it only has one","type":"text"},{"text":" ","type":"text"},{"text":"primary action, that of deleting sync-ups from its collection. However, it can be good practice","type":"text"},{"text":" ","type":"text"},{"text":"to test new features as you add them, and in the future we will have much more complicated","type":"text"},{"text":" ","type":"text"},{"text":"behavior to test.","type":"text"}],"type":"section","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps#Writing-your-first-test","role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/testinglistofsyncups#Writing-your-first-test"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Sync-up-detail":{"title":"Sync-up detail","url":"\/tutorials\/buildingsyncups\/sync-up-detail","abstract":[],"type":"topic","kind":"article","role":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Sync-up-detail"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpDetail":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail","abstract":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"SyncUpDetail"},{"text":" feature has slowly become quite complex. It now handles two forms of","type":"text"},{"text":" ","type":"text"},{"text":"navigation (an alert and sheet), it models navigation state with a single enum, and it","type":"text"},{"text":" ","type":"text"},{"text":"updates the parent feature via a shared property. It’s about time we got some test","type":"text"},{"text":" ","type":"text"},{"text":"coverage on this feature so we can be sure it works as we expect, and so that we can make future","type":"text"},{"text":" ","type":"text"},{"text":"changes with confidence.","type":"text"}],"type":"topic","role":"project","kind":"project","url":"\/tutorials\/composablearchitecture\/testingsyncupdetail","estimatedTime":"10min","title":"Testing the sync-up detail"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#Deleting-the-sync-up":{"abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"type":"text","text":" "},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"type":"text","text":" "},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}],"url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#Deleting-the-sync-up","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Deleting-the-sync-up","type":"section","role":"pseudoSymbol","title":"Deleting the sync-up","kind":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps#Testing-persistence":{"abstract":[{"text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some","type":"text"},{"text":" ","type":"text"},{"text":"persistence. This will involve using the “shared state” tools from the library, such as","type":"text"},{"text":" ","type":"text"},{"code":"@Shared","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"fileStorage","type":"codeVoice"},{"text":".","type":"text"}],"type":"section","title":"Testing persistence","kind":"section","url":"\/tutorials\/composablearchitecture\/persistingsyncups#Testing-persistence","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Testing-persistence","role":"pseudoSymbol"},"TestingSyncUpForm-02-code-0001.swift":{"fileName":"SyncUpFormTests.swift","type":"file","content":["import ComposableArchitecture","import Testing","","@testable import SyncUps","","@MainActor","struct SyncUpFormTests {","  @Test","  func addAttendee() async {","    let store = TestStore(","      initialState: SyncUpForm.State(","        syncUp: SyncUp(id: SyncUp.ID())","      )","    ) {","      SyncUpForm()","    }","  }","","  @Test","  func removeFocusedAttendee() async {","    \/\/ ...","  }","","  @Test","  func removeAttendee() async {","    \/\/ ...","  }","}"],"identifier":"TestingSyncUpForm-02-code-0001.swift","fileType":"swift","highlights":[{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19}],"syntax":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingNavigation":{"estimatedTime":"10min","abstract":[{"text":"We have now implemented a navigation stack at the root of our application, and integrated","type":"text"},{"text":" ","type":"text"},{"text":"3 features into the stack: the ","type":"text"},{"code":"SyncUpsList","type":"codeVoice"},{"text":" feature, the ","type":"text"},{"code":"SyncUpDetail","type":"codeVoice"},{"text":" feature, and the","type":"text"},{"text":" ","type":"text"},{"code":"MeetingView","type":"codeVoice"},{"text":". Some of these features have quite complex logic binding them together, such as","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"when one deletes a sync-up from the detail screen it should pop the screen off the stack."}],"role":"project","type":"topic","kind":"project","title":"Testing navigation","url":"\/tutorials\/composablearchitecture\/testingnavigation","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"type":"topic","title":"TestStore","navigatorTitle":[{"kind":"identifier","text":"TestStore"}],"abstract":[{"text":"A testable runtime for a reducer.","type":"text"}],"url":"\/documentation\/composablearchitecture\/teststore","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestStore"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingNavigation#Deleting-a-sync-up":{"url":"\/tutorials\/composablearchitecture\/testingnavigation#Deleting-a-sync-up","title":"Deleting a sync-up","type":"section","abstract":[{"text":"We have now implemented a navigation stack at the root of our application, and integrated","type":"text"},{"text":" ","type":"text"},{"text":"3 features into the stack: the ","type":"text"},{"type":"codeVoice","code":"SyncUpsList"},{"text":" feature, the ","type":"text"},{"type":"codeVoice","code":"SyncUpDetail"},{"text":" feature, and the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"MeetingView"},{"text":". Some of these features have quite complex logic binding them together, such as","type":"text"},{"text":" ","type":"text"},{"text":"when one deletes a sync-up from the detail screen it should pop the screen off the stack.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation#Deleting-a-sync-up","role":"pseudoSymbol","kind":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#SyncUpsList-feature":{"kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/listsofsyncups#SyncUpsList-feature","role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#SyncUpsList-feature","abstract":[{"text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the","type":"text"},{"text":" ","type":"text"},{"text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as","type":"text"},{"text":" ","type":"text"},{"text":"the app evolves.","type":"text"}],"title":"SyncUpsList feature"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation#Navigate-to-a-meeting":{"type":"section","title":"Navigate to a meeting","kind":"section","abstract":[{"type":"text","text":"Now that we have a navigation stack in place we can start navigating to other features in the"},{"type":"text","text":" "},{"type":"text","text":"application. The simplest is the meeting screen, which allows you to see the details of a"},{"type":"text","text":" "},{"type":"text","text":"previous recorded meeting."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#Navigate-to-a-meeting","url":"\/tutorials\/composablearchitecture\/meetingnavigation#Navigate-to-a-meeting","role":"pseudoSymbol"},"TestingSyncUpForm-02-code-0005.swift":{"fileType":"swift","fileName":"SyncUpForm.swift","identifier":"TestingSyncUpForm-02-code-0005.swift","highlights":[{"line":31},{"line":46}],"syntax":"swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpForm {","  @ObservableState","  struct State: Equatable {","    var focus: Field? = .title","    var syncUp: SyncUp","","    enum Field: Hashable {","      case attendee(Attendee.ID)","      case title","    }","  }","","  enum Action: BindableAction {","    case addAttendeeButtonTapped","    case binding(BindingAction<State>)","    case onDeleteAttendees(IndexSet)","  }","","  @Dependency(\\.uuid) var uuid","","  var body: some ReducerOf<Self> {","    BindingReducer()","","    Reduce { state, action in","      switch action {","      case .addAttendeeButtonTapped:","        let attendee = Attendee(id: uuid())","        state.syncUp.attendees.append(attendee)","        state.focus = .attendee(attendee.id)","        return .none","","      case .binding:","        return .none","","      case let .onDeleteAttendees(indices):","        state.syncUp.attendees.remove(atOffsets: indices)","        guard","          !state.syncUp.attendees.isEmpty,","          let firstIndex = indices.first","        else {","          state.syncUp.attendees.append(","            Attendee(id: uuid())","          )","          return .none","        }","        let index = min(firstIndex, state.syncUp.attendees.count - 1)","        state.focus = .attendee(state.syncUp.attendees[index].id)","        return .none","      }","    }","  }","}","","struct SyncUpFormView: View {","  \/\/ ...","}"],"type":"file"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Sync-up-form-basics":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Sync-up-form-basics","kind":"section","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"type":"text","text":" "},{"type":"text","text":"feature to make things a little more interesting."}],"url":"\/tutorials\/composablearchitecture\/syncupform#Sync-up-form-basics","title":"Sync-up form basics","role":"pseudoSymbol","type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm#Removing-attendees":{"abstract":[{"text":"We now have a moderately complex feature for editing the details of a sync-up, the ","type":"text"},{"code":"SyncUpForm","type":"codeVoice"},{"text":" ","type":"text"},{"text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come","type":"text"},{"text":" ","type":"text"},{"text":"face-to-face with dependencies for the first time in this tutorial.","type":"text"}],"type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Removing-attendees","kind":"section","role":"pseudoSymbol","title":"Removing attendees","url":"\/tutorials\/composablearchitecture\/testingsyncupform#Removing-attendees"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingSpeechRecognizer":{"type":"topic","abstract":[{"type":"text","text":"We have just one feature left to implement, and it’s one of the most complicated ones. We need"},{"type":"text","text":" "},{"type":"text","text":"to use Apple’s "},{"code":"SFSpeechRecognizer","type":"codeVoice"},{"type":"text","text":" API to ask the user for permission to transcribe their"},{"type":"text","text":" "},{"type":"text","text":"audio, and then start a speech recognition task to live transcribe the meeting while it is"},{"type":"text","text":" "},{"type":"text","text":"in progress."}],"title":"Adding a speech recognizer","url":"\/tutorials\/composablearchitecture\/implementingspeechrecognizer","kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer","role":"project","estimatedTime":"10min"},"TestingSyncUpForm-01-code-0002.swift":{"content":["import ComposableArchitecture","import Testing","","@testable import SyncUps","","@MainActor","struct SyncUpFormTests {","  @Test","  func removeAttendee() async {","    let store = TestStore(","      initialState: SyncUpForm.State(","        syncUp: SyncUp(","          id: SyncUp.ID(),","          attendees: [","            Attendee(id: Attendee.ID()),","            Attendee(id: Attendee.ID())","          ]","        )","      )","    ) {","      SyncUpForm()","    }","  }","}"],"identifier":"TestingSyncUpForm-01-code-0002.swift","type":"file","fileType":"swift","fileName":"SyncUpFormTests.swift","syntax":"swift","highlights":[{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22}]},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Navigating-to-sync-up-detail":{"title":"Navigating to sync-up detail","kind":"article","type":"topic","role":"article","abstract":[],"url":"\/tutorials\/buildingsyncups\/navigating-to-sync-up-detail","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Navigating-to-sync-up-detail"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Persisting-sync-ups-to-disk":{"role":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Persisting-sync-ups-to-disk","kind":"article","title":"Persisting sync-ups to disk","abstract":[],"url":"\/tutorials\/buildingsyncups\/persisting-sync-ups-to-disk","type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm#Adding-attendees":{"url":"\/tutorials\/composablearchitecture\/testingsyncupform#Adding-attendees","kind":"section","type":"section","title":"Adding attendees","abstract":[{"text":"We now have a moderately complex feature for editing the details of a sync-up, the ","type":"text"},{"code":"SyncUpForm","type":"codeVoice"},{"text":" ","type":"text"},{"text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come","type":"text"},{"text":" ","type":"text"},{"text":"face-to-face with dependencies for the first time in this tutorial.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Adding-attendees","role":"pseudoSymbol"}}}