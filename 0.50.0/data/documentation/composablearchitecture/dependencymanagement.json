{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Dependencies in an application are the types and functions that need to interact with outside"},{"type":"text","text":" "},{"type":"text","text":"systems that you do not control. Classic examples of this are API clients that make network requests"},{"type":"text","text":" "},{"type":"text","text":"to servers, but also seemingly innocuous things such as "},{"type":"codeVoice","code":"UUID"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" initializers, and even"},{"type":"text","text":" "},{"type":"text","text":"clocks, can be thought of as dependencies."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"By controlling the dependencies our features need to do their job we gain the ability to completely"},{"type":"text","text":" "},{"type":"text","text":"alter the execution context a feature runs in. This means in tests and Xcode previews you can"},{"type":"text","text":" "},{"type":"text","text":"provide a mock version of an API client that immediately returns some stubbed data rather than"},{"type":"text","text":" "},{"type":"text","text":"making a live network request to a server."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The dependency management system in the Composable Architecture is driven off of our"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"http:\/\/github.com\/pointfreeco\/swift-dependencies"},{"type":"text","text":" library. That repository has extensive"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/pointfreeco.github.io\/swift-dependencies\/main\/documentation\/dependencies\/"},{"type":"text","text":" and articles, and we highly recommend you familiarize yourself"},{"type":"text","text":" "},{"type":"text","text":"with all of that content to best leverage dependencies."}]}],"type":"aside","name":"Note"},{"anchor":"Overriding-dependencies","level":2,"type":"heading","text":"Overriding dependencies"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is possible to change the dependencies for just one particular reducer inside a larger composed"},{"type":"text","text":" "},{"type":"text","text":"reducer. This can be handy when running a feature in a more controlled environment where it may not"},{"type":"text","text":" "},{"type":"text","text":"be appropriate to communicate with the outside world."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, suppose you want to teach users how to use your feature through an onboarding"},{"type":"text","text":" "},{"type":"text","text":"experience. In such an experience it may not be appropriate for the user’s actions to cause"},{"type":"text","text":" "},{"type":"text","text":"data to be written to disk, or user defaults to be written, or any number of things. It would be"},{"type":"text","text":" "},{"type":"text","text":"better to use mock versions of those dependencies so that the user can interact with your feature"},{"type":"text","text":" "},{"type":"text","text":"in a fully controlled environment."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To do this you can use the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol\/dependency(_:_:)"},{"type":"text","text":" method to override a reducer’s"},{"type":"text","text":" "},{"type":"text","text":"dependency with another value:"}]},{"type":"codeListing","syntax":"swift","code":["struct Onboarding: ReducerProtocol {","  var body: some ReducerProtocol<State, Action> {","    Reduce { state, action in ","      \/\/ Additional onboarding logic","    }","    Feature()","      .dependency(\\.userDefaults, .mock)","      .dependency(\\.database, .mock)","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This will cause the "},{"type":"codeVoice","code":"Feature"},{"type":"text","text":" reducer to use a mock user defaults and database dependency, as well"},{"type":"text","text":" "},{"type":"text","text":"as any reducer "},{"type":"codeVoice","code":"Feature"},{"type":"text","text":" uses under the hood, "},{"type":"emphasis","inlineContent":[{"type":"text","text":"and"}]},{"type":"text","text":" any effects produced by "},{"type":"codeVoice","code":"Feature"},{"type":"text","text":"."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/dependencymanagement"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Learn how to register dependencies with the library so that they can be immediately accessible from"},{"type":"text","text":" "},{"type":"text","text":"any reducer."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Dependencies","role":"article","modules":[{"name":"ComposableArchitecture"}]},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"]]},"seeAlsoSections":[{"title":"Essentials","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/GettingStarted","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Testing","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance"],"generated":true}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/GettingStarted":{"role":"article","title":"Getting started","abstract":[{"type":"text","text":"Learn how to integrate the Composable Architecture into your project and write your first"},{"type":"text","text":" "},{"type":"text","text":"application."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/GettingStarted","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/gettingstarted"},"http://github.com/pointfreeco/swift-dependencies":{"title":"Dependencies","titleInlineContent":[{"type":"text","text":"Dependencies"}],"type":"link","identifier":"http:\/\/github.com\/pointfreeco\/swift-dependencies","url":"http:\/\/github.com\/pointfreeco\/swift-dependencies"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Testing":{"role":"article","title":"Testing","abstract":[{"type":"text","text":"Learn how to write comprehensive and exhaustive tests for your features built in the Composable"},{"type":"text","text":" "},{"type":"text","text":"Architecture."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Testing","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/testing"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Performance":{"role":"article","title":"Performance","abstract":[{"type":"text","text":"Learn how to improve the performance of features built in the Composable Architecture."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/performance"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerProtocol/dependency(_:_:)":{"role":"symbol","title":"dependency(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dependency"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"DependencyValues","preciseIdentifier":"s:12Dependencies16DependencyValuesV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"_DependencyKeyWritingReducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Sets the dependency value of the specified key path to the given value."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol\/dependency(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/reducerprotocol\/dependency(_:_:)"},"https://pointfreeco.github.io/swift-dependencies/main/documentation/dependencies/":{"title":"documentation","titleInlineContent":[{"type":"text","text":"documentation"}],"type":"link","identifier":"https:\/\/pointfreeco.github.io\/swift-dependencies\/main\/documentation\/dependencies\/","url":"https:\/\/pointfreeco.github.io\/swift-dependencies\/main\/documentation\/dependencies\/"}}}