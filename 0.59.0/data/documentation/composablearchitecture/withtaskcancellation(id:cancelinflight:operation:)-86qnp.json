{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withTaskCancellation"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ID"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":", "},{"kind":"externalParam","text":"cancelInFlight"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":" = false, "},{"kind":"externalParam","text":"operation"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"id","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A unique identifier for the operation."}]}]},{"name":"cancelInFlight","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Determines if any in-flight operation with the same identifier should be"},{"type":"text","text":" "},{"type":"text","text":"canceled before starting this new one."}]}]},{"name":"operation","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An async operation."}]}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A value produced by operation."}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the operation is in-flight when "},{"type":"codeVoice","code":"Task.cancel(id:)"},{"type":"text","text":" is called with the same identifier, the"},{"type":"text","text":" "},{"type":"text","text":"operation will be cancelled."}]},{"type":"codeListing","syntax":null,"code":["enum CancelID { case timer }","","await withTaskCancellation(id: CancelID.timer) {","  \/\/ Start cancellable timer...","}"]},{"anchor":"Debouncing-tasks","level":3,"type":"heading","text":"Debouncing tasks"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When paired with a clock, this function can be used to debounce a unit of async work by"},{"type":"text","text":" "},{"type":"text","text":"specifying the "},{"type":"codeVoice","code":"cancelInFlight"},{"type":"text","text":", which will automatically cancel any in-flight work with the"},{"type":"text","text":" "},{"type":"text","text":"same identifier:"}]},{"type":"codeListing","syntax":"swift","code":["@Dependency(\\.continuousClock) var clock","enum CancelID { case response }","","\/\/ ...","","return .run { send in","  try await withTaskCancellation(id: CancelID.response, cancelInFlight: true) {","    try await self.clock.sleep(for: .seconds(0.3))","    await send(","      .debouncedResponse(TaskResult { try await environment.request() })","    )","  }","}"]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An error thrown by the operation."}]}],"type":"aside","name":"Throws"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/withtaskcancellation(id:cancelinflight:operation:)-86qnp"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/withTaskCancellation(id:cancelInFlight:operation:)-86qnp","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Execute an operation with a cancellation identifier."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withTaskCancellation"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ID"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":", "},{"kind":"externalParam","text":"cancelInFlight"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"operation"},{"kind":"text","text":": () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"title":"withTaskCancellation(id:cancelInFlight:operation:)","roleHeading":"Function","role":"symbol","symbolKind":"func","externalID":"s:22ComposableArchitecture20withTaskCancellation2id14cancelInFlight9operationq_x_Sbq_yYaYbKctYaKSHRzs8SendableR_r0_lF","modules":[{"name":"ComposableArchitecture"}]},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/withTaskCancellation(id:cancelInFlight:operation:)-86qnp":{"role":"symbol","title":"withTaskCancellation(id:cancelInFlight:operation:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withTaskCancellation"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ID"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":", "},{"kind":"externalParam","text":"cancelInFlight"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"operation"},{"kind":"text","text":": () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"abstract":[{"type":"text","text":"Execute an operation with a cancellation identifier."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/withTaskCancellation(id:cancelInFlight:operation:)-86qnp","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/withtaskcancellation(id:cancelinflight:operation:)-86qnp"}}}