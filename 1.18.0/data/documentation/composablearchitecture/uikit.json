{"variants":[{"paths":["\/documentation\/composablearchitecture\/uikit"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UIKit"},"kind":"article","topicSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/ifLet(then:else:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/publisher","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/publisher"],"anchor":"Combine-integration","title":"Combine integration"}],"metadata":{"modules":[{"name":"ComposableArchitecture"}],"title":"UIKit Integration","roleHeading":"API Collection","role":"collectionGroup"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Integrating the Composable Architecture into a UIKit application.","type":"text"}],"sections":[],"seeAlsoSections":[{"title":"Integrations","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftConcurrency","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationBackport"],"anchor":"Integrations"}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"anchor":"Overview","text":"Overview"},{"inlineContent":[{"text":"While the Composable Architecture was designed with SwiftUI in mind, it comes with tools to","type":"text"},{"text":" ","type":"text"},{"text":"integrate into application code written in UIKit.","type":"text"}],"type":"paragraph"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationBackport":{"title":"Observation backport","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationBackport","role":"article","abstract":[{"type":"text","text":"Learn how the Observation framework from Swift 5.9 was backported to support iOS 16 and earlier,"},{"text":" ","type":"text"},{"text":"as well as the caveats of using the backported tools.","type":"text"}],"url":"\/documentation\/composablearchitecture\/observationbackport","type":"topic","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/ifLet(then:else:)":{"abstract":[{"text":"Calls one of two closures depending on whether a store’s optional state is ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" or not, and","type":"text"},{"text":" ","type":"text"},{"text":"whenever this condition changes for as long as the cancellable lives.","type":"text"}],"type":"topic","url":"\/documentation\/composablearchitecture\/store\/iflet(then:else:)","kind":"symbol","title":"ifLet(then:else:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/ifLet(then:else:)","deprecated":true,"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"ifLet","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Wrapped"},{"kind":"text","text":">("},{"kind":"externalParam","text":"then"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier","text":"Store"},{"text":"<","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">) -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":", "},{"text":"else","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> any "},{"text":"Cancellable","kind":"typeIdentifier","preciseIdentifier":"s:7Combine11CancellableP"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","title":"ComposableArchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/publisher":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"publisher","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StorePublisher","preciseIdentifier":"s:22ComposableArchitecture14StorePublisherV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":">"}],"title":"publisher","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/publisher","abstract":[{"type":"text","text":"A publisher that emits when state changes."}],"type":"topic","role":"symbol","url":"\/documentation\/composablearchitecture\/store\/publisher"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftConcurrency":{"abstract":[{"type":"text","text":"Learn how to write safe, concurrent effects using Swift’s structured concurrency."}],"type":"topic","url":"\/documentation\/composablearchitecture\/swiftconcurrency","kind":"article","title":"Adopting Swift concurrency","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftConcurrency","role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/publisher":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"publisher","kind":"identifier"},{"kind":"text","text":": "},{"text":"StorePublisher","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture14StorePublisherV"},{"text":"<","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"kind":"text","text":">"}],"deprecated":true,"title":"publisher","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/publisher","abstract":[{"type":"text","text":"A publisher that emits when state changes."}],"type":"topic","role":"symbol","url":"\/documentation\/composablearchitecture\/viewstore\/publisher"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","title":"SwiftUI Integration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"role":"collectionGroup","kind":"article"}}}