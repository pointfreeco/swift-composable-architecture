{"seeAlsoSections":[{"title":"Related Documentation","abstract":[{"type":"text","text":"The collection of videos from "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.pointfree.co"},{"type":"text","text":" that dive deep into the"},{"type":"text","text":" "},{"type":"text","text":"development of the library."}],"identifiers":["https:\/\/www.pointfree.co\/collections\/composable-architecture"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Additional-Resources","level":2,"type":"heading","text":"Additional Resources"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/www.pointfree.co\/collections\/composable-architecture"}]}]}]},{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This library provides a few core tools that can be used to build applications of varying purpose and"},{"type":"text","text":" "},{"type":"text","text":"complexity. It provides compelling stories that you can follow to solve many problems you encounter"},{"type":"text","text":" "},{"type":"text","text":"day-to-day when building applications, such as:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"State management"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"How to manage the state of your application using simple value types, and share state across"},{"type":"text","text":" "},{"type":"text","text":"many screens so that mutations in one screen can be immediately observed in another screen."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Composition"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"How to break down large features into smaller components that can be extracted to their own,"},{"type":"text","text":" "},{"type":"text","text":"isolated modules and be easily glued back together to form the feature."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Side effects"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"How to let certain parts of the application talk to the outside world in the most testable and"},{"type":"text","text":" "},{"type":"text","text":"understandable way possible."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Testing"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"How to not only test a feature built in the architecture, but also write integration tests for"},{"type":"text","text":" "},{"type":"text","text":"features that have been composed of many parts, and write end-to-end tests to understand how"},{"type":"text","text":" "},{"type":"text","text":"side effects influence your application. This allows you to make strong guarantees that your"},{"type":"text","text":" "},{"type":"text","text":"business logic is running in the way you expect."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Ergonomics"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"How to accomplish all of the above in a simple API with as few concepts and moving parts as"},{"type":"text","text":" "},{"type":"text","text":"possible."}]}]}]}]}],"variants":[{"paths":["\/documentation\/composablearchitecture"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"ComposableArchitecture","title":"ComposableArchitecture","symbolKind":"module","role":"collection","modules":[{"name":"ComposableArchitecture"}]},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Articles","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/GettingStarted"]},{"title":"Classes","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"]},{"title":"Protocols","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction"]},{"title":"Structures","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableState","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ConfirmationDialogState","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/DebugEnvironment","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Default","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Identified","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/StorePublisher","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ActionSheetState"]},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ActionFormat"]}],"references":{"https://github.com/pointfreeco/swift-composable-architecture":{"title":"GitHub Repo","titleInlineContent":[{"type":"text","text":"GitHub Repo"}],"type":"link","identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture","url":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/AlertState":{"role":"symbol","title":"AlertState","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AlertState"}],"abstract":[{"type":"text","text":"A data type that describes the state of an alert that can be shown to the user. The "},{"type":"codeVoice","code":"Action"},{"type":"text","text":" "},{"type":"text","text":"generic is the type of actions that can be sent from tapping on a button in the alert."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AlertState"}],"url":"\/documentation\/composablearchitecture\/alertstate"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"role":"symbol","title":"Effect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":" type encapsulates a unit of work that can be run in the outside world, and can"},{"type":"text","text":" "},{"type":"text","text":"feed data back to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":". It is the perfect place to do side effects, such as network"},{"type":"text","text":" "},{"type":"text","text":"requests, saving\/loading from disk, creating timers, interacting with dependencies, and more."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"url":"\/documentation\/composablearchitecture\/effect"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/ActionSheetState":{"deprecated":true,"role":"symbol","title":"ActionSheetState","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActionSheetState"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ActionSheetState","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ActionSheetState"}],"url":"\/documentation\/composablearchitecture\/actionsheetstate"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"role":"symbol","title":"SwitchStore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchStore"}],"abstract":[{"type":"text","text":"A view that can switch over a store of enum state and handle each case."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"url":"\/documentation\/composablearchitecture\/switchstore"},"https://www.pointfree.co/collections/composable-architecture":{"title":"Point-Free Videos","titleInlineContent":[{"type":"text","text":"Point-Free Videos"}],"type":"link","identifier":"https:\/\/www.pointfree.co\/collections\/composable-architecture","url":"https:\/\/www.pointfree.co\/collections\/composable-architecture"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"role":"symbol","title":"IfLetStore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IfLetStore"}],"abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}],"url":"\/documentation\/composablearchitecture\/ifletstore"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/ConfirmationDialogState":{"role":"symbol","title":"ConfirmationDialogState","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConfirmationDialogState"}],"abstract":[{"type":"text","text":"A data type that describes the state of a confirmation dialog that can be shown to the user. The"},{"type":"text","text":" "},{"type":"codeVoice","code":"Action"},{"type":"text","text":" generic is the type of actions that can be sent from tapping on a button in the sheet."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ConfirmationDialogState","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ConfirmationDialogState"}],"url":"\/documentation\/composablearchitecture\/confirmationdialogstate"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/TextState":{"role":"symbol","title":"TextState","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TextState"}],"abstract":[{"type":"text","text":"An equatable description of SwiftUI "},{"type":"codeVoice","code":"Text"},{"type":"text","text":". Useful for storing rich text in state for the"},{"type":"text","text":" "},{"type":"text","text":"purpose of rendering in a view hierarchy."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TextState"}],"url":"\/documentation\/composablearchitecture\/textstate"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/WithViewStore":{"role":"symbol","title":"WithViewStore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WithViewStore"}],"abstract":[{"type":"text","text":"A structure that transforms a store into an observable view store in order to compute views from"},{"type":"text","text":" "},{"type":"text","text":"store state."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WithViewStore"}],"url":"\/documentation\/composablearchitecture\/withviewstore"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/Reducer/debug(_:state:action:actionFormat:environment:)":{"role":"symbol","title":"debug(_:state:action:actionFormat:environment:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"debug"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"LocalState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"LocalAction"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"state"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerV5Statexmfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LocalState","preciseIdentifier":"s:22ComposableArchitecture7ReducerV5debug_5state6action0F6Format11environmentACyxq_q0_GSS_qd__xc9CasePaths0I4PathVyq_qd_0_GAA06ActionG0OAA16DebugEnvironmentVq0_ctr0_lF10LocalStateL_qd__mfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerV6Actionq_mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"LocalAction","preciseIdentifier":"s:22ComposableArchitecture7ReducerV5debug_5state6action0F6Format11environmentACyxq_q0_GSS_qd__xc9CasePaths0I4PathVyq_qd_0_GAA06ActionG0OAA16DebugEnvironmentVq0_ctr0_lF05LocalL0L_qd_0_mfp"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"actionFormat"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ActionFormat","preciseIdentifier":"s:22ComposableArchitecture12ActionFormatO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"environment"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Environment","preciseIdentifier":"s:22ComposableArchitecture7ReducerV11Environmentq0_mfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"DebugEnvironment","preciseIdentifier":"s:22ComposableArchitecture16DebugEnvironmentV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Reducer","preciseIdentifier":"s:22ComposableArchitecture7ReducerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Environment"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Prints debug messages describing all received local actions and local state mutations."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/debug(_:state:action:actionFormat:environment:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/reducer\/debug(_:state:action:actionformat:environment:)"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"role":"symbol","title":"TestStore","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestStore"}],"abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TestStore"}],"url":"\/documentation\/composablearchitecture\/teststore"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/ActionFormat":{"role":"symbol","title":"ActionFormat","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActionFormat"}],"abstract":[{"type":"text","text":"Determines how the string description of an action should be printed when using the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/debug(_:state:action:actionFormat:environment:)"},{"type":"text","text":" higher-order reducer."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ActionFormat","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ActionFormat"}],"url":"\/documentation\/composablearchitecture\/actionformat"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/Default":{"role":"symbol","title":"Default","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Default"}],"abstract":[{"type":"text","text":"A view that covers any cases that aren’t addressed in a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Default","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Default"}],"url":"\/documentation\/composablearchitecture\/default"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/GettingStarted":{"role":"article","title":"Getting Started","abstract":[{"type":"text","text":"Learn how to integrate the Composable Architecture into your project and write your first"},{"type":"text","text":" "},{"type":"text","text":"application."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/GettingStarted","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/gettingstarted"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"role":"symbol","title":"ViewStore","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewStore"}],"abstract":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"},{"type":"text","text":" is an object that can observe state changes and send actions. They are most"},{"type":"text","text":" "},{"type":"text","text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be"},{"type":"text","text":" "},{"type":"text","text":"used anywhere it makes sense to observe state and send actions."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ViewStore"}],"url":"\/documentation\/composablearchitecture\/viewstore"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/BindableState":{"role":"symbol","title":"BindableState","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindableState"}],"abstract":[{"type":"text","text":"A property wrapper type that can designate properties of app state that can be directly"},{"type":"text","text":" "},{"type":"text","text":"bindable in SwiftUI views."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableState","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BindableState"}],"url":"\/documentation\/composablearchitecture\/bindablestate"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/BindingAction":{"role":"symbol","title":"BindingAction","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindingAction"}],"abstract":[{"type":"text","text":"An action that describes simple mutations to some root state at a writable key path."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BindingAction"}],"url":"\/documentation\/composablearchitecture\/bindingaction"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"role":"symbol","title":"Reducer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"abstract":[{"type":"text","text":"A reducer describes how to evolve the current state of an application to the next state, given"},{"type":"text","text":" "},{"type":"text","text":"an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"url":"\/documentation\/composablearchitecture\/reducer"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/Store":{"role":"symbol","title":"Store","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Store"}],"url":"\/documentation\/composablearchitecture\/store"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/StorePublisher":{"role":"symbol","title":"StorePublisher","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StorePublisher"}],"abstract":[{"type":"text","text":"A publisher of store state."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/StorePublisher","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StorePublisher"}],"url":"\/documentation\/composablearchitecture\/storepublisher"},"https://github.com/pointfreeco/swift-composable-architecture/discussions":{"title":"Discussions","titleInlineContent":[{"type":"text","text":"Discussions"}],"type":"link","identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions","url":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/DebugEnvironment":{"role":"symbol","title":"DebugEnvironment","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DebugEnvironment"}],"abstract":[{"type":"text","text":"An environment for debug-printing reducers."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/DebugEnvironment","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DebugEnvironment"}],"url":"\/documentation\/composablearchitecture\/debugenvironment"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"role":"symbol","title":"CaseLet","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"url":"\/documentation\/composablearchitecture\/caselet"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/BindableAction":{"role":"symbol","title":"BindableAction","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindableAction"}],"abstract":[{"type":"text","text":"An action type that exposes a "},{"type":"codeVoice","code":"binding"},{"type":"text","text":" case that holds a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BindableAction"}],"url":"\/documentation\/composablearchitecture\/bindableaction"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/Identified":{"role":"symbol","title":"Identified","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Identified"}],"abstract":[{"type":"text","text":"A wrapper around a value and a hashable identifier that conforms to identifiable."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Identified","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Identified"}],"url":"\/documentation\/composablearchitecture\/identified"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore":{"role":"symbol","title":"ForEachStore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ForEachStore"}],"abstract":[{"type":"text","text":"A Composable Architecture-friendly wrapper around "},{"type":"codeVoice","code":"ForEach"},{"type":"text","text":" that simplifies working with"},{"type":"text","text":" "},{"type":"text","text":"collections of state."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ForEachStore"}],"url":"\/documentation\/composablearchitecture\/foreachstore"}}}