{"metadata":{"symbolKind":"macro","roleHeading":"Macro","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"},{"kind":"text","text":"()"}],"title":"Reducer()","role":"symbol","modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture7Reduceryycfm"},"seeAlsoSections":[{"title":"Implementing a reducer","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-20w8t","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reduce","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"],"anchor":"Implementing-a-reducer","generated":true}],"variants":[{"paths":["\/documentation\/composablearchitecture\/reducer()"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"]]},"sections":[],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()"},"abstract":[{"text":"Helps implement the conformance to the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","type":"reference"},{"text":" protocol for a type.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@attached","kind":"attribute"},{"text":"(member, names: named(State), named(Action), named(init), named(body), named(CaseScope), named(scope)) ","kind":"text"},{"text":"@attached","kind":"attribute"},{"text":"(memberAttribute) ","kind":"text"},{"text":"@attached","kind":"attribute"},{"text":"(extension, conformances: ","kind":"text"},{"text":"Reducer","preciseIdentifier":"s:22ComposableArchitecture7ReducerP","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"},{"text":", ","kind":"text"},{"text":"CaseReducer","preciseIdentifier":"s:22ComposableArchitecture11CaseReducerP","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducer"},{"text":") ","kind":"text"},{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"},{"kind":"text","text":"()"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"inlineContent":[{"type":"text","text":"See the article "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","isActive":true},{"type":"text","text":" for more information about the macro and "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","isActive":true},{"type":"text","text":" protocol."}],"type":"paragraph"}]}],"topicSections":[{"title":"Enum reducers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer(state:action:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerCaseEphemeral()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerCaseIgnored()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducerState"],"anchor":"Enum-reducers"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reduce":{"kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reduce","url":"\/documentation\/composablearchitecture\/reduce","role":"symbol","navigatorTitle":[{"text":"Reduce","kind":"identifier"}],"abstract":[{"type":"text","text":"A type-erased reducer that invokes the given "},{"type":"codeVoice","code":"reduce"},{"type":"text","text":" function."}],"title":"Reduce","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reduce","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerCaseIgnored()":{"title":"ReducerCaseIgnored()","kind":"symbol","abstract":[{"type":"text","text":"Marks the case of an enum reducer as “ignored”, and as such will not compose the case’s domain"},{"type":"text","text":" "},{"type":"text","text":"into the rest of the reducer besides state."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerCaseIgnored()","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReducerCaseIgnored","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/composablearchitecture\/reducercaseignored()","role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/reducer\/state","title":"State","required":true,"kind":"symbol","type":"topic","abstract":[{"text":"A type that holds the current state of the reducer.","type":"text"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/Action":{"title":"Action","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","url":"\/documentation\/composablearchitecture\/reducer\/action","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Action"}],"type":"topic","required":true,"abstract":[{"type":"text","text":"A type that holds all possible actions that cause the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State"},{"type":"text","text":" of the reducer to change"},{"type":"text","text":" "},{"type":"text","text":"and\/or kick off a side "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":" that can communicate with the outside world."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseReducerState":{"navigatorTitle":[{"text":"CaseReducerState","kind":"identifier"}],"type":"topic","url":"\/documentation\/composablearchitecture\/casereducerstate","abstract":[{"type":"text","text":"A state type that is associated with a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducer","isActive":true},{"type":"text","text":"."}],"role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CaseReducerState","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducerState","title":"CaseReducerState"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseReducer":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"A reducer represented by multiple enum cases."}],"title":"CaseReducer","navigatorTitle":[{"text":"CaseReducer","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CaseReducer","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/casereducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer(state:action:)":{"deprecated":true,"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"},{"text":"(","kind":"text"},{"text":"state","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture23_SynthesizedConformanceV","text":"_SynthesizedConformance","kind":"typeIdentifier"},{"text":"..., ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture23_SynthesizedConformanceV","text":"_SynthesizedConformance","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"abstract":[{"type":"text","text":"An overload of "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","isActive":true},{"type":"text","text":" that takes a description of protocol conformances to synthesize on"},{"type":"text","text":" "},{"type":"text","text":"the State and Action types"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer(state:action:)","type":"topic","url":"\/documentation\/composablearchitecture\/reducer(state:action:)","title":"Reducer(state:action:)","kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerCaseEphemeral()":{"title":"ReducerCaseEphemeral()","abstract":[{"type":"text","text":"Marks the case of an enum reducer as holding onto “ephemeral” state."}],"type":"topic","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReducerCaseEphemeral","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerCaseEphemeral()","url":"\/documentation\/composablearchitecture\/reducercaseephemeral()","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/body-20w8t":{"abstract":[{"text":"The content and behavior of a reducer that is composed from other reducers.","type":"text"}],"required":true,"type":"topic","role":"symbol","title":"body","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Body","preciseIdentifier":"s:22ComposableArchitecture7ReducerP4BodyQa"}],"url":"\/documentation\/composablearchitecture\/reducer\/body-20w8t","defaultImplementations":2,"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-20w8t"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer()":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","abstract":[{"type":"text","text":"Helps implement the conformance to the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","isActive":true},{"type":"text","text":" protocol for a type."}],"role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/composablearchitecture\/reducer()","title":"Reducer()","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"kind":"symbol","title":"Effect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","url":"\/documentation\/composablearchitecture\/effect","role":"symbol","navigatorTitle":[{"text":"Effect","kind":"identifier"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","role":"collection","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"}}}