{"kind":"symbol","metadata":{"modules":[{"name":"ComposableArchitecture"}],"title":"subscript(case:)","externalID":"s:22ComposableArchitecture17PresentationStateV4caseqd__Sgs7KeyPathCy13CasePathsCore0H0VyxGAJyqd__GG_tcAH0H8PathableRzluip","role":"symbol","symbolKind":"subscript","roleHeading":"Instance Subscript","fragments":[{"text":"subscript","kind":"keyword"},{"text":"<","kind":"text"},{"text":"Case","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"case","kind":"externalParam"},{"text":" _: ","kind":"text"},{"text":"CaseKeyPath","preciseIdentifier":"s:13CasePathsCore0A7KeyPatha","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Case","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Case","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/subscript(case:)","interfaceLanguage":"swift"},"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/presentationstate\/subscript(case:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Accesses the value associated with the given case for reading and writing.","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Case"},{"kind":"text","text":">("},{"kind":"externalParam","text":"case"},{"kind":"text","text":" "},{"kind":"internalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CaseKeyPath","preciseIdentifier":"s:13CasePathsCore0A7KeyPatha"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Case"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Case"},{"kind":"text","text":"? "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"CasePathable","preciseIdentifier":"s:13CasePathsCore0A8PathableP"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"kind":"keyword","text":"set"},{"kind":"text","text":" }"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"inlineContent":[{"text":"If you use the techniques of tree-based navigation (see ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","type":"reference"},{"text":"), then","type":"text"},{"text":" ","type":"text"},{"text":"you will have a single enum that determines the destinations your feature can navigate to,","type":"text"},{"text":" ","type":"text"},{"text":"and you will hold onto that state using the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Presents()","type":"reference"},{"text":" macro:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["@ObservableState","struct State {","  @Presents var destination: Destination.State","}"]},{"inlineContent":[{"text":"The ","type":"text"},{"code":"destination","type":"codeVoice"},{"text":" property has a projected value of ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","isActive":true,"type":"reference"},{"text":", which gives you a","type":"text"},{"text":" ","type":"text"},{"text":"succinct syntax for modifying the data in a particular case of the ","type":"text"},{"code":"Destination","type":"codeVoice"},{"text":" enum, like","type":"text"},{"text":" ","type":"text"},{"text":"so:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["state.$destination[case: \\.detail]?.alert = AlertState {","  Text(\"Delete?\")","}"]},{"name":"Important","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"Accessing the wrong case will result in a runtime warning and test failure.","type":"text"}]}],"style":"important"}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Presents()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Presents()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"role":"symbol","type":"topic","title":"Effect","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","url":"\/documentation\/composablearchitecture\/effect","abstract":[],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Presents()":{"role":"symbol","title":"Presents()","kind":"symbol","abstract":[{"type":"text","text":"Wraps a property with "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState"},{"type":"text","text":" and observes it."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Presents()","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Presents"},{"kind":"text","text":"()"}],"url":"\/documentation\/composablearchitecture\/presents()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/subscript(case:)":{"type":"topic","abstract":[{"text":"Accesses the value associated with the given case for reading and writing.","type":"text"}],"title":"subscript(case:)","kind":"symbol","url":"\/documentation\/composablearchitecture\/presentationstate\/subscript(case:)","role":"symbol","fragments":[{"text":"subscript","kind":"keyword"},{"text":"<","kind":"text"},{"text":"Case","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"case","kind":"externalParam"},{"text":" _: ","kind":"text"},{"preciseIdentifier":"s:13CasePathsCore0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Case","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Case","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/subscript(case:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TreeBasedNavigation":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","title":"Tree-based navigation","kind":"article","type":"topic","role":"article","url":"\/documentation\/composablearchitecture\/treebasednavigation","abstract":[{"text":"Learn about tree-based navigation, that is navigation modeled with optionals and enums, including","type":"text"},{"text":" ","type":"text"},{"text":"how to model your domains, how to integrate features, how to test your features, and more.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","type":"topic","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState":{"abstract":[{"type":"text","text":"A property wrapper for state that can be presented."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","title":"PresentationState","url":"\/documentation\/composablearchitecture\/presentationstate","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PresentationState"}],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PresentationState"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","abstract":[{"text":"Learn how to use the navigation tools in the library, including how to best model your domains, how","type":"text"},{"text":" ","type":"text"},{"text":"to integrate features in the reducer and view layers, and how to write tests.","type":"text"}],"title":"Navigation","url":"\/documentation\/composablearchitecture\/navigation","role":"collectionGroup","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","url":"\/documentation\/composablearchitecture\/reducer","type":"topic","title":"Reducer","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"text":"s should be executed later by the store, if any.","type":"text"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"role":"symbol"}}}