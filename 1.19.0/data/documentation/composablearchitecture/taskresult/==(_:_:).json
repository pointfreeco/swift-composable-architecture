{"kind":"symbol","metadata":{"role":"symbol","externalID":"s:22ComposableArchitecture10TaskResultOAASQRzrlE2eeoiySbACyxG_AEtFZ","symbolKind":"op","roleHeading":"Operator","extendedModule":"ComposableArchitecture","modules":[{"name":"ComposableArchitecture"}],"title":"==(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"TaskResult","preciseIdentifier":"s:22ComposableArchitecture10TaskResultO"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Success"},{"text":">, ","kind":"text"},{"text":"TaskResult","preciseIdentifier":"s:22ComposableArchitecture10TaskResultO","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Success","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":" and "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}]}},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/==(_:_:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/taskresult\/==(_:_:)"]}],"abstract":[{"type":"text","text":"Inherited from "},{"code":"Equatable.==(_:_:)","type":"codeVoice"},{"type":"text","text":"."}],"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/Equatable-Implementations"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/Equatable-Implementations"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"text":"TaskResult","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult","preciseIdentifier":"s:22ComposableArchitecture10TaskResultO","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult","text":"TaskResult","preciseIdentifier":"s:22ComposableArchitecture10TaskResultO"},{"text":"<","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"languages":["swift"]}],"kind":"declarations"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true,"type":"reference"},{"text":"s should be executed later by the store, if any.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","role":"symbol","kind":"symbol","title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult/==(_:_:)":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/==(_:_:)","url":"\/documentation\/composablearchitecture\/taskresult\/==(_:_:)","title":"==(_:_:)","role":"symbol","abstract":[],"type":"topic","conformance":{"constraints":[{"code":"Success","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"TaskResult","preciseIdentifier":"s:22ComposableArchitecture10TaskResultO"},{"kind":"text","text":"<"},{"text":"Success","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"TaskResult","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture10TaskResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"kind":"symbol","title":"Effect","type":"topic","url":"\/documentation\/composablearchitecture\/effect","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","navigatorTitle":[{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult":{"abstract":[{"type":"text","text":"A value that represents either a success or a failure. This type differs from Swiftâ€™s "},{"type":"codeVoice","code":"Result"},{"text":" ","type":"text"},{"type":"text","text":"type in that it uses only one generic for the success case, leaving the failure case as an"},{"text":" ","type":"text"},{"text":"untyped ","type":"text"},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TaskResult"}],"deprecated":true,"type":"topic","url":"\/documentation\/composablearchitecture\/taskresult","kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult","title":"TaskResult","navigatorTitle":[{"text":"TaskResult","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult/Equatable-Implementations":{"title":"Equatable Implementations","url":"\/documentation\/composablearchitecture\/taskresult\/equatable-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/Equatable-Implementations","kind":"article","type":"topic","abstract":[],"role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"kind":"symbol","title":"ComposableArchitecture","type":"topic","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"}}}