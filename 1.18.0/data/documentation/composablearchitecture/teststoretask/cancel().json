{"kind":"symbol","sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreTask\/cancel()"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreTask"]]},"metadata":{"modules":[{"name":"ComposableArchitecture"}],"role":"symbol","roleHeading":"Instance Method","externalID":"s:22ComposableArchitecture13TestStoreTaskV6cancelyyYaF","title":"cancel()","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"cancel","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}]},"abstract":[{"type":"text","text":"Cancels the underlying task and waits for it to finish."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/teststoretask\/cancel()"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cancel","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This can be handy when a feature needs to start a long-living effect when the feature appears,"},{"type":"text","text":" "},{"type":"text","text":"but cancellation of that effect is handled by the parent when the feature disappears. Such a"},{"text":" ","type":"text"},{"type":"text","text":"feature is difficult to exhaustively test in isolation because there is no action in its"},{"type":"text","text":" "},{"type":"text","text":"domain that cancels the effect:"}]},{"syntax":"swift","type":"codeListing","code":["let store = TestStore(\/* ... *\/)","","let onAppearTask = await store.send(.onAppear)","\/\/ Assert what is happening in the feature","","await onAppearTask.cancel() \/\/ âœ… Cancel the task to simulate the feature disappearing."]}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStoreTask":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreTask","role":"symbol","url":"\/documentation\/composablearchitecture\/teststoretask","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"TestStoreTask","kind":"identifier"}],"navigatorTitle":[{"text":"TestStoreTask","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"The type returned from "},{"code":"TestStore\/send(_:assert:fileID:file:line:column:)-8f2pl","type":"codeVoice"},{"text":" that represents the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"lifecycle of the effect started from sending an action."}],"title":"TestStoreTask","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/teststore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"title":"TestStore","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TestStore"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestStore"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStoreTask/cancel()":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/teststoretask\/cancel()","abstract":[{"text":"Cancels the underlying task and waits for it to finish.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cancel"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"}],"title":"cancel()","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreTask\/cancel()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","title":"ComposableArchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic"}}}