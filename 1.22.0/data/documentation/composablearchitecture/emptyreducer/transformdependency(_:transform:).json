{"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer\/transformDependency(_:transform:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@warn_unqualified_access"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"transformDependency"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"keyPath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"DependencyValues","preciseIdentifier":"s:12Dependencies16DependencyValuesV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"transform"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"_DependencyKeyWritingReducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"A key path that indicates the property of the ","type":"text"},{"code":"DependencyValues","type":"codeVoice"},{"text":" structure to","type":"text"},{"text":" ","type":"text"},{"text":"transform.","type":"text"}],"type":"paragraph"}],"name":"keyPath"},{"content":[{"inlineContent":[{"type":"text","text":"A closure that is handed a mutable instance of the value specified by the key"},{"type":"text","text":" "},{"type":"text","text":"path."}],"type":"paragraph"}],"name":"transform"}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This is similar to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer\/dependency(_:_:)"},{"text":", except it allows you to mutate a dependency value","type":"text"},{"text":" ","type":"text"},{"text":"directly. This can be handy when you want to alter a dependency but still use its current","type":"text"},{"text":" ","type":"text"},{"text":"value.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, suppose you want to see when a particular endpoint of a dependency gets called"},{"type":"text","text":" "},{"type":"text","text":"in your application. You can override that endpoint to insert a breakpoint or print statement,"},{"type":"text","text":" "},{"type":"text","text":"but still call out to the original endpoint:"}]},{"type":"codeListing","code":["  Feature()","    .transformDependency(\\.speechClient) { speechClient in","      speechClient.requestAuthorization = {","        print(\"requestAuthorization\")","        try await speechClient.requestAuthorization()","      }","    }"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also transform "},{"type":"emphasis","inlineContent":[{"type":"text","text":"all"}]},{"type":"text","text":" dependency values at once by using the "},{"type":"codeVoice","code":"\\.self"},{"type":"text","text":" key path:"}]},{"type":"codeListing","code":["Feature()","  .transformDependency(\\.self) { dependencyValues in","    \/\/ Access to all dependencies in here","  }"],"syntax":"swift"},{"type":"aside","name":"Warning","content":[{"inlineContent":[{"type":"text","text":"The trailing closure of "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer\/transformDependency(_:transform:)","type":"reference","isActive":true},{"type":"text","text":" is called for every"},{"type":"text","text":" "},{"type":"text","text":"action sent to the reducer, and so you can expect it to be called many times in an"},{"type":"text","text":" "},{"type":"text","text":"application’s lifecycle. This means you should typically not create dependencies in the"},{"type":"text","text":" "},{"type":"text","text":"closure as that will cause a new dependency to be created everytime an action is sent."}],"type":"paragraph"}],"style":"warning"}]}],"kind":"symbol","variants":[{"paths":["\/documentation\/composablearchitecture\/emptyreducer\/transformdependency(_:transform:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer\/Reducer-Implementations"]]},"abstract":[{"type":"text","text":"Transform a reducer’s dependency value at the specified key path with the given function."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"metadata":{"extendedModule":"ComposableArchitecture","modules":[{"name":"ComposableArchitecture"}],"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"transformDependency","kind":"identifier"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"text":"DependencyValues","kind":"typeIdentifier","preciseIdentifier":"s:12Dependencies16DependencyValuesV"},{"text":", ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"transform"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"_DependencyKeyWritingReducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"role":"symbol","externalID":"s:22ComposableArchitecture7ReducerPAAE19transformDependency_0D0AA01_e10KeyWritingC0VyxGs08WritableF4PathCy12Dependencies0E6ValuesVqd__G_yqd__zctlF::SYNTHESIZED::s:22ComposableArchitecture12EmptyReducerV","roleHeading":"Instance Method","title":"transformDependency(_:transform:)"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/EmptyReducer":{"url":"\/documentation\/composablearchitecture\/emptyreducer","navigatorTitle":[{"kind":"identifier","text":"EmptyReducer"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer","title":"EmptyReducer","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmptyReducer"}],"abstract":[{"text":"A reducer that does nothing.","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"kind":"symbol","title":"Effect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","url":"\/documentation\/composablearchitecture\/effect","role":"symbol","navigatorTitle":[{"text":"Effect","kind":"identifier"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","role":"collection","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EmptyReducer/dependency(_:_:)":{"role":"symbol","url":"\/documentation\/composablearchitecture\/emptyreducer\/dependency(_:_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer\/dependency(_:_:)","abstract":[{"text":"Sets the dependency value of the specified key path to the given value.","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dependency"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV","kind":"typeIdentifier","text":"DependencyValues"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"_DependencyKeyWritingReducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"title":"dependency(_:_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EmptyReducer/Reducer-Implementations":{"role":"collectionGroup","kind":"article","abstract":[],"url":"\/documentation\/composablearchitecture\/emptyreducer\/reducer-implementations","type":"topic","title":"Reducer Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer\/Reducer-Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EmptyReducer/transformDependency(_:transform:)":{"role":"symbol","url":"\/documentation\/composablearchitecture\/emptyreducer\/transformdependency(_:transform:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer\/transformDependency(_:transform:)","abstract":[{"type":"text","text":"Transform a reducer’s dependency value at the specified key path with the given function."}],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"transformDependency"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV","kind":"typeIdentifier","text":"DependencyValues"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"transform"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"_DependencyKeyWritingReducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"title":"transformDependency(_:transform:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"title":"Reducer"}}}