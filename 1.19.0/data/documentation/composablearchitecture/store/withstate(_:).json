{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"withState"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"body"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"R"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A closure that takes the current state of the store as its sole argument. If"},{"text":" ","type":"text"},{"text":"the closure has a return value, that value is also used as the return value of the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"withState"},{"text":" method. The state argument reflects the current state of the store only for the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"duration of the closureâ€™s execution, and is only observable over time, "},{"inlineContent":[{"type":"text","text":"e.g."}],"type":"emphasis"},{"type":"text","text":" by SwiftUI, if"},{"text":" ","type":"text"},{"text":"it conforms to ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}],"name":"body"}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The return value, if any, of the "},{"type":"codeVoice","code":"body"},{"text":" closure.","type":"text"}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"A lightweight way of accessing store state when state is not observable and ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-1qxwl"},{"type":"text","text":" is"},{"text":" ","type":"text"},{"text":"unavailable.","type":"text"}]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-1qxwl","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/subscript(dynamicMember:)-655ef"],"generated":true,"anchor":"Accessing-state","title":"Accessing state"}],"metadata":{"roleHeading":"Instance Method","title":"withState(_:)","symbolKind":"method","externalID":"s:22ComposableArchitecture5StoreC9withStateyqd__qd__xXElF","modules":[{"name":"ComposableArchitecture"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"withState"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">(("},{"text":"State","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"R","kind":"typeIdentifier"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/withState(_:)"},"abstract":[{"type":"text","text":"Calls the given closure with a snapshot of the current state of the store."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/store\/withstate(_:)"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/withState(_:)":{"role":"symbol","abstract":[{"text":"Calls the given closure with a snapshot of the current state of the store.","type":"text"}],"url":"\/documentation\/composablearchitecture\/store\/withstate(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withState"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"R"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"}],"type":"topic","title":"withState(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/withState(_:)","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/state-1qxwl":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-1qxwl","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Direct access to state in the store when "},{"code":"State","type":"codeVoice"},{"type":"text","text":" conforms to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState"},{"type":"text","text":"."}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"code":"ObservableState","type":"codeVoice"},{"text":".","type":"text"}]},"title":"state","url":"\/documentation\/composablearchitecture\/store\/state-1qxwl","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"state","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"State"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","title":"Store","abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"kind":"symbol","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"url":"\/documentation\/composablearchitecture\/store","navigatorTitle":[{"kind":"identifier","text":"Store"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"kind":"symbol","title":"ComposableArchitecture","type":"topic","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState":{"navigatorTitle":[{"kind":"identifier","text":"ObservableState"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState","role":"symbol","kind":"symbol","abstract":[],"title":"ObservableState","url":"\/documentation\/composablearchitecture\/observablestate","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ObservableState","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/subscript(dynamicMember:)-655ef":{"role":"symbol","abstract":[],"url":"\/documentation\/composablearchitecture\/store\/subscript(dynamicmember:)-655ef","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"State"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ObservableState"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"dynamicMember"},{"kind":"text","text":" _: "},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"}],"type":"topic","title":"subscript(dynamicMember:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/subscript(dynamicMember:)-655ef","kind":"symbol"}}}