{"kind":"symbol","abstract":[{"type":"text","text":"A property observation called before setting the value of the subject."}],"metadata":{"extendedModule":"ComposableArchitecture","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"willModify","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Subject","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Member"},{"kind":"text","text":">("},{"text":"Subject","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"keyPath","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"text":"Subject","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Member","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"Member","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Member","kind":"typeIdentifier"}],"modules":[{"name":"ComposableArchitecture"}],"platforms":[{"introducedAt":"17.0","name":"iOS","beta":false,"deprecated":false,"unavailable":false},{"deprecated":false,"beta":false,"introducedAt":"14.0","unavailable":false,"name":"macOS"},{"beta":false,"introducedAt":"17.0","deprecated":false,"unavailable":false,"name":"tvOS"},{"deprecated":false,"introducedAt":"10.0","unavailable":false,"beta":false,"name":"watchOS"}],"role":"symbol","symbolKind":"method","title":"willModify(_:keyPath:_:)","externalID":"s:22ComposableArchitecture25ObservationStateRegistrarV10willModify_7keyPath_q_x_s03KeyI0Cyxq_Gq_zt0C010ObservableRzAA0kD0R_r0_lF","roleHeading":"Instance Method"},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/observationstateregistrar\/willmodify(_:keypath:_:)-29op6"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"willModify","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Subject"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Member"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"subject"},{"kind":"text","text":": "},{"text":"Subject","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"keyPath"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Subject"},{"text":", ","kind":"text"},{"text":"Member","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"member"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Member","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Member"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Subject"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:11Observation10ObservableP","kind":"typeIdentifier","text":"Observable"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Member"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture15ObservableStateP","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState","text":"ObservableState"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"An instance of an observable type.`","type":"text"}]}],"name":"subject"},{"name":"keyPath","content":[{"inlineContent":[{"type":"text","text":"The key path of an observed property."}],"type":"paragraph"}]},{"name":"member","content":[{"inlineContent":[{"type":"text","text":"The value in the subject that will be set."}],"type":"paragraph"}]}],"kind":"parameters"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar"]]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar\/willModify(_:keyPath:_:)-29op6","interfaceLanguage":"swift"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateRegistrar/willModify(_:keyPath:_:)-29op6":{"abstract":[{"text":"A property observation called before setting the value of the subject.","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar\/willModify(_:keyPath:_:)-29op6","title":"willModify(_:keyPath:_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"willModify"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Subject"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Member"},{"kind":"text","text":">("},{"text":"Subject","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"keyPath","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"Subject","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Member","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Member"},{"text":") -> ","kind":"text"},{"text":"Member","kind":"typeIdentifier"}],"url":"\/documentation\/composablearchitecture\/observationstateregistrar\/willmodify(_:keypath:_:)-29op6"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ObservableState"}],"abstract":[],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"ObservableState","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState","title":"ObservableState","role":"symbol","url":"\/documentation\/composablearchitecture\/observablestate"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"url":"\/documentation\/composablearchitecture\/reducer\/state","title":"State","abstract":[{"text":"A type that holds the current state of the reducer.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"State","kind":"identifier"}],"type":"topic","required":true,"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","role":"symbol","title":"Effect","navigatorTitle":[{"text":"Effect","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Effect","kind":"identifier"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateRegistrar":{"type":"topic","url":"\/documentation\/composablearchitecture\/observationstateregistrar","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ObservationStateRegistrar","kind":"identifier"}],"abstract":[{"text":"Provides storage for tracking and access to data changes.","type":"text"}],"kind":"symbol","title":"ObservationStateRegistrar","navigatorTitle":[{"text":"ObservationStateRegistrar","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState()":{"kind":"symbol","abstract":[{"type":"text","text":"Defines and implements conformance of the Observable protocol."}],"fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"ObservableState","kind":"identifier"},{"kind":"text","text":"()"}],"url":"\/documentation\/composablearchitecture\/observablestate()","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","role":"symbol","title":"ObservableState()","type":"topic"}}}