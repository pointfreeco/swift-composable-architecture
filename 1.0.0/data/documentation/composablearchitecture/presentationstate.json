{"seeAlsoSections":[{"title":"Tree-based navigation","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:destination:fileID:line:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PresentationState"}],"title":"PresentationState","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:22ComposableArchitecture17PresentationStateV","modules":[{"name":"ComposableArchitecture"}],"navigatorTitle":[{"kind":"identifier","text":"PresentationState"}]},"abstract":[{"type":"text","text":"A property wrapper for state that can be presented."}],"sections":[],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/s17CustomReflectableP","doc:\/\/ComposableArchitecture\/Se","doc:\/\/ComposableArchitecture\/SE","doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/SH","doc:\/\/ComposableArchitecture\/s8SendableP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:then:fileID:line:)"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/init(wrappedValue:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/projectedValue","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/wrappedValue"]},{"title":"Subscripts","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/subscript(case:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/CustomReflectable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/Decodable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/Encodable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/Equatable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/Hashable-Implementations"],"generated":true}],"variants":[{"paths":["\/documentation\/composablearchitecture\/presentationstate"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PresentationState"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"State"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this property wrapper for modeling a feature’s domain that needs to present a child feature"},{"type":"text","text":" "},{"type":"text","text":"using "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:destination:fileID:line:)"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, if you have a "},{"type":"codeVoice","code":"ChildFeature"},{"type":"text","text":" reducer that encapsulates the logic and behavior for a"},{"type":"text","text":" "},{"type":"text","text":"feature, then any feature that wants to present that feature will hold onto "},{"type":"codeVoice","code":"ChildFeature.State"},{"type":"text","text":" "},{"type":"text","text":"like so:"}]},{"type":"codeListing","syntax":"swift","code":["struct ParentFeature: Reducer {","  struct State {","    @PresentationState var child: Child.State?","     \/\/ ...","  }","  \/\/ ...","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For the most part your feature’s logic can deal with "},{"type":"codeVoice","code":"child"},{"type":"text","text":" as a plain optional value, but"},{"type":"text","text":" "},{"type":"text","text":"there are times you need to know that you are secretly dealing with "},{"type":"codeVoice","code":"PresentationState"},{"type":"text","text":". For"},{"type":"text","text":" "},{"type":"text","text":"example, when using the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:destination:fileID:line:)"},{"type":"text","text":" reducer operator to"},{"type":"text","text":" "},{"type":"text","text":"integrate the parent and child features together, you will construct a key path to the projected"},{"type":"text","text":" "},{"type":"text","text":"value "},{"type":"codeVoice","code":"\\.$child"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["struct ParentFeature: Reducer {","  \/\/ ...","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      \/\/ Core logic for parent feature","    }","    .ifLet(\\.$child, action: \/Action.child) {","      ChildFeature()","    }","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"See the dedicated article on "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"},{"type":"text","text":" for more information on the library’s navigation"},{"type":"text","text":" "},{"type":"text","text":"tools, and in particular see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation"},{"type":"text","text":" for information on modeling navigation"},{"type":"text","text":" "},{"type":"text","text":"using optionals and enums."}]}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"role":"symbol","title":"Reducer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"url":"\/documentation\/composablearchitecture\/reducer"},"doc://ComposableArchitecture/Se":{"type":"unresolvable","title":"Swift.Decodable","identifier":"doc:\/\/ComposableArchitecture\/Se"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/Encodable-Implementations":{"role":"collectionGroup","title":"Encodable Implementations","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/Encodable-Implementations","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/presentationstate\/encodable-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/init(wrappedValue:)":{"role":"symbol","title":"init(wrappedValue:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":"?)"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/init(wrappedValue:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/presentationstate\/init(wrappedvalue:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/ifLet(_:action:destination:fileID:line:)":{"role":"symbol","title":"ifLet(_:action:destination:fileID:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"ifLet"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"DestinationState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"DestinationAction"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Destination"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"PresentationState","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"DestinationState"},{"kind":"text","text":">>, "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"PresentationAction","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"DestinationAction"},{"kind":"text","text":">>, "},{"kind":"externalParam","text":"destination"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Destination"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"_PresentationReducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Destination"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain that works on an optional property of parent state."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:destination:fileID:line:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/reducer\/iflet(_:action:destination:fileid:line:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/CustomReflectable-Implementations":{"role":"collectionGroup","title":"CustomReflectable Implementations","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/CustomReflectable-Implementations","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/presentationstate\/customreflectable-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/Decodable-Implementations":{"role":"collectionGroup","title":"Decodable Implementations","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/Decodable-Implementations","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/presentationstate\/decodable-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/Equatable-Implementations","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/presentationstate\/equatable-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/ifLet(_:action:then:fileID:line:)":{"role":"symbol","title":"ifLet(_:action:then:fileID:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"ifLet"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"WrappedState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"WrappedAction"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Wrapped"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"WrappedState"},{"kind":"text","text":"?>, "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"WrappedAction"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"then"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"_IfLetReducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain that works on an optional property of parent state."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:then:fileID:line:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/reducer\/iflet(_:action:then:fileid:line:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState":{"role":"symbol","title":"PresentationState","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PresentationState"}],"abstract":[{"type":"text","text":"A property wrapper for state that can be presented."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PresentationState"}],"url":"\/documentation\/composablearchitecture\/presentationstate"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/subscript(case:)":{"role":"symbol","title":"subscript(case:)","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Case"},{"kind":"text","text":">("},{"kind":"externalParam","text":"case"},{"kind":"text","text":" _: "},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Case"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Case"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Accesses the value associated with the given case for reading and writing."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/subscript(case:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/presentationstate\/subscript(case:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"role":"symbol","title":"Effect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"url":"\/documentation\/composablearchitecture\/effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction":{"role":"symbol","title":"PresentationAction","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"PresentationAction"}],"abstract":[{"type":"text","text":"A wrapper type for actions that can be presented."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PresentationAction"}],"url":"\/documentation\/composablearchitecture\/presentationaction"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect":{"role":"symbol","title":"DismissEffect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DismissEffect"}],"abstract":[{"type":"text","text":"An effect that dismisses the current presentation."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DismissEffect"}],"url":"\/documentation\/composablearchitecture\/dismisseffect"},"doc://ComposableArchitecture/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/ComposableArchitecture\/SQ"},"doc://ComposableArchitecture/s17CustomReflectableP":{"type":"unresolvable","title":"Swift.CustomReflectable","identifier":"doc:\/\/ComposableArchitecture\/s17CustomReflectableP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/projectedValue":{"role":"symbol","title":"projectedValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"projectedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PresentationState","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/projectedValue","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/presentationstate\/projectedvalue"},"doc://ComposableArchitecture/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/ComposableArchitecture\/SH"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/wrappedValue":{"role":"symbol","title":"wrappedValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":"?"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/wrappedValue","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/presentationstate\/wrappedvalue"},"doc://ComposableArchitecture/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP"},"doc://ComposableArchitecture/SE":{"type":"unresolvable","title":"Swift.Encodable","identifier":"doc:\/\/ComposableArchitecture\/SE"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"role":"collectionGroup","title":"Navigation","abstract":[{"type":"text","text":"Learn how to use the navigation tools in the library, including how to best model your domains, how"},{"type":"text","text":" "},{"type":"text","text":"to integrate features in the reducer and view layers, and how to write tests."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/Hashable-Implementations":{"role":"collectionGroup","title":"Hashable Implementations","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/Hashable-Implementations","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/presentationstate\/hashable-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TreeBasedNavigation":{"role":"article","title":"Tree-based navigation","abstract":[{"type":"text","text":"Learn about tree-based navigation, that is navigation modeled with optionals and enums, including"},{"type":"text","text":" "},{"type":"text","text":"how to model your domains, how to integrate features, how to test your features, and more."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/treebasednavigation"}}}