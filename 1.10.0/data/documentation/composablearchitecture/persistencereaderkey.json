{"seeAlsoSections":[{"title":"Read-only persistence","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharedReader"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PersistenceReaderKey"}],"title":"PersistenceReaderKey","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:22ComposableArchitecture20PersistenceReaderKeyP","modules":[{"name":"ComposableArchitecture"}],"navigatorTitle":[{"kind":"identifier","text":"PersistenceReaderKey"}]},"abstract":[{"type":"text","text":"A type that can load and subscribe to state in an external system."}],"sections":[],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/SH"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKey"],"kind":"relationships","title":"Inherited By","type":"inheritedBy"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducers","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"]]},"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/Value"]},{"title":"Instance Methods","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/load(initialValue:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/subscribe(initialValue:didSet:)-hab7"]}],"variants":[{"paths":["\/documentation\/composablearchitecture\/persistencereaderkey"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PersistenceReaderKey"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"> : "},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Conform to this protocol to express loading state from an external system, and subscribing to"},{"type":"text","text":" "},{"type":"text","text":"state changes in the external system. It is only necessary to conform to this protocol if the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKey"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey"},{"type":"text","text":", or "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey"},{"type":"text","text":" strategies are not sufficient for your"},{"type":"text","text":" "},{"type":"text","text":"use case."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"See the article "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"},{"type":"text","text":" for more information, in particular the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState#Custom-persistence"},{"type":"text","text":" section."}]}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey":{"role":"symbol","title":"PersistenceReaderKey","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PersistenceReaderKey"}],"abstract":[{"type":"text","text":"A type that can load and subscribe to state in an external system."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PersistenceReaderKey"}],"url":"\/documentation\/composablearchitecture\/persistencereaderkey"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKeyDefault":{"conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"PersistenceKey"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"PersistenceKeyDefault","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PersistenceKeyDefault"}],"abstract":[{"type":"text","text":"A persistence key that provides a default value to an existing persistence key."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PersistenceKeyDefault"}],"url":"\/documentation\/composablearchitecture\/persistencekeydefault"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FileStorageKey":{"role":"symbol","title":"FileStorageKey","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileStorageKey"}],"abstract":[{"type":"text","text":"A type defining a file persistence strategy"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FileStorageKey"}],"url":"\/documentation\/composablearchitecture\/filestoragekey"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/load(initialValue:)":{"role":"symbol","title":"load(initialValue:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"load"},{"kind":"text","text":"("},{"kind":"externalParam","text":"initialValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Loads the freshest value from storage. Returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if there is no value in storage."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/load(initialValue:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/composablearchitecture\/persistencereaderkey\/load(initialvalue:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/InMemoryKey":{"role":"symbol","title":"InMemoryKey","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"InMemoryKey"}],"abstract":[{"type":"text","text":"A type defining an in-memory persistence strategy"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InMemoryKey"}],"url":"\/documentation\/composablearchitecture\/inmemorykey"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducers":{"role":"collectionGroup","title":"Reducers","abstract":[{"type":"text","text":"Learn about one of the most fundamental tools in the Composable Architecture: the reducer. It is"},{"type":"text","text":" "},{"type":"text","text":"responsible for evolving the state of your application forward when an action is sent, and"},{"type":"text","text":" "},{"type":"text","text":"constructing effects that are executed in the outside world."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducers","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/reducers"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKey":{"role":"symbol","title":"AppStorageKey","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AppStorageKey"}],"abstract":[{"type":"text","text":"A type defining a user defaults persistence strategy."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AppStorageKey"}],"url":"\/documentation\/composablearchitecture\/appstoragekey"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState#Custom-persistence":{"abstract":[],"title":"Custom persistence","kind":"section","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState#Custom-persistence","url":"\/documentation\/composablearchitecture\/sharingstate#Custom-persistence"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer()":{"role":"symbol","title":"Reducer()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Helps implement the conformance to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"},{"type":"text","text":" protocol for a type."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/reducer()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"role":"symbol","title":"Effect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"url":"\/documentation\/composablearchitecture\/effect"},"doc://ComposableArchitecture/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/ComposableArchitecture\/SH"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharedReader":{"role":"symbol","title":"SharedReader","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SharedReader"}],"abstract":[{"type":"text","text":"A property wrapper type that shares a value with multiple parts of an application."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharedReader","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SharedReader"}],"url":"\/documentation\/composablearchitecture\/sharedreader"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/Value":{"role":"symbol","title":"Value","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Value"}],"abstract":[{"type":"text","text":"A type that can be loaded or subscribed to in an external system."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/Value","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/composablearchitecture\/persistencereaderkey\/value"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKeyPathKey":{"role":"symbol","title":"AppStorageKeyPathKey","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AppStorageKeyPathKey"}],"abstract":[{"type":"text","text":"A type defining a user defaults persistence strategy via key path."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AppStorageKeyPathKey"}],"url":"\/documentation\/composablearchitecture\/appstoragekeypathkey"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/subscribe(initialValue:didSet:)-hab7":{"defaultImplementations":1,"role":"symbol","title":"subscribe(initialValue:didSet:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"subscribe"},{"kind":"text","text":"("},{"kind":"externalParam","text":"initialValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"didSet"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Shared","preciseIdentifier":"s:22ComposableArchitecture6SharedV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Subscription","preciseIdentifier":"s:22ComposableArchitecture6SharedV12SubscriptionC"}],"abstract":[{"type":"text","text":"Subscribes to external updates."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/subscribe(initialValue:didSet:)-hab7","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/composablearchitecture\/persistencereaderkey\/subscribe(initialvalue:didset:)-hab7"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"role":"collectionGroup","title":"Sharing state","abstract":[{"type":"text","text":"Learn techniques for sharing state throughout many parts of your application, and how to persist"},{"type":"text","text":" "},{"type":"text","text":"data to user defaults, the file system, and other external mediums."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/sharingstate"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKey":{"role":"symbol","title":"PersistenceKey","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PersistenceKey"}],"abstract":[{"type":"text","text":"A type that can persist shared state to an external storage."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PersistenceKey"}],"url":"\/documentation\/composablearchitecture\/persistencekey"},"doc://ComposableArchitecture/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/ComposableArchitecture\/SQ"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"role":"symbol","title":"Reducer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"url":"\/documentation\/composablearchitecture\/reducer"}}}