{"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fontWidth","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"width","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Font","preciseIdentifier":"s:7SwiftUI4FontV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Width","preciseIdentifier":"s:7SwiftUI4FontV5WidthV","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"},{"text":"\n","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/fontWidth(_:)","interfaceLanguage":"swift"},"metadata":{"platforms":[{"deprecated":false,"beta":false,"name":"iOS","unavailable":false,"introducedAt":"16.0"},{"deprecated":false,"beta":false,"name":"macOS","unavailable":false,"introducedAt":"13.0"},{"deprecated":false,"beta":false,"name":"tvOS","unavailable":false,"introducedAt":"16.0"},{"deprecated":false,"beta":false,"name":"watchOS","unavailable":false,"introducedAt":"9.0"}],"symbolKind":"method","externalID":"s:7SwiftUI4ViewPAAE9fontWidthyQrAA4FontV0E0VSgF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","title":"fontWidth(_:)","modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fontWidth","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Font","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4FontV"},{"text":".","kind":"text"},{"text":"Width","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4FontV5WidthV"},{"text":"?) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"roleHeading":"Instance Method","extendedModule":"SwiftUICore","role":"symbol"},"variants":[{"paths":["\/documentation\/composablearchitecture\/ifletstore\/fontwidth(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.fontWidth(_:)"},{"type":"text","text":"."}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","abstract":[],"type":"topic","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","kind":"article","title":"View Implementations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"type":"topic","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"url":"\/documentation\/composablearchitecture\/swiftuideprecations","role":"collectionGroup","kind":"article","title":"Deprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/fontWidth(_:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/fontWidth(_:)","url":"\/documentation\/composablearchitecture\/ifletstore\/fontwidth(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fontWidth","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Font","preciseIdentifier":"s:7SwiftUI4FontV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Width","preciseIdentifier":"s:7SwiftUI4FontV5WidthV","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"type":"topic","abstract":[],"kind":"symbol","role":"symbol","title":"fontWidth(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","role":"collection","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"kind":"article","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","role":"collectionGroup","title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"kind":"symbol","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","title":"IfLetStore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IfLetStore","kind":"identifier"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore","abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"type":"topic"}}}