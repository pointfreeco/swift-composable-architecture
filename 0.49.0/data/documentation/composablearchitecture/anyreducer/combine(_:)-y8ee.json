{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"combine"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"reducers"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyReducer","preciseIdentifier":"s:22ComposableArchitecture10AnyReducerV","text":"AnyReducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Environment"},{"kind":"text","text":">...) -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyReducer","preciseIdentifier":"s:22ComposableArchitecture10AnyReducerV","text":"AnyReducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Environment"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A single reducer."}]}]},{"kind":"parameters","parameters":[{"name":"reducers","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A list of reducers."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Combines many reducers into a single one by running each one on state in order, and merging"},{"type":"text","text":" "},{"type":"text","text":"all of the effects."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is important to note that the order of combining reducers matter. Combining "},{"type":"codeVoice","code":"reducerA"},{"type":"text","text":" with"},{"type":"text","text":" "},{"type":"codeVoice","code":"reducerB"},{"type":"text","text":" is not necessarily the same as combining "},{"type":"codeVoice","code":"reducerB"},{"type":"text","text":" with "},{"type":"codeVoice","code":"reducerA"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This can become an issue when working with reducers that have overlapping domains. For"},{"type":"text","text":" "},{"type":"text","text":"example, if "},{"type":"codeVoice","code":"reducerA"},{"type":"text","text":" embeds the domain of "},{"type":"codeVoice","code":"reducerB"},{"type":"text","text":" and reacts to its actions or modifies"},{"type":"text","text":" "},{"type":"text","text":"its state, it can make a difference if "},{"type":"codeVoice","code":"reducerA"},{"type":"text","text":" chooses to modify "},{"type":"codeVoice","code":"reducerB"},{"type":"text","text":"â€™s state"},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"before"}]},{"type":"text","text":" or "},{"type":"emphasis","inlineContent":[{"type":"text","text":"after"}]},{"type":"text","text":" "},{"type":"codeVoice","code":"reducerB"},{"type":"text","text":" runs."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is perhaps most easily seen when working with "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyReducer\/optional(file:fileID:line:)"},{"type":"text","text":" reducers,"},{"type":"text","text":" "},{"type":"text","text":"where the parent domain may listen to the child domain and "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" out its state. If the parent"},{"type":"text","text":" "},{"type":"text","text":"reducer runs before the child reducer, then the child reducer will not be able to react to its"},{"type":"text","text":" "},{"type":"text","text":"own action."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Similar can be said for a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyReducer\/forEach(state:action:environment:file:fileID:line:)-2ypoa"},{"type":"text","text":" "},{"type":"text","text":"reducer. If the parent domain modifies the child collection by moving, removing, or modifying"},{"type":"text","text":" "},{"type":"text","text":"an element before the "},{"type":"codeVoice","code":"forEach"},{"type":"text","text":" reducer runs, the "},{"type":"codeVoice","code":"forEach"},{"type":"text","text":" reducer may perform its action"},{"type":"text","text":" "},{"type":"text","text":"against the wrong element, an element that no longer exists, or an element in an unexpected"},{"type":"text","text":" "},{"type":"text","text":"state."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Running a parent reducer before a child reducer can be considered an application logic"},{"type":"text","text":" "},{"type":"text","text":"error, and can produce assertion failures. So you should almost always combine reducers in"},{"type":"text","text":" "},{"type":"text","text":"order from child to parent domain."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here is an example of how you should combine an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyReducer\/optional(file:fileID:line:)"},{"type":"text","text":" reducer with a"},{"type":"text","text":" "},{"type":"text","text":"parent domain:"}]},{"type":"codeListing","syntax":"swift","code":["let parentReducer = AnyReducer<ParentState, ParentAction, ParentEnvironment>.combine(","  \/\/ Combined before parent so that it can react to `.dismiss` while state is non-`nil`.","  childReducer.optional().pullback(","    state: \\.child,","    action: \/ParentAction.child,","    environment: { $0.child }","  ),","  \/\/ Combined after child so that it can `nil` out child state upon `.child(.dismiss)`.","  AnyReducer { state, action, environment in","    switch action","    case .child(.dismiss):","      state.child = nil","      return .none","    ...","    }","  },",")"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/anyreducer\/combine(_:)-y8ee"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyReducer\/combine(_:)-y8ee","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This API has been soft-deprecated in favor of combining reducers in a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder"},{"type":"text","text":". Read"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingToTheReducerProtocol"},{"type":"text","text":" for more information."}],"kind":"symbol","metadata":{"role":"symbol","title":"combine(_:)","roleHeading":"Type Method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"combine"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"AnyReducer","preciseIdentifier":"s:22ComposableArchitecture10AnyReducerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Environment"},{"kind":"text","text":">...) -> "},{"kind":"typeIdentifier","text":"AnyReducer","preciseIdentifier":"s:22ComposableArchitecture10AnyReducerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Environment"},{"kind":"text","text":">"}],"symbolKind":"method","externalID":"s:22ComposableArchitecture10AnyReducerV7combineyACyxq_q0_GAEd_tFZ","modules":[{"name":"ComposableArchitecture"}],"platforms":[]},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyReducer"]]},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"\n      This API has been soft-deprecated in favor of combining reducers in a 'ReducerBuilder'. Read the migration guide for more information: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/reducerprotocol\n      "}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerBuilder":{"role":"symbol","title":"ReducerBuilder","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReducerBuilder"}],"abstract":[{"type":"text","text":"A result builder for combining reducers into a single reducer by running each, one after the"},{"type":"text","text":" "},{"type":"text","text":"other, and returning their merged effects."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReducerBuilder"}],"url":"\/documentation\/composablearchitecture\/reducerbuilder"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyReducer/forEach(state:action:environment:file:fileID:line:)-2ypoa":{"role":"symbol","title":"forEach(state:action:environment:file:fileID:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"forEach"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ParentState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ParentAction"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ParentEnvironment"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ID"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"IdentifiedArray","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":">>, "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentAction"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":")>, "},{"kind":"externalParam","text":"environment"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ParentEnvironment"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Environment"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AnyReducer","preciseIdentifier":"s:22ComposableArchitecture10AnyReducerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ParentAction"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ParentEnvironment"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"This API has been soft-deprecated in favor of"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol\/forEach(_:action:_:file:fileID:line:)"},{"type":"text","text":". Read"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingToTheReducerProtocol"},{"type":"text","text":" for more information."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyReducer\/forEach(state:action:environment:file:fileID:line:)-2ypoa","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/composablearchitecture\/anyreducer\/foreach(state:action:environment:file:fileid:line:)-2ypoa"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerProtocol/ifLet(_:action:then:file:fileID:line:)":{"role":"symbol","title":"ifLet(_:action:then:file:fileID:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"ifLet"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Wrapped"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":"?>, "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"then"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"_IfLetReducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain that works on an optional property of parent state."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol\/ifLet(_:action:then:file:fileID:line:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/reducerprotocol\/iflet(_:action:then:file:fileid:line:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingToTheReducerProtocol":{"role":"article","title":"Migrating to the reducer protocol","abstract":[{"type":"text","text":"Learn how to migrate existing applications to use the new "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol"},{"type":"text","text":", in both Swift 5.7 and"},{"type":"text","text":" "},{"type":"text","text":"Swift 5.6."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingToTheReducerProtocol","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/migratingtothereducerprotocol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerProtocol/forEach(_:action:_:file:fileID:line:)":{"role":"symbol","title":"forEach(_:action:_:file:fileID:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"forEach"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ID"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Element"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"IdentifiedArray","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":">>, "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":")>, () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"_ForEachReducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain that works on elements of a collection in parent"},{"type":"text","text":" "},{"type":"text","text":"state."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol\/forEach(_:action:_:file:fileID:line:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/reducerprotocol\/foreach(_:action:_:file:fileid:line:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyReducer/combine(_:)-y8ee":{"role":"symbol","title":"combine(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"combine"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"AnyReducer","preciseIdentifier":"s:22ComposableArchitecture10AnyReducerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Environment"},{"kind":"text","text":">...) -> "},{"kind":"typeIdentifier","text":"AnyReducer","preciseIdentifier":"s:22ComposableArchitecture10AnyReducerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Environment"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"This API has been soft-deprecated in favor of combining reducers in a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder"},{"type":"text","text":". Read"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingToTheReducerProtocol"},{"type":"text","text":" for more information."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyReducer\/combine(_:)-y8ee","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/composablearchitecture\/anyreducer\/combine(_:)-y8ee"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyReducer":{"deprecated":true,"role":"symbol","title":"AnyReducer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyReducer"}],"abstract":[{"type":"text","text":"This API has been soft-deprecated in favor of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Read "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingToTheReducerProtocol"},{"type":"text","text":" for more information."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyReducer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyReducer"}],"url":"\/documentation\/composablearchitecture\/anyreducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerDeprecations":{"role":"collectionGroup","title":"Deprecations","abstract":[{"type":"text","text":"Review unsupported reducer APIs and their replacements."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerDeprecations","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/reducerdeprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerProtocol":{"role":"symbol","title":"ReducerProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReducerProtocol"}],"abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask"},{"type":"text","text":"s should be executed later by the store, if"},{"type":"text","text":" "},{"type":"text","text":"any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReducerProtocol"}],"url":"\/documentation\/composablearchitecture\/reducerprotocol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyReducer/optional(file:fileID:line:)":{"role":"symbol","title":"optional(file:fileID:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"optional"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AnyReducer","preciseIdentifier":"s:22ComposableArchitecture10AnyReducerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Environment"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"This API has been soft-deprecated in favor of"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol\/ifLet(_:action:then:file:fileID:line:)"},{"type":"text","text":". Read"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingToTheReducerProtocol"},{"type":"text","text":" for more information."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyReducer\/optional(file:fileID:line:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/composablearchitecture\/anyreducer\/optional(file:fileid:line:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EffectTask":{"role":"symbol","title":"EffectTask","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"EffectTask"}],"abstract":[{"type":"text","text":"A type that encapsulates a unit of work that can be run in the outside world, and can feed"},{"type":"text","text":" "},{"type":"text","text":"actions back to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":"."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EffectTask"}],"url":"\/documentation\/composablearchitecture\/effecttask"}}}