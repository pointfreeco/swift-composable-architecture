{"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"View.matchedTransitionSource(id:in:)"},{"type":"text","text":"."}],"variants":[{"paths":["\/documentation\/composablearchitecture\/caselet\/matchedtransitionsource(id:in:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"kind":"symbol","identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/matchedTransitionSource(id:in:)","interfaceLanguage":"swift"},"metadata":{"title":"matchedTransitionSource(id:in:)","role":"symbol","extendedModule":"SwiftUICore","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"matchedTransitionSource","kind":"identifier"},{"text":"(","kind":"text"},{"text":"id","kind":"externalParam"},{"kind":"text","text":": some "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"text":", ","kind":"text"},{"text":"in","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Namespace","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9NamespaceV"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9NamespaceV2IDV","text":"ID"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"roleHeading":"Instance Method","platforms":[{"unavailable":false,"deprecated":false,"beta":false,"introducedAt":"18.0","name":"iOS"},{"unavailable":false,"deprecated":false,"beta":false,"introducedAt":"15.0","name":"macOS"},{"unavailable":false,"name":"tvOS","deprecated":false,"beta":false,"introducedAt":"18.0"},{"introducedAt":"2.0","beta":false,"unavailable":false,"deprecated":false,"name":"visionOS"},{"name":"watchOS","deprecated":false,"unavailable":false,"beta":false,"introducedAt":"11.0"}],"externalID":"s:7SwiftUI4ViewPAAE23matchedTransitionSource2id2inQrqd___AA9NamespaceV2IDVtSHRd__lF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV","symbolKind":"method","modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"nonisolated"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"matchedTransitionSource","kind":"identifier"},{"text":"(","kind":"text"},{"text":"id","kind":"externalParam"},{"kind":"text","text":": some "},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"in"},{"kind":"text","text":" "},{"kind":"internalParam","text":"namespace"},{"kind":"text","text":": "},{"text":"Namespace","preciseIdentifier":"s:7SwiftUI9NamespaceV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7SwiftUI9NamespaceV2IDV","kind":"typeIdentifier","text":"ID"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"},{"text":"\n","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"}],"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"role":"collectionGroup","type":"topic","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"url":"\/documentation\/composablearchitecture\/switchstore","type":"topic","abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"type":"text","text":" views."}],"title":"SwitchStore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SwitchStore","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"deprecated":true,"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"url":"\/documentation\/composablearchitecture\/caselet","type":"topic","abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","type":"reference"},{"type":"text","text":"."}],"title":"CaseLet","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CaseLet","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"deprecated":true,"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/matchedTransitionSource(id:in:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/matchedTransitionSource(id:in:)","kind":"symbol","type":"topic","title":"matchedTransitionSource(id:in:)","url":"\/documentation\/composablearchitecture\/caselet\/matchedtransitionsource(id:in:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"matchedTransitionSource","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"text":": some ","kind":"text"},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"},{"kind":"text","text":", "},{"kind":"externalParam","text":"in"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9NamespaceV","text":"Namespace"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7SwiftUI9NamespaceV2IDV","kind":"typeIdentifier","text":"ID"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","title":"View Implementations","kind":"article","role":"collectionGroup","type":"topic","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"kind":"symbol","title":"ComposableArchitecture","type":"topic","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"url":"\/documentation\/composablearchitecture\/swiftuideprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","role":"collectionGroup","kind":"article","title":"Deprecations"}}}