{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement"},"kind":"article","seeAlsoSections":[{"title":"Essentials","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/GettingStarted","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestingTCA","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FAQ"],"generated":true,"anchor":"Essentials"}],"metadata":{"title":"Dependencies","modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Article","role":"article"},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Learn how to register dependencies with the library so that they can be immediately accessible from"},{"type":"text","text":" "},{"text":"any reducer.","type":"text"}],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Dependencies in an application are the types and functions that need to interact with outside","type":"text"},{"type":"text","text":" "},{"type":"text","text":"systems that you do not control. Classic examples of this are API clients that make network requests"},{"type":"text","text":" "},{"text":"to servers, but also seemingly innocuous things such as ","type":"text"},{"code":"UUID","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" initializers, and even"},{"text":" ","type":"text"},{"type":"text","text":"clocks, can be thought of as dependencies."}]},{"inlineContent":[{"type":"text","text":"By controlling the dependencies our features need to do their job we gain the ability to completely"},{"text":" ","type":"text"},{"type":"text","text":"alter the execution context a feature runs in. This means in tests and Xcode previews you can"},{"type":"text","text":" "},{"text":"provide a mock version of an API client that immediately returns some stubbed data rather than","type":"text"},{"type":"text","text":" "},{"text":"making a live network request to a server.","type":"text"}],"type":"paragraph"},{"type":"aside","name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The dependency management system in the Composable Architecture is driven off of our"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"http:\/\/github.com\/pointfreeco\/swift-dependencies"},{"text":" library. That repository has extensive","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"https:\/\/pointfreeco.github.io\/swift-dependencies\/main\/documentation\/dependencies\/","isActive":true},{"text":" and articles, and we highly recommend you familiarize yourself","type":"text"},{"text":" ","type":"text"},{"text":"with all of that content to best leverage dependencies.","type":"text"}]}]},{"level":2,"text":"Overriding dependencies","type":"heading","anchor":"Overriding-dependencies"},{"type":"paragraph","inlineContent":[{"text":"It is possible to change the dependencies for just one particular reducer inside a larger composed","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"reducer. This can be handy when running a feature in a more controlled environment where it may not"},{"text":" ","type":"text"},{"text":"be appropriate to communicate with the outside world.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, suppose you want to teach users how to use your feature through an onboarding"},{"type":"text","text":" "},{"text":"experience. In such an experience it may not be appropriate for the user’s actions to cause","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"data to be written to disk, or user defaults to be written, or any number of things. It would be"},{"type":"text","text":" "},{"text":"better to use mock versions of those dependencies so that the user can interact with your feature","type":"text"},{"text":" ","type":"text"},{"text":"in a fully controlled environment.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To do this you can use the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:_:)","isActive":true},{"type":"text","text":" method to override a reducer’s"},{"type":"text","text":" "},{"text":"dependency with another value:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["@Reducer","struct Onboarding {","  var body: some Reducer<State, Action> {","    Reduce { state, action in ","      \/\/ Additional onboarding logic","    }","    Feature()","      .dependency(\\.userDefaults, .mock)","      .dependency(\\.database, .mock)","  }","}"]},{"inlineContent":[{"text":"This will cause the ","type":"text"},{"code":"Feature","type":"codeVoice"},{"type":"text","text":" reducer to use a mock user defaults and database dependency, as well"},{"text":" ","type":"text"},{"text":"as any reducer ","type":"text"},{"code":"Feature","type":"codeVoice"},{"type":"text","text":" uses under the hood, "},{"inlineContent":[{"text":"and","type":"text"}],"type":"emphasis"},{"type":"text","text":" any effects produced by "},{"code":"Feature","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/dependencymanagement"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestingTCA":{"title":"Testing","abstract":[{"type":"text","text":"Learn how to write comprehensive and exhaustive tests for your features built in the Composable"},{"type":"text","text":" "},{"text":"Architecture.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestingTCA","url":"\/documentation\/composablearchitecture\/testingtca","role":"article","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"role":"article","title":"Sharing state","url":"\/documentation\/composablearchitecture\/sharingstate","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","kind":"article","abstract":[{"text":"Learn techniques for sharing state throughout many parts of your application, and how to persist","type":"text"},{"type":"text","text":" "},{"type":"text","text":"data to user defaults, the file system, and other external mediums."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/GettingStarted":{"title":"Getting started","abstract":[{"type":"text","text":"Learn how to integrate the Composable Architecture into your project and write your first"},{"type":"text","text":" "},{"text":"application.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/GettingStarted","url":"\/documentation\/composablearchitecture\/gettingstarted","role":"article","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"role":"collectionGroup","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","abstract":[{"type":"text","text":"Learn how to use the navigation tools in the library, including how to best model your domains, how"},{"type":"text","text":" "},{"type":"text","text":"to integrate features in the reducer and view layers, and how to write tests."}],"url":"\/documentation\/composablearchitecture\/navigation","title":"Navigation","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","title":"ComposableArchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/dependency(_:_:)":{"abstract":[{"type":"text","text":"Sets the dependency value of the specified key path to the given value."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dependency","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:_:)","title":"dependency(_:_:)","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/reducer\/dependency(_:_:)"},"http://github.com/pointfreeco/swift-dependencies":{"url":"http:\/\/github.com\/pointfreeco\/swift-dependencies","identifier":"http:\/\/github.com\/pointfreeco\/swift-dependencies","titleInlineContent":[{"type":"text","text":"Dependencies"}],"title":"Dependencies","type":"link"},"https://pointfreeco.github.io/swift-dependencies/main/documentation/dependencies/":{"url":"https:\/\/pointfreeco.github.io\/swift-dependencies\/main\/documentation\/dependencies\/","identifier":"https:\/\/pointfreeco.github.io\/swift-dependencies\/main\/documentation\/dependencies\/","titleInlineContent":[{"text":"documentation","type":"text"}],"title":"documentation","type":"link"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FAQ":{"role":"article","title":"Frequently asked questions","url":"\/documentation\/composablearchitecture\/faq","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FAQ","kind":"article","abstract":[{"text":"A collection of some of the most common questions and comments people have concerning the library.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Performance":{"title":"Performance","abstract":[{"text":"Learn how to improve the performance of features built in the Composable Architecture.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance","url":"\/documentation\/composablearchitecture\/performance","role":"article","kind":"article"}}}