{"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/withState(_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withState","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"body","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"}]}]},{"parameters":[{"name":"body","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that takes the current state of the store as its sole argument. If"},{"type":"text","text":" "},{"type":"text","text":"the closure has a return value, that value is also used as the return value of the"},{"type":"text","text":" "},{"type":"codeVoice","code":"withState"},{"type":"text","text":" method. The state argument reflects the current state of the store only for the"},{"type":"text","text":" "},{"type":"text","text":"duration of the closureâ€™s execution, and is only observable over time, "},{"inlineContent":[{"type":"text","text":"e.g."}],"type":"emphasis"},{"type":"text","text":" by SwiftUI, if"},{"type":"text","text":" "},{"type":"text","text":"it conforms to "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState","isActive":true},{"type":"text","text":"."}]}]}],"kind":"parameters"},{"content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"The return value, if any, of the "},{"code":"body","type":"codeVoice"},{"type":"text","text":" closure."}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A lightweight way of accessing store state when state is not observable and "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-1qxwl","type":"reference","isActive":true},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"unavailable."}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/store\/withstate(_:)"]}],"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-1qxwl","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/subscript(dynamicMember:)-655ef"],"anchor":"Accessing-state","title":"Accessing state","generated":true}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"]]},"metadata":{"externalID":"s:22ComposableArchitecture5StoreC9withStateyqd__qd__xXElF","roleHeading":"Instance Method","symbolKind":"method","title":"withState(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withState"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"R"}],"modules":[{"name":"ComposableArchitecture"}]},"abstract":[{"text":"Calls the given closure with a snapshot of the current state of the store.","type":"text"}],"kind":"symbol","sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/subscript(dynamicMember:)-655ef":{"kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ObservableState"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"subscript(dynamicMember:)","type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/subscript(dynamicMember:)-655ef","url":"\/documentation\/composablearchitecture\/store\/subscript(dynamicmember:)-655ef","abstract":[],"fragments":[{"text":"subscript","kind":"keyword"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"dynamicMember","kind":"externalParam"},{"text":" _: ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","role":"collection","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/state-1qxwl":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"state","kind":"identifier"},{"text":": ","kind":"text"},{"text":"State","kind":"typeIdentifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-1qxwl","title":"state","url":"\/documentation\/composablearchitecture\/store\/state-1qxwl","role":"symbol","type":"topic","abstract":[{"text":"Direct access to state in the store when ","type":"text"},{"code":"State","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState","type":"reference"},{"text":".","type":"text"}],"kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ObservableState"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState":{"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState","kind":"symbol","abstract":[],"type":"topic","navigatorTitle":[{"text":"ObservableState","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/observablestate","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableState","kind":"identifier"}],"title":"ObservableState"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"url":"\/documentation\/composablearchitecture\/store","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","navigatorTitle":[{"kind":"identifier","text":"Store"}],"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"kind":"symbol","title":"Store","type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/withState(_:)":{"title":"withState(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/withState(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withState","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"}],"url":"\/documentation\/composablearchitecture\/store\/withstate(_:)","abstract":[{"text":"Calls the given closure with a snapshot of the current state of the store.","type":"text"}],"type":"topic","kind":"symbol"}}}