{"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"View.scrollTransition(topLeading:bottomTrailing:axis:transition:)"},{"text":".","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"nonisolated"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"scrollTransition"},{"text":"(","kind":"text"},{"text":"topLeading","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ScrollTransitionConfiguration","preciseIdentifier":"s:7SwiftUI29ScrollTransitionConfigurationV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"bottomTrailing"},{"text":": ","kind":"text"},{"text":"ScrollTransitionConfiguration","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI29ScrollTransitionConfigurationV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"axis"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Axis","preciseIdentifier":"s:7SwiftUI4AxisO"},{"text":"? = nil, ","kind":"text"},{"text":"transition","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI17EmptyVisualEffectV","text":"EmptyVisualEffect"},{"text":", ","kind":"text"},{"text":"ScrollTransitionPhase","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI21ScrollTransitionPhaseO"},{"kind":"text","text":") -> some "},{"preciseIdentifier":"s:7SwiftUI12VisualEffectP","text":"VisualEffect","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":"\n"}],"platforms":["macOS"],"languages":["swift"]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/scrollTransition(topLeading:bottomTrailing:axis:transition:)"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"sections":[],"metadata":{"symbolKind":"method","externalID":"s:7SwiftUI4ViewPAAE16scrollTransition10topLeading14bottomTrailing4axis10transitionQrAA06ScrollE13ConfigurationV_AjA4AxisOSgqd__AA17EmptyVisualEffectV_AA0lE5PhaseOtYbctAA0pQ0Rd__lF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV","role":"symbol","title":"scrollTransition(topLeading:bottomTrailing:axis:transition:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"scrollTransition"},{"text":"(","kind":"text"},{"text":"topLeading","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI29ScrollTransitionConfigurationV","text":"ScrollTransitionConfiguration","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"bottomTrailing"},{"kind":"text","text":": "},{"text":"ScrollTransitionConfiguration","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI29ScrollTransitionConfigurationV"},{"text":", ","kind":"text"},{"text":"axis","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Axis","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4AxisO"},{"text":"?, ","kind":"text"},{"text":"transition","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:7SwiftUI17EmptyVisualEffectV","text":"EmptyVisualEffect","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI21ScrollTransitionPhaseO","text":"ScrollTransitionPhase"},{"kind":"text","text":") -> some "},{"text":"VisualEffect","preciseIdentifier":"s:7SwiftUI12VisualEffectP","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"roleHeading":"Instance Method","platforms":[{"deprecated":false,"introducedAt":"17.0","name":"iOS","unavailable":false,"beta":false},{"deprecated":false,"name":"macOS","unavailable":false,"beta":false,"introducedAt":"14.0"},{"unavailable":false,"deprecated":false,"beta":false,"introducedAt":"17.0","name":"tvOS"},{"introducedAt":"10.0","deprecated":false,"name":"watchOS","unavailable":false,"beta":false}],"extendedModule":"SwiftUICore","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/caselet\/scrolltransition(topleading:bottomtrailing:axis:transition:)"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"url":"\/documentation\/composablearchitecture\/caselet","type":"topic","abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","type":"reference"},{"type":"text","text":"."}],"title":"CaseLet","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CaseLet","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"deprecated":true,"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/scrollTransition(topLeading:bottomTrailing:axis:transition:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/scrollTransition(topLeading:bottomTrailing:axis:transition:)","title":"scrollTransition(topLeading:bottomTrailing:axis:transition:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"scrollTransition"},{"kind":"text","text":"("},{"kind":"externalParam","text":"topLeading"},{"text":": ","kind":"text"},{"text":"ScrollTransitionConfiguration","preciseIdentifier":"s:7SwiftUI29ScrollTransitionConfigurationV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"bottomTrailing"},{"kind":"text","text":": "},{"text":"ScrollTransitionConfiguration","preciseIdentifier":"s:7SwiftUI29ScrollTransitionConfigurationV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"axis","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Axis","preciseIdentifier":"s:7SwiftUI4AxisO"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"transition"},{"kind":"text","text":": ("},{"text":"EmptyVisualEffect","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI17EmptyVisualEffectV"},{"text":", ","kind":"text"},{"text":"ScrollTransitionPhase","preciseIdentifier":"s:7SwiftUI21ScrollTransitionPhaseO","kind":"typeIdentifier"},{"kind":"text","text":") -> some "},{"text":"VisualEffect","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI12VisualEffectP"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"abstract":[],"url":"\/documentation\/composablearchitecture\/caselet\/scrolltransition(topleading:bottomtrailing:axis:transition:)","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"url":"\/documentation\/composablearchitecture\/switchstore","type":"topic","abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"type":"text","text":" views."}],"title":"SwitchStore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SwitchStore","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"deprecated":true,"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","title":"View Implementations","kind":"article","role":"collectionGroup","type":"topic","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"url":"\/documentation\/composablearchitecture\/swiftuideprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","role":"collectionGroup","kind":"article","title":"Deprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"role":"collectionGroup","type":"topic","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"kind":"symbol","title":"ComposableArchitecture","type":"topic","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"}}}