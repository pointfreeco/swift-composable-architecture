{"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"onKeyPress","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"key","kind":"internalParam"},{"kind":"text","text":": "},{"text":"KeyEquivalent","preciseIdentifier":"s:7SwiftUI13KeyEquivalentV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"phases","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI8KeyPressV","kind":"typeIdentifier","text":"KeyPress"},{"kind":"text","text":"."},{"text":"Phases","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI8KeyPressV6PhasesV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"action"},{"text":": ","kind":"text"},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"preciseIdentifier":"s:7SwiftUI8KeyPressV","text":"KeyPress","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"KeyPress","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI8KeyPressV"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI8KeyPressV6ResultO","text":"Result"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":"\n","kind":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/onkeypress(_:phases:action:)"]}],"metadata":{"symbolKind":"method","role":"symbol","roleHeading":"Instance Method","externalID":"s:7SwiftUI4ViewPAAE10onKeyPress_6phases6actionQrAA0E10EquivalentV_AA0eF0V6PhasesVAJ6ResultOAJctF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"onKeyPress","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:7SwiftUI13KeyEquivalentV","kind":"typeIdentifier","text":"KeyEquivalent"},{"kind":"text","text":", "},{"kind":"externalParam","text":"phases"},{"kind":"text","text":": "},{"text":"KeyPress","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI8KeyPressV"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7SwiftUI8KeyPressV6PhasesV","kind":"typeIdentifier","text":"Phases"},{"kind":"text","text":", "},{"kind":"externalParam","text":"action"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI8KeyPressV","text":"KeyPress"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI8KeyPressV","text":"KeyPress"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7SwiftUI8KeyPressV6ResultO","text":"Result","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"extendedModule":"SwiftUICore","platforms":[{"beta":false,"introducedAt":"17.0","name":"iOS","deprecated":false,"unavailable":false},{"introducedAt":"14.0","beta":false,"unavailable":false,"name":"macOS","deprecated":false},{"introducedAt":"17.0","unavailable":false,"beta":false,"name":"tvOS","deprecated":false}],"title":"onKeyPress(_:phases:action:)"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/onKeyPress(_:phases:action:)"},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.onKeyPress(_:phases:action:)"},{"text":".","type":"text"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","abstract":[],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","type":"topic","title":"View Implementations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/onKeyPress(_:phases:action:)":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/onKeyPress(_:phases:action:)","url":"\/documentation\/composablearchitecture\/ifletstore\/onkeypress(_:phases:action:)","title":"onKeyPress(_:phases:action:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"onKeyPress"},{"text":"(","kind":"text"},{"text":"KeyEquivalent","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI13KeyEquivalentV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"phases"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI8KeyPressV","text":"KeyPress"},{"text":".","kind":"text"},{"text":"Phases","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI8KeyPressV6PhasesV"},{"text":", ","kind":"text"},{"text":"action","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI8KeyPressV","text":"KeyPress"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI8KeyPressV","kind":"typeIdentifier","text":"KeyPress"},{"text":".","kind":"text"},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI8KeyPressV6ResultO"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"abstract":[],"kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"type":"topic","kind":"article","title":"SwiftUI Integration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"type":"topic","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuideprecations","title":"Deprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"IfLetStore","kind":"identifier"}],"title":"IfLetStore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}],"url":"\/documentation\/composablearchitecture\/ifletstore","deprecated":true,"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","kind":"symbol","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","url":"\/documentation\/composablearchitecture"}}}