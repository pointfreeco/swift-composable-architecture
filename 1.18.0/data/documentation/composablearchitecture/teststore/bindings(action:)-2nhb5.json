{"seeAlsoSections":[{"generated":true,"title":"Bindings","anchor":"Bindings","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/bindings"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bindings","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ViewAction"},{"kind":"text","text":">("},{"text":"action","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"toViewAction","kind":"internalParam"},{"kind":"text","text":": "},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"text":"ViewAction","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore","text":"BindingViewStore","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture14BindableActionP5StateQa","text":"State","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/State"},{"kind":"text","text":", "},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A8PathableP","text":"CasePathable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewAction"},{"text":" : ","kind":"text"},{"text":"BindableAction","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction","preciseIdentifier":"s:22ComposableArchitecture14BindableActionP"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"toViewAction","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A case path from action to a bindable view action."}]}]}]},{"content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A binding view store."}]}],"kind":"content"},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Useful for testing view state of a store."}]},{"type":"codeListing","code":["let store = TestStore(LoginFeature.State()) {","  Login.Feature()","}","await store.send(.view(.set(\\.$email, \"blob@pointfree.co\"))) {","  $0.email = \"blob@pointfree.co\"","}","XCTAssertTrue(","  LoginView.ViewState(store.bindings(action: \\.view))","    .isLoginButtonDisabled",")","","await store.send(.view(.set(\\.$password, \"whats-the-point?\"))) {","  $0.password = \"blob@pointfree.co\"","  $0.isFormValid = true","}","XCTAssertFalse(","  LoginView.ViewState(store.bindings(action: \\.view))","    .isLoginButtonDisabled",")"],"syntax":"swift"}]}],"abstract":[{"text":"Returns a binding view store for this store.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreDeprecations"]]},"sections":[],"metadata":{"modules":[{"name":"ComposableArchitecture"}],"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"bindings","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ViewAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV","text":"BindingViewStore"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":">","kind":"text"}],"externalID":"s:22ComposableArchitecture9TestStoreC8bindings6actionAA011BindingViewD0VyxGs7KeyPathCy9CasePaths0K0Vyq_GAMyqd__GG_t5StateQyd__RszAK0K8PathableR_AA14BindableActionRd__lF","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"State","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"extendedModule":"ComposableArchitecture","title":"bindings(action:)","roleHeading":"Instance Method","role":"symbol"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/teststore\/bindings(action:)-2nhb5"]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/bindings(action:)-2nhb5","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","title":"ComposableArchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/teststore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"title":"TestStore","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TestStore"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestStore"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/bindings":{"url":"\/documentation\/composablearchitecture\/teststore\/bindings","type":"topic","title":"bindings","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"bindings"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV","text":"BindingViewStore","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":">"}],"kind":"symbol","abstract":[{"type":"text","text":"Returns a binding view store for this store."}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"State"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":", "},{"code":"State","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Action.State"},{"text":", and ","type":"text"},{"code":"Action","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"BindableAction","type":"codeVoice"},{"text":".","type":"text"}]},"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/bindings"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/bindings(action:)-2nhb5":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"bindings"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ViewAction"},{"kind":"text","text":">("},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","kind":"typeIdentifier","text":"CaseKeyPath"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV","text":"BindingViewStore"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":">"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/bindings(action:)-2nhb5","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}]},"abstract":[{"type":"text","text":"Returns a binding view store for this store."}],"url":"\/documentation\/composablearchitecture\/teststore\/bindings(action:)-2nhb5","type":"topic","kind":"symbol","title":"bindings(action:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction":{"navigatorTitle":[{"kind":"identifier","text":"BindableAction"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindableAction"}],"url":"\/documentation\/composablearchitecture\/bindableaction","kind":"symbol","abstract":[{"type":"text","text":"An action type that exposes a "},{"code":"binding","type":"codeVoice"},{"type":"text","text":" case that holds a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction"},{"type":"text","text":"."}],"title":"BindableAction","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction","role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState":{"navigatorTitle":[{"text":"BindingViewState","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindingViewState"}],"url":"\/documentation\/composablearchitecture\/bindingviewstate","kind":"symbol","abstract":[{"text":"A property wrapper type that can designate properties of view state that can be directly","type":"text"},{"text":" ","type":"text"},{"text":"bindable in SwiftUI views.","type":"text"}],"title":"BindingViewState","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewStore"}],"title":"ViewStore","role":"symbol","deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","url":"\/documentation\/composablearchitecture\/viewstore","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"ViewStore"},{"type":"text","text":" is an object that can observe state changes and send actions. They are most"},{"type":"text","text":" "},{"text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"anywhere it makes sense to observe state or send actions."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ViewStore"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewStore":{"navigatorTitle":[{"text":"BindingViewStore","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BindingViewStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/bindingviewstore","kind":"symbol","abstract":[{"text":"A property wrapper type that can derive ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","type":"reference","isActive":true},{"type":"text","text":" values for a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","isActive":true},{"text":".","type":"text"}],"title":"BindingViewStore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore","role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStoreDeprecations":{"url":"\/documentation\/composablearchitecture\/teststoredeprecations","type":"topic","title":"Deprecations","role":"collectionGroup","kind":"article","abstract":[{"type":"text","text":"Review unsupported test store APIs and their replacements."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreDeprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction/State":{"required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"State","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/bindableaction\/state","kind":"symbol","abstract":[{"type":"text","text":"The root state type that contains bindable fields."}],"title":"State","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/State","role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingAction":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","abstract":[{"type":"text","text":"An action that describes simple mutations to some root state at a writable key path."}],"type":"topic","title":"BindingAction","url":"\/documentation\/composablearchitecture\/bindingaction","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BindingAction"}],"navigatorTitle":[{"text":"BindingAction","kind":"identifier"}]}}}