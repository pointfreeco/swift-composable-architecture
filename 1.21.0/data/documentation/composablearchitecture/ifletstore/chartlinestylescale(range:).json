{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/chartlinestylescale(range:)"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"sections":[],"metadata":{"symbolKind":"method","extendedModule":"SwiftUICore","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"chartLineStyleScale","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Range","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"range","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Range","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"roleHeading":"Instance Method","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"externalID":"s:7SwiftUI4ViewP6ChartsE19chartLineStyleScale5rangeQrqd___tAD0H5RangeRd__AA06StrokeG0V11VisualValueRtd__lF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","title":"chartLineStyleScale(range:)","platforms":[{"introducedAt":"16.0","beta":false,"name":"iOS","unavailable":false,"deprecated":false},{"introducedAt":"13.0","beta":false,"name":"macOS","unavailable":false,"deprecated":false},{"introducedAt":"16.0","beta":false,"name":"tvOS","unavailable":false,"deprecated":false},{"introducedAt":"9.0","beta":false,"name":"watchOS","unavailable":false,"deprecated":false}],"role":"symbol"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"chartLineStyleScale","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Range","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"range","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Range","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Range","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"ScaleRange","kind":"typeIdentifier","preciseIdentifier":"s:6Charts10ScaleRangeP"},{"text":", ","kind":"text"},{"text":"Range","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:6Charts10ScaleRangeP11VisualValueQa","text":"VisualValue","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI11StrokeStyleV","text":"StrokeStyle","kind":"typeIdentifier"},{"text":"\n","kind":"text"}]}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/chartLineStyleScale(range:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"View.chartLineStyleScale(range:)","type":"codeVoice"},{"text":".","type":"text"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IfLetStore","kind":"identifier"}],"navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","title":"IfLetStore","role":"symbol","abstract":[{"text":"A view that safely unwraps a store of optional state in order to show one of two views.","type":"text"}],"url":"\/documentation\/composablearchitecture\/ifletstore","type":"topic","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","type":"topic","title":"Deprecations","kind":"article","url":"\/documentation\/composablearchitecture\/swiftuideprecations","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"abstract":[],"url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","title":"View Implementations","type":"topic","role":"collectionGroup","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"kind":"article","title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/chartLineStyleScale(range:)":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/chartLineStyleScale(range:)","role":"symbol","kind":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore\/chartlinestylescale(range:)","abstract":[],"title":"chartLineStyleScale(range:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"chartLineStyleScale","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Range","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"range","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Range","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","type":"topic","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture"}}}