{"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.onOpenURL(perform:)"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations"]]},"kind":"symbol","metadata":{"platforms":[{"unavailable":false,"beta":false,"deprecated":false,"introducedAt":"14.0","name":"iOS"},{"unavailable":false,"beta":false,"deprecated":false,"introducedAt":"11.0","name":"macOS"},{"unavailable":false,"beta":false,"deprecated":false,"introducedAt":"14.0","name":"tvOS"},{"unavailable":false,"beta":false,"deprecated":false,"introducedAt":"7.0","name":"watchOS"}],"roleHeading":"Instance Method","symbolKind":"method","title":"onOpenURL(perform:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onOpenURL","kind":"identifier"},{"text":"(","kind":"text"},{"text":"perform","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"URL","preciseIdentifier":"s:10Foundation3URLV","kind":"typeIdentifier"},{"text":") -> ()) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"role":"symbol","modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"extendedModule":"SwiftUICore","externalID":"s:7SwiftUI4ViewPAAE9onOpenURL7performQry10Foundation0F0Vc_tF::SYNTHESIZED::s:22ComposableArchitecture11SwitchStoreV"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/switchstore\/onopenurl(perform:)"]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/onOpenURL(perform:)","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onOpenURL","kind":"identifier"},{"text":"(","kind":"text"},{"text":"perform","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"action","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" ("},{"preciseIdentifier":"s:10Foundation3URLV","kind":"typeIdentifier","text":"URL"},{"kind":"text","text":") -> ()) -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"},{"kind":"text","text":"\n"}]}],"kind":"declarations"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/onOpenURL(perform:)":{"abstract":[],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/onOpenURL(perform:)","kind":"symbol","title":"onOpenURL(perform:)","url":"\/documentation\/composablearchitecture\/switchstore\/onopenurl(perform:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onOpenURL"},{"kind":"text","text":"("},{"kind":"externalParam","text":"perform"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":") -> ()) -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"role":"symbol","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"type":"text","text":" views."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchStore"}],"navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"url":"\/documentation\/composablearchitecture\/switchstore","title":"SwitchStore","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/View-Implementations":{"url":"\/documentation\/composablearchitecture\/switchstore\/view-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations","abstract":[],"kind":"article","title":"View Implementations","type":"topic","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"kind":"article","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","role":"collectionGroup","title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"url":"\/documentation\/composablearchitecture\/caselet","abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"type":"text","text":"."}],"type":"topic","role":"symbol","kind":"symbol","title":"CaseLet","deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","navigatorTitle":[{"kind":"identifier","text":"CaseLet"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","role":"collection","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"type":"topic","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"url":"\/documentation\/composablearchitecture\/swiftuideprecations","role":"collectionGroup","kind":"article","title":"Deprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"}}}