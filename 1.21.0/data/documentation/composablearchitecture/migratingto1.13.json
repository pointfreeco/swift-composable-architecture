{"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.19","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.18","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.17.1","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.17","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.16","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.15","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.14","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.12","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.11","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.10","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.9","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.8","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.7","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.6","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.5","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.4"],"generated":true}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.13","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/composablearchitecture\/migratingto1.13"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"Migrating to 1.13","modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Article","role":"article"},"abstract":[{"text":"The Composable Architecture now provides first class tools for building features in UIKit,","type":"text"},{"text":" ","type":"text"},{"text":"including minimal state observation, presentation and stack navigation.","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides"]]},"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","anchor":"Overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"The Composable Architecture is now integrated with the "},{"type":"reference","identifier":"http:\/\/github.com\/pointfreeco\/swift-navigation","isActive":true},{"type":"text","text":" library,"},{"type":"text","text":" "},{"type":"text","text":"which brings powerful navigation and observation tools to UIKit. You can model your domains"},{"type":"text","text":" "},{"type":"text","text":"as concisely as possible, just as you would in SwiftUI, but then implement your view in UIKit"},{"type":"text","text":" "},{"type":"text","text":"without losing any power."}],"type":"paragraph"},{"inlineContent":[{"text":"The simplest tool to use is ","type":"text"},{"code":"observe","type":"codeVoice"},{"text":", which allows you to minimally observe changes to state in","type":"text"},{"text":" ","type":"text"},{"text":"your feature and update the UI. Typically the best place to do this is in ","type":"text"},{"code":"viewDidLoad","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"code":["let store: StoreOf<Feature>","","func viewDidLoad() {","  super.viewDidLoad()","","  \/\/ ...","","  observe { [weak self] in","    countLabel.text = \"Count: \\(store.count)\"","  }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Only the state accessed in the "},{"type":"codeVoice","code":"observe"},{"type":"text","text":" trailing closure will be observed. If any other state"},{"type":"text","text":" "},{"type":"text","text":"changes, the closure will not be invoked and no extra work will be performed."}],"type":"paragraph"},{"inlineContent":[{"text":"The library also provides powerful navigation tools for UIKit. For example, suppose you have a","type":"text"},{"text":" ","type":"text"},{"text":"feature that can present a child feature (see the docs on ","type":"text"},{"overridingTitleInlineContent":[{"type":"text","text":"tree-based"},{"type":"text","text":" "},{"type":"text","text":"navigation"}],"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","isActive":true,"overridingTitle":"tree-based navigation"},{"text":" for more information on these tools):","type":"text"}],"type":"paragraph"},{"code":["@Reducer ","struct Feature {","  @ObservableState","  struct State {","    @Presents var child: ChildFeature.State?","    \/\/ ...","  }","  \/\/ ...","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Then you can present a view controller when the child state flips to a non-","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" value by using the","type":"text"},{"text":" ","type":"text"},{"code":"present(item:)","type":"codeVoice"},{"text":" API that comes with the library:","type":"text"}],"type":"paragraph"},{"code":["@UIBindable var store: StoreOf<Feature>","","func viewDidLoad() {","  super.viewDidLoad()","","  present(item: $store.scope(state: \\.child, action: \\.child)) { store in","    ChildViewController(store: store)","  }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Further, if your feature has a stack of features that can be presented, then you can model your","type":"text"},{"text":" ","type":"text"},{"text":"domain like so (see the docs on ","type":"text"},{"overridingTitle":"stack-based","overridingTitleInlineContent":[{"type":"text","text":"stack-based"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","isActive":true,"type":"reference"},{"text":" for more information","type":"text"},{"text":" ","type":"text"},{"text":"on these tools):","type":"text"}],"type":"paragraph"},{"code":["@Reducer","struct AppFeature {","  struct State {","    var path = StackState<Path.State>()","    \/\/ ...","  }","","  @Reducer","  enum Path {","    case addItem(AddFeature)","    case detailItem(DetailFeature)","    case editItem(EditFeature)","  }","","  \/\/ ...","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"And for the view you can subclass "},{"type":"codeVoice","code":"NavigationStackController"},{"type":"text","text":" in order to drive navigation from the"},{"type":"text","text":" "},{"type":"text","text":"stack state:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["class AppController: NavigationStackController {","  private var store: StoreOf<AppFeature>!","","  convenience init(store: StoreOf<AppFeature>) {","    @UIBindable var store = store","","    self.init(path: $store.scope(state: \\.path, action: \\.path)) {","      RootViewController(store: store)","    } destination: { store in ","      switch store.case {","      case .addItem(let store):","        AddViewController(store: store)","      case .detailItem(let store):","        DetailViewController(store: store)","      case .editItem(let store):","        EditViewController(store: store)","      }","    }","","    self.store = store","  }","}"]}]}],"kind":"article","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.17":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.17","url":"\/documentation\/composablearchitecture\/migratingto1.17","abstract":[{"text":"The ","type":"text"},{"code":"@Shared","type":"codeVoice"},{"text":" property wrapper and related tools have been extracted to their own","type":"text"},{"text":" ","type":"text"},{"text":"library so that they can be used in non-Composable Architecture applications. This a","type":"text"},{"text":" ","type":"text"},{"text":"backwards compatible change, but some new deprecations have been introduced.","type":"text"}],"role":"article","kind":"article","type":"topic","title":"Migrating to 1.17"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IfLetStore","kind":"identifier"}],"navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","title":"IfLetStore","role":"symbol","abstract":[{"text":"A view that safely unwraps a store of optional state in order to show one of two views.","type":"text"}],"url":"\/documentation\/composablearchitecture\/ifletstore","type":"topic","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.17.1":{"url":"\/documentation\/composablearchitecture\/migratingto1.17.1","abstract":[{"type":"text","text":"The Sharing library has graduated, with backwards-incompatible changes, to 2.0, and the Composable"},{"text":" ","type":"text"},{"text":"Architecture has been updated to extend support to this new version.","type":"text"}],"title":"Migrating to 1.17.1","kind":"article","type":"topic","role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.17.1"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.7":{"title":"Migrating to 1.7","url":"\/documentation\/composablearchitecture\/migratingto1.7","kind":"article","type":"topic","abstract":[{"text":"Update your code to make use of the new observation tools in the library and get rid of legacy","type":"text"},{"text":" ","type":"text"},{"text":"APIs such as ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","isActive":true},{"text":", ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","isActive":true},{"text":", ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","isActive":true},{"text":", and more.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.7","role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.9":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.9","role":"article","type":"topic","kind":"article","url":"\/documentation\/composablearchitecture\/migratingto1.9","title":"Migrating to 1.9","abstract":[{"text":"Update your code to make use of the new ","type":"text"},{"code":"TestStore\/send(_:assert:fileID:file:line:column:)-8877x","type":"codeVoice"},{"text":"","type":"text"},{"text":" ","type":"text"},{"text":"method on ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","isActive":true},{"text":" which gives a succinct syntax for sending actions with case key paths, and","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:)","isActive":true},{"text":" method for overriding dependencies.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.12":{"url":"\/documentation\/composablearchitecture\/migratingto1.12","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.12","title":"Migrating to 1.12","type":"topic","abstract":[{"type":"text","text":"Take advantage of custom decoding and encoding logic for the shared file storage persistence"},{"type":"text","text":" "},{"type":"text","text":"strategy, as well as beta support for Swift’s native Testing framework."}],"role":"article","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"navigatorTitle":[{"kind":"identifier","text":"Store"}],"url":"\/documentation\/composablearchitecture\/store","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","kind":"symbol","title":"Store","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"navigatorTitle":[{"text":"TestStore","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","kind":"symbol","title":"TestStore","abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"url":"\/documentation\/composablearchitecture\/teststore","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestStore","kind":"identifier"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.18":{"role":"article","title":"Migrating to 1.18","kind":"article","abstract":[{"type":"text","text":"Stores now automatically cancel their in-flight effects when they deallocate. And another UIKit"},{"type":"text","text":" "},{"type":"text","text":"navigation helper has been introduced."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.18","url":"\/documentation\/composablearchitecture\/migratingto1.18"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.19":{"url":"\/documentation\/composablearchitecture\/migratingto1.19","role":"article","title":"Migrating to 1.19","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.19","type":"topic","kind":"article","abstract":[{"type":"text","text":"Store internals have been rewritten for performance and future features, and are now compatible with"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI’s "},{"code":"@StateObject","type":"codeVoice"},{"type":"text","text":" property wrapper."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.10":{"kind":"article","role":"article","abstract":[{"type":"text","text":"Update your code to make use of the new state sharing tools in the library, such as the "},{"code":"Shared","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"property wrapper, and the "},{"code":"appStorage","type":"codeVoice"},{"type":"text","text":" and "},{"code":"fileStorage","type":"codeVoice"},{"type":"text","text":" persistence strategies."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.10","type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.10","title":"Migrating to 1.10"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore":{"url":"\/documentation\/composablearchitecture\/foreachstore","role":"symbol","deprecated":true,"title":"ForEachStore","abstract":[{"text":"A Composable Architecture-friendly wrapper around ","type":"text"},{"code":"ForEach","type":"codeVoice"},{"text":" that simplifies working with","type":"text"},{"text":" ","type":"text"},{"text":"collections of state.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ForEachStore"}],"navigatorTitle":[{"kind":"identifier","text":"ForEachStore"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.4":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.4","title":"Migrating to 1.4","role":"article","type":"topic","abstract":[{"type":"text","text":"Update your code to make use of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()"},{"type":"text","text":" macro, and learn how to better leverage case key"},{"type":"text","text":" "},{"type":"text","text":"paths in your features."}],"url":"\/documentation\/composablearchitecture\/migratingto1.4"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackBasedNavigation":{"kind":"article","title":"Stack-based navigation","type":"topic","abstract":[{"type":"text","text":"Learn about stack-based navigation, that is navigation modeled with collections, including how to"},{"type":"text","text":" "},{"type":"text","text":"model your domains, how to integrate features, how to test your features, and more."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","role":"article","url":"\/documentation\/composablearchitecture\/stackbasednavigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/dependency(_:)":{"url":"\/documentation\/composablearchitecture\/reducer\/dependency(_:)","abstract":[{"type":"text","text":"Places a value in the reducer’s dependencies."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dependency"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"_DependencyKeyWritingReducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"title":"dependency(_:)","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TreeBasedNavigation":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","title":"Tree-based navigation","kind":"article","type":"topic","role":"article","url":"\/documentation\/composablearchitecture\/treebasednavigation","abstract":[{"text":"Learn about tree-based navigation, that is navigation modeled with optionals and enums, including","type":"text"},{"text":" ","type":"text"},{"text":"how to model your domains, how to integrate features, how to test your features, and more.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/WithViewStore":{"abstract":[{"text":"A view helper that transforms a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true,"type":"reference"},{"text":" into a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","isActive":true,"type":"reference"},{"text":" so that its state can be observed","type":"text"},{"text":" ","type":"text"},{"text":"by a view builder.","type":"text"}],"type":"topic","deprecated":true,"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WithViewStore"}],"url":"\/documentation\/composablearchitecture\/withviewstore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","title":"WithViewStore","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"WithViewStore"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer()":{"url":"\/documentation\/composablearchitecture\/reducer()","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","role":"symbol","type":"topic","abstract":[{"text":"Helps implement the conformance to the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","type":"reference"},{"text":" protocol for a type.","type":"text"}],"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"},{"text":"()","kind":"text"}],"title":"Reducer()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.15":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.15","role":"article","url":"\/documentation\/composablearchitecture\/migratingto1.15","abstract":[{"type":"text","text":"The library has been completely updated for Swift 6 language mode, and now compiles in strict"},{"type":"text","text":" "},{"type":"text","text":"concurrency with no warnings or errors."}],"title":"Migrating to 1.15","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.16":{"kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.16","role":"article","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":".appStorage"},{"type":"text","text":" strategy used with "},{"type":"codeVoice","code":"@Shared"},{"type":"text","text":" now uses key-value observing instead of"},{"type":"text","text":" "},{"type":"codeVoice","code":"NotificationCenter"},{"type":"text","text":" when possible. Learn how this may affect your code."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.16","title":"Migrating to 1.16"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigrationGuides":{"kind":"article","title":"Migration guides","role":"collectionGroup","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides","abstract":[{"text":"Learn how to upgrade your application to the newest version of the Composable Architecture.","type":"text"}],"url":"\/documentation\/composablearchitecture\/migrationguides"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.8":{"url":"\/documentation\/composablearchitecture\/migratingto1.8","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.8","role":"article","abstract":[{"text":"Update your code to make use of the new capabilities of the ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","isActive":true},{"text":" macro, including automatic","type":"text"},{"text":" ","type":"text"},{"text":"fulfillment of requirements for destination reducers and path reducers.","type":"text"}],"kind":"article","title":"Migrating to 1.8"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.14":{"title":"Migrating to 1.14","url":"\/documentation\/composablearchitecture\/migratingto1.14","type":"topic","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.14","abstract":[{"text":"The ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true},{"text":" type is now officially ","type":"text"},{"code":"@MainActor","type":"codeVoice"},{"text":" isolated.","type":"text"}],"role":"article"},"http://github.com/pointfreeco/swift-navigation":{"title":"Swift Navigation","titleInlineContent":[{"type":"text","text":"Swift Navigation"}],"identifier":"http:\/\/github.com\/pointfreeco\/swift-navigation","url":"http:\/\/github.com\/pointfreeco\/swift-navigation","type":"link"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.5":{"title":"Migrating to 1.5","url":"\/documentation\/composablearchitecture\/migratingto1.5","kind":"article","abstract":[{"text":"Update your code to make use of the new ","type":"text"},{"code":"Store\/scope(state:action:)-90255","type":"codeVoice"},{"text":" operation on ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true},{"text":" ","type":"text"},{"text":"in order to improve the performance of your features and simplify the usage of navigation APIs.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.5","role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","type":"topic","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.11":{"abstract":[{"text":"Update your code to use the new ","type":"text"},{"code":"withLock","type":"codeVoice"},{"text":" method for mutating shared state from asynchronous","type":"text"},{"text":" ","type":"text"},{"text":"contexts, rather than mutating the underlying wrapped value directly.","type":"text"}],"url":"\/documentation\/composablearchitecture\/migratingto1.11","role":"article","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.11","title":"Migrating to 1.11","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.6":{"abstract":[{"type":"text","text":"Update your code to make use of the new"},{"type":"text","text":" "},{"code":"TestStore\/receive(_:_:timeout:assert:fileID:file:line:column:)-9jd7x","type":"codeVoice"},{"type":"text","text":" method when you need to"},{"type":"text","text":" "},{"type":"text","text":"assert on the payload inside an action received."}],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.6","role":"article","title":"Migrating to 1.6","url":"\/documentation\/composablearchitecture\/migratingto1.6","type":"topic"}}}