{"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/switchstore\/distortioneffect(_:maxsampleoffset:isenabled:)"]}],"sections":[],"metadata":{"symbolKind":"method","modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"externalID":"s:7SwiftUI4ViewPAAE16distortionEffect_15maxSampleOffset9isEnabledQrAA6ShaderV_So6CGSizeVSbtF::SYNTHESIZED::s:22ComposableArchitecture11SwitchStoreV","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"distortionEffect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Shader","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI6ShaderV"},{"text":", ","kind":"text"},{"text":"maxSampleOffset","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@S@CGSize","text":"CGSize","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"isEnabled","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"roleHeading":"Instance Method","title":"distortionEffect(_:maxSampleOffset:isEnabled:)","role":"symbol","platforms":[{"beta":false,"introducedAt":"17.0","deprecated":false,"unavailable":false,"name":"iOS"},{"unavailable":false,"deprecated":false,"introducedAt":"14.0","beta":false,"name":"macOS"},{"name":"tvOS","introducedAt":"17.0","beta":false,"deprecated":false,"unavailable":false}],"extendedModule":"SwiftUICore"},"kind":"symbol","identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/distortionEffect(_:maxSampleOffset:isEnabled:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"distortionEffect"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"shader"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI6ShaderV","text":"Shader","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxSampleOffset"},{"kind":"text","text":": "},{"text":"CGSize","kind":"typeIdentifier","preciseIdentifier":"c:@S@CGSize"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"isEnabled"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":" = true) -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"},{"text":"\n","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations"]]},"abstract":[{"type":"text","text":"Inherited from "},{"code":"View.distortionEffect(_:maxSampleOffset:isEnabled:)","type":"codeVoice"},{"text":".","type":"text"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"title":"SwitchStore","abstract":[{"text":"A view that observes when enum state held in a store changes cases, and provides stores to","type":"text"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"type":"text","text":" views."}],"role":"symbol","deprecated":true,"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"SwitchStore","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","url":"\/documentation\/composablearchitecture\/switchstore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"type":"topic","title":"SwiftUI Integration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","kind":"article","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CaseLet"}],"url":"\/documentation\/composablearchitecture\/caselet","title":"CaseLet","role":"symbol","abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"text":".","type":"text"}],"kind":"symbol","type":"topic","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/distortionEffect(_:maxSampleOffset:isEnabled:)":{"type":"topic","abstract":[],"role":"symbol","title":"distortionEffect(_:maxSampleOffset:isEnabled:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"distortionEffect"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Shader","preciseIdentifier":"s:7SwiftUI6ShaderV"},{"text":", ","kind":"text"},{"text":"maxSampleOffset","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGSize","preciseIdentifier":"c:@S@CGSize"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"isEnabled"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/distortionEffect(_:maxSampleOffset:isEnabled:)","kind":"symbol","url":"\/documentation\/composablearchitecture\/switchstore\/distortioneffect(_:maxsampleoffset:isenabled:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/View-Implementations":{"kind":"article","role":"collectionGroup","title":"View Implementations","url":"\/documentation\/composablearchitecture\/switchstore\/view-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations","type":"topic","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"title":"Deprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article","url":"\/documentation\/composablearchitecture\/swiftuideprecations","role":"collectionGroup"}}}