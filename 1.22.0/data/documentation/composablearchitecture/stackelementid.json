{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID"},"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/ComposableArchitecture\/10CustomDump0aB17StringConvertibleP","doc:\/\/ComposableArchitecture\/s8CopyableP","doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP","doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/s27ExpressibleByIntegerLiteralP","doc:\/\/ComposableArchitecture\/SH","doc:\/\/ComposableArchitecture\/s8SendableP"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StackElementID"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","type":"reference","isActive":true},{"text":" type creates instances of this identifier when new elements are added to","type":"text"},{"text":" ","type":"text"},{"text":"the stack. This makes it possible to easily look up specific elements in the stack without","type":"text"},{"text":" ","type":"text"},{"text":"resorting to positional indices, which can be error prone, especially when dealing with async","type":"text"},{"text":" ","type":"text"},{"text":"effects.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The identifier is backed by a deterministic, generational ID. This allows you to predict how"},{"type":"text","text":" "},{"type":"text","text":"IDs will be created and allows you to write tests for how features behave in the stack."}]},{"type":"codeListing","syntax":"swift","code":["@Test","func basics() {","  var path = StackState<Int>()","  path.append(42)","  XCTAssertEqual(path[id: 0], 42)","  path.append(1729)","  XCTAssertEqual(path[id: 1], 1729)","","  path.removeAll()","  path.append(-1)","  XCTAssertEqual(path[id: 2], -1)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Notice that after removing all elements and appending a new element, the ID generated was 2 and"},{"type":"text","text":" "},{"type":"text","text":"did not go back to 0. This is because in tests the IDs are "},{"type":"emphasis","inlineContent":[{"type":"text","text":"generational"}]},{"type":"text","text":", which means they"},{"type":"text","text":" "},{"type":"text","text":"keep counting up, even if you remove elements from the stack."}]}],"kind":"content"}],"seeAlsoSections":[{"generated":true,"anchor":"Stack-based-navigation","title":"Stack-based navigation","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackActionOf"]}],"topicSections":[{"generated":true,"anchor":"Default-Implementations","title":"Default Implementations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/CustomDebugStringConvertible-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/CustomDumpStringConvertible-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/Equatable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/ExpressibleByIntegerLiteral-Implementations"]}],"metadata":{"title":"StackElementID","roleHeading":"Structure","navigatorTitle":[{"text":"StackElementID","kind":"identifier"}],"externalID":"s:22ComposableArchitecture14StackElementIDV","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StackElementID","kind":"identifier"}],"modules":[{"name":"ComposableArchitecture"}],"role":"symbol"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/stackelementid"]}],"abstract":[{"type":"text","text":"An opaque type that identifies an element of "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","isActive":true},{"type":"text","text":"."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID/Equatable-Implementations":{"kind":"article","type":"topic","role":"collectionGroup","title":"Equatable Implementations","abstract":[],"url":"\/documentation\/composablearchitecture\/stackelementid\/equatable-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/Equatable-Implementations"},"doc://ComposableArchitecture/s8CopyableP":{"title":"Swift.Copyable","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8CopyableP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackBasedNavigation":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","title":"Stack-based navigation","abstract":[{"type":"text","text":"Learn about stack-based navigation, that is navigation modeled with collections, including how to"},{"type":"text","text":" "},{"type":"text","text":"model your domains, how to integrate features, how to test your features, and more."}],"type":"topic","role":"article","url":"\/documentation\/composablearchitecture\/stackbasednavigation"},"doc://ComposableArchitecture/SH":{"title":"Swift.Hashable","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/SH"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackAction":{"title":"StackAction","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"StackAction"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction","abstract":[{"type":"text","text":"A wrapper type for actions that can be presented in a navigation stack."}],"type":"topic","role":"symbol","url":"\/documentation\/composablearchitecture\/stackaction","navigatorTitle":[{"kind":"identifier","text":"StackAction"}]},"doc://ComposableArchitecture/s28CustomDebugStringConvertibleP":{"title":"Swift.CustomDebugStringConvertible","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"role":"collectionGroup","type":"topic","kind":"article","url":"\/documentation\/composablearchitecture\/navigation","abstract":[{"type":"text","text":"Learn how to use the navigation tools in the library, including how to best model your domains, how"},{"type":"text","text":" "},{"type":"text","text":"to integrate features in the reducer and view layers, and how to write tests."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","title":"Navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID/CustomDumpStringConvertible-Implementations":{"title":"CustomDumpStringConvertible Implementations","kind":"article","url":"\/documentation\/composablearchitecture\/stackelementid\/customdumpstringconvertible-implementations","type":"topic","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/CustomDumpStringConvertible-Implementations"},"doc://ComposableArchitecture/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/ComposableArchitecture\/SQ"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID/CustomDebugStringConvertible-Implementations":{"type":"topic","url":"\/documentation\/composablearchitecture\/stackelementid\/customdebugstringconvertible-implementations","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/CustomDebugStringConvertible-Implementations","abstract":[],"kind":"article","title":"CustomDebugStringConvertible Implementations"},"doc://ComposableArchitecture/10CustomDump0aB17StringConvertibleP":{"type":"unresolvable","title":"CustomDump.CustomDumpStringConvertible","identifier":"doc:\/\/ComposableArchitecture\/10CustomDump0aB17StringConvertibleP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackActionOf":{"role":"symbol","abstract":[{"text":"A convenience type alias for referring to a stack action of a given reducer’s domain.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"StackActionOf"}],"navigatorTitle":[{"kind":"identifier","text":"StackActionOf"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackActionOf","title":"StackActionOf","url":"\/documentation\/composablearchitecture\/stackactionof"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID/ExpressibleByIntegerLiteral-Implementations":{"type":"topic","url":"\/documentation\/composablearchitecture\/stackelementid\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","role":"collectionGroup","kind":"article","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/ExpressibleByIntegerLiteral-Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID":{"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StackElementID"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"StackElementID"}],"type":"topic","abstract":[{"type":"text","text":"An opaque type that identifies an element of "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","type":"reference"},{"type":"text","text":"."}],"title":"StackElementID","url":"\/documentation\/composablearchitecture\/stackelementid","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","role":"collection","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackState":{"kind":"symbol","type":"topic","title":"StackState","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StackState","kind":"identifier"}],"navigatorTitle":[{"text":"StackState","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","abstract":[{"text":"A list of data representing the content of a navigation stack.","type":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/stackstate"},"doc://ComposableArchitecture/s27ExpressibleByIntegerLiteralP":{"type":"unresolvable","title":"Swift.ExpressibleByIntegerLiteral","identifier":"doc:\/\/ComposableArchitecture\/s27ExpressibleByIntegerLiteralP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"kind":"symbol","title":"Effect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","url":"\/documentation\/composablearchitecture\/effect","role":"symbol","navigatorTitle":[{"text":"Effect","kind":"identifier"}],"type":"topic"}}}