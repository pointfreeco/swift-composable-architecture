{"sections":[],"kind":"article","identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.5","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Update your code to make use of the new "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","isActive":true},{"text":" operation on ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","type":"reference"},{"text":" ","type":"text"},{"type":"text","text":"in order to improve the performance of your features and simplify the usage of navigation APIs."}],"metadata":{"role":"article","roleHeading":"Article","modules":[{"name":"ComposableArchitecture"}],"title":"Migrating to 1.5"},"variants":[{"paths":["\/documentation\/composablearchitecture\/migratingto1.5"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides"]]},"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","anchor":"Overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"The Composable Architecture is under constant development, and we are always looking for ways to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"simplify the library, and make it more powerful. As such, we often need to deprecate certain APIs"},{"type":"text","text":" "},{"text":"in favor of newer ones. We recommend people update their code as quickly as possible to the newest","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"APIs, and this article contains some tips for doing so."}]},{"style":"important","type":"aside","name":"Important","content":[{"type":"paragraph","inlineContent":[{"text":"Many APIs have been soft-deprecated in this release and will be hard-deprecated in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"a future minor release. We highly recommend updating your use of deprecated APIs to their newest"},{"text":" ","type":"text"},{"type":"text","text":"version as quickly as possible."}]}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"#Store-scoping-with-key-paths","isActive":true}]}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"#Scoping-performance","type":"reference"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"#Enum-driven-navigation-APIs","type":"reference","isActive":true}]}]}],"type":"unorderedList"},{"type":"heading","level":3,"anchor":"Store-scoping-with-key-paths","text":"Store scoping with key paths"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Prior to version 1.5 of the Composable Architecture, one was allowed to"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-9iai9","isActive":true,"type":"reference"},{"text":" a store with any kind of closures that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"transform the parent state to the child state, and child actions into parent actions:"}]},{"syntax":"swift","code":["store.scope(","  state: (State) -> ChildState,","  action: (ChildAction) -> Action",")"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"In practice you could typically use key paths for the ","type":"text"},{"code":"state","type":"codeVoice"},{"text":" transformation since key path literals","type":"text"},{"type":"text","text":" "},{"text":"can be promoted to closures. That means often scoping looked something like this:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ ⚠️ Deprecated API","ChildView(","  store: store.scope(","    state: \\.child, ","    action: { .child($0) }","  )",")"]},{"type":"paragraph","inlineContent":[{"text":"However, as of version 1.5 of the Composable Architecture, the version of","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-9iai9"},{"type":"text","text":" that takes two closures is"},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"soft-deprecated"}]},{"text":". Instead, you are to use the version of","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","type":"reference","isActive":true},{"type":"text","text":" that takes a key path for the "},{"code":"state","type":"codeVoice"},{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"argument, and a case key path for the "},{"type":"codeVoice","code":"action"},{"type":"text","text":" argument."}]},{"type":"paragraph","inlineContent":[{"text":"This is easiest to do when you are using the ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","isActive":true},{"text":" macro with your","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"feature because then case key paths are automatically generated for each case of your action enum."},{"text":" ","type":"text"},{"text":"The above construction of ","type":"text"},{"type":"codeVoice","code":"ChildView"},{"text":" now becomes:","type":"text"}]},{"syntax":"swift","code":["\/\/ ✅ New API","ChildView(","  store: store.scope(","    state: \\.child, ","    action: \\.child","  )",")"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The syntax is now shorter and more symmetric, and there is a hidden benefit too. Because key paths"},{"type":"text","text":" "},{"type":"text","text":"are "},{"code":"Hashable","type":"codeVoice"},{"text":", we are able to cache the store created by ","type":"text"},{"type":"codeVoice","code":"scope"},{"type":"text","text":". This means if the store is scoped"},{"text":" ","type":"text"},{"text":"again with the same ","type":"text"},{"code":"state","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"action","type":"codeVoice"},{"type":"text","text":" arguments, we can skip creating a new store and instead"},{"text":" ","type":"text"},{"text":"return the previously created one. This provides a lot of benefits, such as better performance, and","type":"text"},{"type":"text","text":" "},{"text":"a stable identity for features.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are some times when changing to this new scoping operator may be difficult. For example, if"},{"type":"text","text":" "},{"type":"text","text":"you perform additional work in your scoping closure so that a simple key path does not work:"}]},{"syntax":"swift","code":["ChildView(","  store: store.scope(","    state: { ChildFeature(state: $0.child) }, ","    action: { .child($0) }","  )",")"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"This can be handled by moving the work in the closure to a computed property on your state:","type":"text"}]},{"code":["extension State {","  var childFeature: ChildFeature {","    ChildFeature(state: self.child) ","  }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"And now the key path syntax works just fine:"}],"type":"paragraph"},{"syntax":"swift","code":["ChildView(","  store: store.scope(","    state: \\.childFeature, ","    action: \\.child","  )",")"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Another complication is if you are using data from "},{"type":"emphasis","inlineContent":[{"text":"outside","type":"text"}]},{"type":"text","text":" the closure, "},{"inlineContent":[{"type":"text","text":"inside"}],"type":"emphasis"},{"text":" the closure:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["ChildView(","  store: store.scope(","    state: { ","      ChildFeature(","        settings: viewStore.settings,","        state: $0.child","      ) ","    }, ","    action: { .child($0) }","  )",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this situation you can add a subscript to your state so that you can pass that data into it:"}]},{"code":["extension State {","  subscript(settings settings: Settings) -> ChildFeature {","    ChildFeature(","      settings: settings,","      state: self.child","    )","  }","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then you can use a subscript key path to perform the scoping:"}]},{"syntax":"swift","type":"codeListing","code":["ChildView(","  store: store.scope(","    state: \\.[settings: viewStore.settings], ","    action: \\.child","  )",")"]},{"type":"paragraph","inlineContent":[{"text":"Another common case you may encounter is when dealing with collections. It is common in the","type":"text"},{"text":" ","type":"text"},{"text":"Composable Architecture to use an ","type":"text"},{"code":"IdentifiedArray","type":"codeVoice"},{"type":"text","text":" in your feature’s state and an"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction"},{"type":"text","text":" in your feature’s actions (see "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.4#Identified-actions","type":"reference","isActive":true},{"text":" for more","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"info on "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction","isActive":true,"type":"reference"},{"type":"text","text":"). If you needed to scope your store down to one specific row of the"},{"type":"text","text":" "},{"text":"identified domain, previously you would have done so like this:","type":"text"}]},{"code":["store.scope(","  state: \\.rows[id: id],","  action: { .rows(.element(id: id, action: $0)) }",")"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"With case key paths it can be done simply like this:"}],"type":"paragraph"},{"syntax":"swift","code":["store.scope(","  state: \\.rows[id: id],","  action: \\.rows[id: id]",")"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"These tricks should be enough for you to rewrite all of your store scopes using key paths, but if","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"you have any problems feel free to open a"},{"text":" ","type":"text"},{"isActive":true,"identifier":"http:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions","type":"reference"},{"type":"text","text":" on the repo."}]},{"level":2,"type":"heading","text":"Scoping performance","anchor":"Scoping-performance"},{"type":"paragraph","inlineContent":[{"text":"The performance characteristics for store scoping have changed in this release. The primary (and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"intended) way of scoping is along "},{"type":"emphasis","inlineContent":[{"text":"stored","type":"text"}]},{"type":"text","text":" properties of child features. A very basic example of this"},{"type":"text","text":" "},{"type":"text","text":"is the following:"}]},{"code":["ChildView(","  store: store.scope(state: \\.child, action: \\.child)",")"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"A less common (and less supported) form of scoping is along "},{"inlineContent":[{"text":"computed","type":"text"}],"type":"emphasis"},{"type":"text","text":" properties, for example like"},{"type":"text","text":" "},{"type":"text","text":"this:"}],"type":"paragraph"},{"code":["extension ParentFeature.State {","  var computedChild: ChildFeature.State {","    ChildFeature.State(","      \/\/ Heavy computation here...","    )","  }","}","","ChildView(","  store: store.scope(state: \\.computedChild, action: \\.child)",")"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"This style of scoping will incur a bit of a performance cost in 1.5 and moving forward. The cost","type":"text"},{"type":"text","text":" "},{"type":"text","text":"is greater the closer your scoping is to the root of your application. Leaf node features will not"},{"type":"text","text":" "},{"text":"incur as much of a cost.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"See the dedicated article "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance#Store-scoping"},{"type":"text","text":" for more information."}]},{"level":2,"anchor":"Enum-driven-navigation-APIs","text":"Enum-driven navigation APIs","type":"heading"},{"inlineContent":[{"text":"Prior to version 1.5 of the library, using enum state with navigation view modifiers, such as","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"sheet"},{"text":", ","type":"text"},{"type":"codeVoice","code":"popover"},{"text":", ","type":"text"},{"code":"navigationDestination","type":"codeVoice"},{"type":"text","text":", etc, was quite verbose. You first needed to supply a"},{"type":"text","text":" "},{"text":"store scoped to the destination domain, and then further provide transformations for isolating the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"case of the state enum to drive the navigation, as well as a transformation for embedding child"},{"type":"text","text":" "},{"type":"text","text":"actions back into the destination domain:"}],"type":"paragraph"},{"syntax":"swift","code":["\/\/ ⚠️ Deprecated API",".sheet(","  store: store.scope(state: \\.$destination, action: { .destination($0) }),","  state: \\.editForm,","  action: { .editForm($0) }",")"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"The navigation view modifiers that take "},{"type":"codeVoice","code":"store"},{"type":"text","text":", "},{"code":"state","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"action"},{"type":"text","text":" arguments are now deprecated,"},{"type":"text","text":" "},{"type":"text","text":"and instead you can do it all with a single "},{"type":"codeVoice","code":"store"},{"type":"text","text":" argument:"}],"type":"paragraph"},{"syntax":"swift","code":["\/\/ ✅ New API",".sheet(","  store: store.scope(","    state: \\.$destination.editForm, ","    action: \\.destination.editForm","  )",")"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"All navigation APIs that take 3 arguments for the "},{"code":"store","type":"codeVoice"},{"type":"text","text":", "},{"code":"state","type":"codeVoice"},{"type":"text","text":" and "},{"code":"action","type":"codeVoice"},{"type":"text","text":" have been"},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"soft-deprecated"}]},{"text":" and instead you should make use of the version of the APIs that take a single","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"store"},{"type":"text","text":" argument. This includes:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"alert(store:state:action:)","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"confirmationDialog(store:state:action:)","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"fullScreenCover(store:state:action:)","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"code":"navigationDestination(store:state:action)","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"popover(store:state:action:)","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"sheet(store:state:action:)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore"},{"text":".","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:state:action:then:)","type":"reference","isActive":true}]}]},{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","isActive":true},{"type":"text","text":"."},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:state:action:then:else:)","isActive":true}],"type":"paragraph"}]}]}]}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.15","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.14","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.13","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.12","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.11","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.10","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.9","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.8","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.7","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.6","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.4"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/WithViewStore":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","navigatorTitle":[{"text":"WithViewStore","kind":"identifier"}],"kind":"symbol","type":"topic","title":"WithViewStore","url":"\/documentation\/composablearchitecture\/withviewstore","role":"symbol","deprecated":true,"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"WithViewStore","kind":"identifier"}],"abstract":[{"type":"text","text":"A view helper that transforms a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":" into a "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","type":"reference"},{"type":"text","text":" so that its state can be observed"},{"type":"text","text":" "},{"type":"text","text":"by a view builder."}]},"http://github.com/pointfreeco/swift-composable-architecture/discussions":{"titleInlineContent":[{"type":"text","text":"discussion"}],"type":"link","url":"http:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions","title":"discussion","identifier":"http:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.6":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.6","role":"article","title":"Migrating to 1.6","type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.6","abstract":[{"type":"text","text":"Update your code to make use of the new"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/receive(_:_:timeout:assert:fileID:file:line:column:)-9jd7x"},{"type":"text","text":" method when you need to"},{"type":"text","text":" "},{"type":"text","text":"assert on the payload inside an action received."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.10":{"kind":"article","abstract":[{"text":"Update your code to make use of the new state sharing tools in the library, such as the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared"},{"text":" ","type":"text"},{"text":"property wrapper, and the ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKey","type":"reference","isActive":true},{"type":"text","text":" and "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey","type":"reference","isActive":true},{"type":"text","text":" persistence strategies."}],"title":"Migrating to 1.10","type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.10","role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.10"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedAction":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction","kind":"symbol","type":"topic","abstract":[{"text":"A wrapper type for actions that can be presented in a list.","type":"text"}],"url":"\/documentation\/composablearchitecture\/identifiedaction","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdentifiedAction"}],"navigatorTitle":[{"kind":"identifier","text":"IdentifiedAction"}],"title":"IdentifiedAction","role":"symbol"},"#Store-scoping-with-key-paths":{"titleInlineContent":[{"text":"Store scoping with key paths","type":"text"}],"url":"#Store-scoping-with-key-paths","identifier":"#Store-scoping-with-key-paths","title":"Store scoping with key paths","type":"link"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction":{"type":"topic","navigatorTitle":[{"text":"PresentationAction","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/presentationaction","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"PresentationAction","kind":"identifier"}],"abstract":[{"type":"text","text":"A wrapper type for actions that can be presented."}],"role":"symbol","title":"PresentationAction","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"IfLetStore","kind":"identifier"}],"title":"IfLetStore","kind":"symbol","deprecated":true,"url":"\/documentation\/composablearchitecture\/ifletstore","role":"symbol","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.8":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.8","title":"Migrating to 1.8","role":"article","type":"topic","abstract":[{"type":"text","text":"Update your code to make use of the new capabilities of the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","isActive":true},{"text":" macro, including automatic","type":"text"},{"type":"text","text":" "},{"type":"text","text":"fulfillment of requirements for destination reducers and path reducers."}],"url":"\/documentation\/composablearchitecture\/migratingto1.8"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.14":{"abstract":[{"type":"text","text":"The "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true},{"type":"text","text":" type is now officially "},{"type":"codeVoice","code":"@MainActor"},{"type":"text","text":" isolated."}],"title":"Migrating to 1.14","type":"topic","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.14","role":"article","url":"\/documentation\/composablearchitecture\/migratingto1.14"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigrationGuides":{"title":"Migration guides","role":"collectionGroup","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides","abstract":[{"text":"Learn how to upgrade your application to the newest version of the Composable Architecture.","type":"text"}],"kind":"article","url":"\/documentation\/composablearchitecture\/migrationguides"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/receive(_:_:timeout:assert:fileID:file:line:column:)-9jd7x":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"receive"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture20_SendableCaseKeyPatha","kind":"typeIdentifier","text":"_SendableCaseKeyPath"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":": "},{"text":"Duration","preciseIdentifier":"s:s8DurationV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"assert"},{"kind":"text","text":": (("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"State","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")?, ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":", "},{"text":"column","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/receive(_:_:timeout:assert:fileID:file:line:column:)-9jd7x","title":"receive(_:_:timeout:assert:fileID:file:line:column:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Asserts an action was received matching a case path with a specific payload, and asserts how"},{"type":"text","text":" "},{"text":"the state changes.","type":"text"}],"url":"\/documentation\/composablearchitecture\/teststore\/receive(_:_:timeout:assert:fileid:file:line:column:)-9jd7x"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer()":{"url":"\/documentation\/composablearchitecture\/reducer()","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","role":"symbol","title":"Reducer()","abstract":[{"type":"text","text":"Helps implement the conformance to the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","isActive":true,"type":"reference"},{"text":" protocol for a type.","type":"text"}],"fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Reducer"},{"kind":"text","text":"()"}],"type":"topic","kind":"symbol"},"#Scoping-performance":{"titleInlineContent":[{"type":"text","text":"Scoping performance"}],"url":"#Scoping-performance","identifier":"#Scoping-performance","title":"Scoping performance","type":"link"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.7":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.7","role":"article","title":"Migrating to 1.7","type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.7","abstract":[{"text":"Update your code to make use of the new observation tools in the library and get rid of legacy","type":"text"},{"type":"text","text":" "},{"text":"APIs such as ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore"},{"type":"text","text":", "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","type":"reference","isActive":true},{"text":", ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","isActive":true},{"type":"text","text":", and more."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:action:)-90255":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","role":"symbol","title":"scope(state:action:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"scope"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ChildState"},{"kind":"text","text":", "},{"text":"ChildAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChildState","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"action","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildAction"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"ChildState"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"typeIdentifier"},{"kind":"text","text":">"}],"url":"\/documentation\/composablearchitecture\/store\/scope(state:action:)-90255","abstract":[{"type":"text","text":"Scopes the store to one that exposes child state and actions."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKey":{"type":"topic","url":"\/documentation\/composablearchitecture\/appstoragekey","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AppStorageKey","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKey","role":"symbol","navigatorTitle":[{"text":"AppStorageKey","kind":"identifier"}],"abstract":[{"type":"text","text":"A type defining a user defaults persistence strategy."}],"title":"AppStorageKey"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"type":"topic","url":"\/documentation\/composablearchitecture\/store","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"around to views that need to interact with the application."}],"kind":"symbol","title":"Store","navigatorTitle":[{"text":"Store","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.13":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.13","role":"article","title":"Migrating to 1.13","type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.13","abstract":[{"text":"The Composable Architecture now provides first class tools for building features in UIKit,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"including minimal state observation, presentation and stack navigation."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"url":"\/documentation\/composablearchitecture\/teststore","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TestStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"title":"TestStore","kind":"symbol","navigatorTitle":[{"text":"TestStore","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Shared":{"role":"symbol","title":"Shared","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Shared","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","navigatorTitle":[{"text":"Shared","kind":"identifier"}],"abstract":[{"type":"text","text":"A property wrapper type that shares a value with multiple parts of an application."}],"url":"\/documentation\/composablearchitecture\/shared"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.9":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.9","title":"Migrating to 1.9","role":"article","type":"topic","abstract":[{"type":"text","text":"Update your code to make use of the new "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/send(_:assert:fileID:file:line:column:)-8877x"},{"type":"text","text":""},{"type":"text","text":" "},{"text":"method on ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","type":"reference"},{"type":"text","text":" which gives a succinct syntax for sending actions with case key paths, and"},{"type":"text","text":" "},{"type":"text","text":"the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:)","type":"reference","isActive":true},{"type":"text","text":" method for overriding dependencies."}],"url":"\/documentation\/composablearchitecture\/migratingto1.9"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/init(_:state:action:then:else:)":{"type":"topic","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"text":"DestinationState","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"DestinationAction"},{"kind":"text","text":", "},{"text":"IfContent","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"ElseContent","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"PresentationState","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO","kind":"typeIdentifier","text":"PresentationAction"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"DestinationAction"},{"text":">>, ","kind":"text"},{"text":"state","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"DestinationState","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"State","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"DestinationAction"},{"kind":"text","text":", "},{"kind":"externalParam","text":"then"},{"text":": (","kind":"text"},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"IfContent"},{"kind":"text","text":", "},{"kind":"externalParam","text":"else"},{"kind":"text","text":": () -> "},{"text":"ElseContent","kind":"typeIdentifier"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Initializes an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore"},{"type":"text","text":" view that computes content depending on if a store of"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","isActive":true},{"type":"text","text":" and "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","isActive":true,"type":"reference"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" or non-"},{"code":"nil","type":"codeVoice"},{"text":" and state can further","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"be extracted from the destination state, "},{"inlineContent":[{"text":"e.g.","type":"text"}],"type":"emphasis"},{"type":"text","text":" it matches a particular case of an enum."}],"deprecated":true,"title":"init(_:state:action:then:else:)","url":"\/documentation\/composablearchitecture\/ifletstore\/init(_:state:action:then:else:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:state:action:then:else:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/init(_:state:action:then:)":{"type":"topic","url":"\/documentation\/composablearchitecture\/ifletstore\/init(_:state:action:then:)","title":"init(_:state:action:then:)","kind":"symbol","deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:state:action:then:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"text":"DestinationState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"DestinationAction","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"IfContent","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"PresentationState","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"DestinationState"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"PresentationAction","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO"},{"kind":"text","text":"<"},{"text":"DestinationAction","kind":"typeIdentifier"},{"kind":"text","text":">>, "},{"kind":"externalParam","text":"state"},{"text":": (","kind":"text"},{"text":"DestinationState","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"action","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"DestinationAction"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"then"},{"text":": (","kind":"text"},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"IfContent","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Initializes an "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","type":"reference","isActive":true},{"type":"text","text":" view that computes content depending on if a store of"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","isActive":true},{"type":"text","text":" and "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","isActive":true,"type":"reference"},{"text":" is ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" or non-","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" and state can further"},{"type":"text","text":" "},{"text":"be extracted from the destination state, ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"e.g."}]},{"type":"text","text":" it matches a particular case of an enum."}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.4#Identified-actions":{"type":"topic","title":"Identified actions","url":"\/documentation\/composablearchitecture\/migratingto1.4#Identified-actions","abstract":[],"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.4#Identified-actions"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/dependency(_:)":{"title":"dependency(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dependency"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"url":"\/documentation\/composablearchitecture\/reducer\/dependency(_:)","abstract":[{"type":"text","text":"Places a value in the reducer’s dependencies."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:)"},"#Enum-driven-navigation-APIs":{"titleInlineContent":[{"text":"Enum-driven navigation APIs","type":"text"}],"url":"#Enum-driven-navigation-APIs","identifier":"#Enum-driven-navigation-APIs","title":"Enum-driven navigation APIs","type":"link"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:action:)-9iai9":{"url":"\/documentation\/composablearchitecture\/store\/scope(state:action:)-9iai9","title":"scope(state:action:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"scope"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ChildState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ChildAction"},{"kind":"text","text":">("},{"text":"state","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ChildState"},{"text":", ","kind":"text"},{"text":"action","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"ChildAction","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"kind":"text","text":"<"},{"text":"ChildState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"typeIdentifier"},{"kind":"text","text":">"}],"deprecated":true,"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-9iai9","role":"symbol","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FileStorageKey":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey","navigatorTitle":[{"text":"FileStorageKey","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/filestoragekey","role":"symbol","title":"FileStorageKey","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FileStorageKey","kind":"identifier"}],"abstract":[{"type":"text","text":"A type defining a file persistence strategy"}],"type":"topic","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Shared/withLock(_:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared\/withLock(_:)","url":"\/documentation\/composablearchitecture\/shared\/withlock(_:)","role":"symbol","title":"withLock(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">((","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Perform an operation on shared state with isolated access to the underlying value."}],"type":"topic","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.12":{"title":"Migrating to 1.12","role":"article","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.12","abstract":[{"type":"text","text":"Take advantage of custom decoding and encoding logic for the shared file storage persistence"},{"type":"text","text":" "},{"type":"text","text":"strategy, as well as beta support for Swift’s native Testing framework."}],"kind":"article","url":"\/documentation\/composablearchitecture\/migratingto1.12"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","kind":"symbol","type":"topic","deprecated":true,"abstract":[{"text":"A Composable Architecture-friendly wrapper around ","type":"text"},{"type":"codeVoice","code":"ForEach"},{"type":"text","text":" that simplifies working with"},{"type":"text","text":" "},{"text":"collections of state.","type":"text"}],"url":"\/documentation\/composablearchitecture\/foreachstore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ForEachStore"}],"navigatorTitle":[{"text":"ForEachStore","kind":"identifier"}],"title":"ForEachStore","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.11":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.11","role":"article","title":"Migrating to 1.11","type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.11","abstract":[{"type":"text","text":"Update your code to use the new "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared\/withLock(_:)","type":"reference","isActive":true},{"type":"text","text":" method for mutating shared state from"},{"type":"text","text":" "},{"type":"text","text":"asynchronous contexts, rather than mutating the underlying wrapped value directly."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/presentationstate","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PresentationState"}],"type":"topic","navigatorTitle":[{"text":"PresentationState","kind":"identifier"}],"title":"PresentationState","abstract":[{"type":"text","text":"A property wrapper for state that can be presented."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.15":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.15","title":"Migrating to 1.15","role":"article","type":"topic","abstract":[{"type":"text","text":"The library has been completely updated for Swift 6 language mode, and now compiles in strict"},{"type":"text","text":" "},{"text":"concurrency with no warnings or errors.","type":"text"}],"url":"\/documentation\/composablearchitecture\/migratingto1.15"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Performance#Store-scoping":{"abstract":[],"kind":"section","url":"\/documentation\/composablearchitecture\/performance#Store-scoping","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance#Store-scoping","title":"Store scoping","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.4":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.4","role":"article","title":"Migrating to 1.4","type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.4","abstract":[{"type":"text","text":"Update your code to make use of the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","type":"reference","isActive":true},{"text":" macro, and learn how to better leverage case key","type":"text"},{"type":"text","text":" "},{"type":"text","text":"paths in your features."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/send(_:assert:fileID:file:line:column:)-8877x":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"assert"},{"text":": ((","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"State","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")?, ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"column"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture13TestStoreTaskV","kind":"typeIdentifier","text":"TestStoreTask"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/send(_:assert:fileID:file:line:column:)-8877x","title":"send(_:assert:fileID:file:line:column:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Sends an action to the store and asserts when state changes."}],"url":"\/documentation\/composablearchitecture\/teststore\/send(_:assert:fileid:file:line:column:)-8877x"}}}