{"abstract":[{"text":"Derives a binding from the store that prevents direct writes to state and instead sends","type":"text"},{"type":"text","text":" "},{"type":"text","text":"actions to the store."}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(get:send:)-65xes"]]},"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use '@ObservableState', instead. See the following migration guide for more information: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Using-ObservableState"}],"type":"paragraph"}],"metadata":{"modules":[{"name":"ComposableArchitecture"}],"title":"binding(get:send:)","externalID":"s:22ComposableArchitecture9ViewStoreC7binding3get4send7SwiftUI7BindingVyqd__Gqd__xc_q_tlF","platforms":[],"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"binding","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"get"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewState"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"text":"send","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":">","kind":"text"}],"role":"symbol","symbolKind":"method"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:ScM","kind":"attribute","text":"MainActor"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"binding"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"get","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"ViewState"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"send"},{"text":" ","kind":"text"},{"text":"action","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ViewAction"},{"text":") -> ","kind":"text"},{"text":"Binding","preciseIdentifier":"s:7SwiftUI7BindingV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A function to get the state for the binding from the view storeâ€™s full state."}],"type":"paragraph"}],"name":"get"},{"name":"action","content":[{"inlineContent":[{"type":"text","text":"The action to send when the binding is written to."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A binding.","type":"text"}]}],"kind":"content"},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The method is useful for dealing with SwiftUI components that work with two-way ","type":"text"},{"type":"codeVoice","code":"Binding"},{"type":"text","text":"s"},{"text":" ","type":"text"},{"text":"since the ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true},{"text":" does not allow directly writing its state; it only allows reading state","type":"text"},{"type":"text","text":" "},{"text":"and sending actions.","type":"text"}]},{"inlineContent":[{"type":"text","text":"For example, an alert binding can be dealt with like this:"}],"type":"paragraph"},{"syntax":"swift","code":["struct State { var alert: String? }","enum Action { case alertDismissed }","",".alert(","  item: viewStore.binding(","    get: { $0.alert },","    send: .alertDismissed","  )",") { alert in Alert(title: Text(alert.message)) }"],"type":"codeListing"}],"kind":"content"}],"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(send:)-7nwak","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(send:)-705m7"],"generated":true,"title":"Overloads","anchor":"Overloads"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(get:send:)-l66r"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/viewstore\/binding(get:send:)-l66r"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/binding(send:)-7nwak":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/viewstore\/binding(send:)-7nwak","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(send:)-7nwak","type":"topic","role":"symbol","title":"binding(send:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"binding"},{"text":"(","kind":"text"},{"text":"send","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"ViewState","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"text":">","kind":"text"}],"deprecated":true,"abstract":[{"type":"text","text":"Derives a binding from the store that prevents direct writes to state and instead sends"},{"type":"text","text":" "},{"type":"text","text":"actions to the store."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"type":"topic","url":"\/documentation\/composablearchitecture\/store","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"around to views that need to interact with the application."}],"kind":"symbol","title":"Store","navigatorTitle":[{"text":"Store","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"type":"topic","title":"SwiftUI Integration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","kind":"article","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"title":"Deprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article","url":"\/documentation\/composablearchitecture\/swiftuideprecations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/binding(get:send:)-65xes":{"title":"binding(get:send:)","kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/viewstore\/binding(get:send:)-65xes","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"binding","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"get","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewState"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"send"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ViewAction"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI7BindingV","kind":"typeIdentifier","text":"Binding"},{"kind":"text","text":"<"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(get:send:)-65xes","type":"topic","abstract":[{"type":"text","text":"Derives a binding from the store that prevents direct writes to state and instead sends"},{"type":"text","text":" "},{"type":"text","text":"actions to the store."}],"deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/binding(get:send:)-l66r":{"title":"binding(get:send:)","url":"\/documentation\/composablearchitecture\/viewstore\/binding(get:send:)-l66r","abstract":[{"type":"text","text":"Derives a binding from the store that prevents direct writes to state and instead sends"},{"type":"text","text":" "},{"type":"text","text":"actions to the store."}],"deprecated":true,"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binding","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"get","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"ViewState"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"send"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":") -> "},{"text":"Binding","preciseIdentifier":"s:7SwiftUI7BindingV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":">","kind":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(get:send:)-l66r"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","type":"topic","role":"symbol","kind":"symbol","title":"ViewStore","navigatorTitle":[{"text":"ViewStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/viewstore","deprecated":true,"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"ViewStore"},{"text":" is an object that can observe state changes and send actions. They are most","type":"text"},{"type":"text","text":" "},{"type":"text","text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used"},{"type":"text","text":" "},{"text":"anywhere it makes sense to observe state or send actions.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewStore"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/binding(send:)-705m7":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/viewstore\/binding(send:)-705m7","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(send:)-705m7","type":"topic","role":"symbol","title":"binding(send:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"binding"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"send"},{"kind":"text","text":": "},{"text":"ViewAction","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI7BindingV","kind":"typeIdentifier","text":"Binding"},{"text":"<","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"text":">","kind":"text"}],"deprecated":true,"abstract":[{"text":"Derives a binding from the store that prevents direct writes to state and instead sends","type":"text"},{"type":"text","text":" "},{"text":"actions to the store.","type":"text"}]}}}