{"seeAlsoSections":[{"title":"View state","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ConfirmationDialogState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AlertState"}],"title":"AlertState","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:22ComposableArchitecture10AlertStateV","modules":[{"name":"ComposableArchitecture"}],"navigatorTitle":[{"kind":"identifier","text":"AlertState"}]},"abstract":[{"type":"text","text":"A data type that describes the state of an alert that can be shown to the user. The "},{"type":"codeVoice","code":"Action"},{"type":"text","text":" "},{"type":"text","text":"generic is the type of actions that can be sent from tapping on a button in the alert."}],"sections":[],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/10CustomDump0aB11ReflectableP","doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/SH","doc:\/\/ComposableArchitecture\/s12IdentifiableP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI"]]},"topicSections":[{"title":"Structures","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/Button","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/ButtonAction"]},{"title":"Initializers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/init(title:message:buttons:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/init(title:message:dismissButton:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/init(title:message:primaryButton:secondaryButton:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/buttons","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/id-4b1a6","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/message","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/title"]},{"title":"Enumerations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/ButtonRole"]},{"title":"Default Implementations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/CustomDumpReflectable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/Equatable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/Hashable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/Identifiable-Implementations"],"generated":true}],"variants":[{"paths":["\/documentation\/composablearchitecture\/alertstate"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AlertState"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Action"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This type can be used in your application’s state in order to control the presentation or"},{"type":"text","text":" "},{"type":"text","text":"dismissal of alerts. It is preferable to use this API instead of the default SwiftUI API"},{"type":"text","text":" "},{"type":"text","text":"for alerts because SwiftUI uses 2-way bindings in order to control the showing and dismissal"},{"type":"text","text":" "},{"type":"text","text":"of alerts, and that does not play nicely with the Composable Architecture. The library requires"},{"type":"text","text":" "},{"type":"text","text":"that all state mutations happen by sending an action so that a reducer can handle that logic,"},{"type":"text","text":" "},{"type":"text","text":"which greatly simplifies how data flows through your application, and gives you instant"},{"type":"text","text":" "},{"type":"text","text":"testability on all parts of your application."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use this API, you model all the alert actions in your domain’s action enum:"}]},{"type":"codeListing","syntax":"swift","code":["enum Action: Equatable {","  case cancelTapped","  case confirmTapped","  case deleteTapped","","  \/\/ Your other actions","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"And you model the state for showing the alert in your domain’s state, and it can start off"},{"type":"text","text":" "},{"type":"codeVoice","code":"nil"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["struct State: Equatable {","  var alert: AlertState<Action>?","","  \/\/ Your other state","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then, in the reducer you can construct an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState"},{"type":"text","text":" value to represent the alert you want"},{"type":"text","text":" "},{"type":"text","text":"to show to the user:"}]},{"type":"codeListing","syntax":"swift","code":["func reduce(into state: inout State, action: Action) -> EffectTask<Action> {","  switch action {","  case .cancelTapped:","    state.alert = nil","    return .none","","  case .confirmTapped:","    state.alert = nil","    \/\/ Do deletion logic...","","  case .deleteTapped:","    state.alert = AlertState(","      title: TextState(\"Delete\"),","      message: TextState(\"Are you sure you want to delete this? It cannot be undone.\"),","      primaryButton: .default(TextState(\"Confirm\"), action: .send(.confirmTapped)),","      secondaryButton: .cancel(TextState(\"Cancel\"))","    )","    return .none","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"And then, in your view you can use the "},{"type":"codeVoice","code":".alert(_:send:dismiss:)"},{"type":"text","text":" method on "},{"type":"codeVoice","code":"View"},{"type":"text","text":" in order"},{"type":"text","text":" "},{"type":"text","text":"to present the alert in a way that works best with the Composable Architecture:"}]},{"type":"codeListing","syntax":"swift","code":["Button(\"Delete\") { viewStore.send(.deleteTapped) }","  .alert(","    self.store.scope(state: \\.alert),","    dismiss: .cancelTapped","  )"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This makes your reducer in complete control of when the alert is shown or dismissed, and makes"},{"type":"text","text":" "},{"type":"text","text":"it so that any choice made in the alert is automatically fed back into the reducer so that you"},{"type":"text","text":" "},{"type":"text","text":"can handle its logic."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Even better, you can instantly write tests that your alert behavior works as expected:"}]},{"type":"codeListing","syntax":"swift","code":["let store = TestStore(","  initialState: Feature.State(),","  reducer: Feature()",")","","store.send(.deleteTapped) {","  $0.alert = AlertState(","    title: TextState(\"Delete\"),","    message: TextState(\"Are you sure you want to delete this? It cannot be undone.\"),","    primaryButton: .default(TextState(\"Confirm\"), action: .send(.confirmTapped)),","    secondaryButton: .cancel(TextState(\"Cancel\"))","  )","}","store.send(.confirmTapped) {","  $0.alert = nil","  \/\/ Also verify that delete logic executed correctly","}"]}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/Equatable-Implementations","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/alertstate\/equatable-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState/message":{"role":"symbol","title":"message","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"message"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TextState","preciseIdentifier":"s:22ComposableArchitecture9TextStateV"},{"kind":"text","text":"?"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/message","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/alertstate\/message"},"doc://ComposableArchitecture/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/ComposableArchitecture\/SH"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState/init(title:message:buttons:)":{"role":"symbol","title":"init(title:message:buttons:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"title"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TextState","preciseIdentifier":"s:22ComposableArchitecture9TextStateV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"message"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TextState","preciseIdentifier":"s:22ComposableArchitecture9TextStateV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"buttons"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"AlertState","preciseIdentifier":"s:22ComposableArchitecture10AlertStateV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Button","preciseIdentifier":"s:22ComposableArchitecture10AlertStateV6ButtonV"},{"kind":"text","text":"])"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/init(title:message:buttons:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/alertstate\/init(title:message:buttons:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState/title":{"role":"symbol","title":"title","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"title"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TextState","preciseIdentifier":"s:22ComposableArchitecture9TextStateV"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/title","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/alertstate\/title"},"doc://ComposableArchitecture/10CustomDump0aB11ReflectableP":{"type":"unresolvable","title":"CustomDump.CustomDumpReflectable","identifier":"doc:\/\/ComposableArchitecture\/10CustomDump0aB11ReflectableP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState/init(title:message:dismissButton:)":{"role":"symbol","title":"init(title:message:dismissButton:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"title"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TextState","preciseIdentifier":"s:22ComposableArchitecture9TextStateV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"message"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TextState","preciseIdentifier":"s:22ComposableArchitecture9TextStateV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"dismissButton"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AlertState","preciseIdentifier":"s:22ComposableArchitecture10AlertStateV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Button","preciseIdentifier":"s:22ComposableArchitecture10AlertStateV6ButtonV"},{"kind":"text","text":"?)"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/init(title:message:dismissButton:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/alertstate\/init(title:message:dismissbutton:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUI":{"role":"collectionGroup","title":"SwiftUI Integration","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/swiftui"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState/buttons":{"role":"symbol","title":"buttons","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"buttons"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"AlertState","preciseIdentifier":"s:22ComposableArchitecture10AlertStateV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Button","preciseIdentifier":"s:22ComposableArchitecture10AlertStateV6ButtonV"},{"kind":"text","text":"]"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/buttons","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/alertstate\/buttons"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState":{"role":"symbol","title":"AlertState","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AlertState"}],"abstract":[{"type":"text","text":"A data type that describes the state of an alert that can be shown to the user. The "},{"type":"codeVoice","code":"Action"},{"type":"text","text":" "},{"type":"text","text":"generic is the type of actions that can be sent from tapping on a button in the alert."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AlertState"}],"url":"\/documentation\/composablearchitecture\/alertstate"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState/Hashable-Implementations":{"role":"collectionGroup","title":"Hashable Implementations","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/Hashable-Implementations","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/alertstate\/hashable-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TextState":{"role":"symbol","title":"TextState","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TextState"}],"abstract":[{"type":"text","text":"An equatable description of SwiftUI "},{"type":"codeVoice","code":"Text"},{"type":"text","text":". Useful for storing rich text in state for the"},{"type":"text","text":" "},{"type":"text","text":"purpose of rendering in a view hierarchy."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TextState"}],"url":"\/documentation\/composablearchitecture\/textstate"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState/id-4b1a6":{"role":"symbol","title":"id","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UUID","preciseIdentifier":"s:10Foundation4UUIDV"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/id-4b1a6","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/alertstate\/id-4b1a6"},"doc://ComposableArchitecture/s12IdentifiableP":{"type":"unresolvable","title":"Swift.Identifiable","identifier":"doc:\/\/ComposableArchitecture\/s12IdentifiableP"},"doc://ComposableArchitecture/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/ComposableArchitecture\/SQ"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState/ButtonRole":{"role":"symbol","title":"AlertState.ButtonRole","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ButtonRole"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/ButtonRole","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ButtonRole"}],"url":"\/documentation\/composablearchitecture\/alertstate\/buttonrole"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState/init(title:message:primaryButton:secondaryButton:)":{"role":"symbol","title":"init(title:message:primaryButton:secondaryButton:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"title"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TextState","preciseIdentifier":"s:22ComposableArchitecture9TextStateV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"message"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TextState","preciseIdentifier":"s:22ComposableArchitecture9TextStateV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"primaryButton"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AlertState","preciseIdentifier":"s:22ComposableArchitecture10AlertStateV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Button","preciseIdentifier":"s:22ComposableArchitecture10AlertStateV6ButtonV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"secondaryButton"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AlertState","preciseIdentifier":"s:22ComposableArchitecture10AlertStateV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Button","preciseIdentifier":"s:22ComposableArchitecture10AlertStateV6ButtonV"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/init(title:message:primaryButton:secondaryButton:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/alertstate\/init(title:message:primarybutton:secondarybutton:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState/CustomDumpReflectable-Implementations":{"role":"collectionGroup","title":"CustomDumpReflectable Implementations","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/CustomDumpReflectable-Implementations","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/alertstate\/customdumpreflectable-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState/Identifiable-Implementations":{"role":"collectionGroup","title":"Identifiable Implementations","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/Identifiable-Implementations","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/alertstate\/identifiable-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState/Button":{"role":"symbol","title":"AlertState.Button","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Button"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/Button","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Button"}],"url":"\/documentation\/composablearchitecture\/alertstate\/button"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState/ButtonAction":{"role":"symbol","title":"AlertState.ButtonAction","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ButtonAction"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/ButtonAction","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ButtonAction"}],"url":"\/documentation\/composablearchitecture\/alertstate\/buttonaction"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ConfirmationDialogState":{"role":"symbol","title":"ConfirmationDialogState","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConfirmationDialogState"}],"abstract":[{"type":"text","text":"A data type that describes the state of a confirmation dialog that can be shown to the user. The"},{"type":"text","text":" "},{"type":"codeVoice","code":"Action"},{"type":"text","text":" generic is the type of actions that can be sent from tapping on a button in the sheet."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ConfirmationDialogState","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ConfirmationDialogState"}],"url":"\/documentation\/composablearchitecture\/confirmationdialogstate"}}}