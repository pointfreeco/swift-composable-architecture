{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional\/Reducer-Implementations"]]},"abstract":[{"text":"Instruments a reducer with","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/developer.apple.com\/documentation\/os\/logging\/recording_performance_data","type":"reference","isActive":true},{"type":"text","text":"."}],"metadata":{"externalID":"s:22ComposableArchitecture7ReducerPAAE8signpost_3logAA09_SignpostC0VyxGSS_So06OS_os_E0CtF::SYNTHESIZED::s:Sq","symbolKind":"method","extendedModule":"ComposableArchitecture","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"signpost"},{"kind":"text","text":"("},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"log"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:objc(cs)OS_os_log","text":"OSLog","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"_SignpostReducer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"modules":[{"name":"ComposableArchitecture"}],"role":"symbol","title":"signpost(_:log:)"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"@warn_unqualified_access","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"signpost"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"prefix","kind":"internalParam"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":" = \"\", "},{"text":"log","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OSLog","preciseIdentifier":"c:objc(cs)OS_os_log"},{"text":" = OSLog(\n      subsystem: \"co.pointfree.ComposableArchitecture\",\n      category: \"Reducer Instrumentation\"\n    )) -> ","kind":"text"},{"text":"_SignpostReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A string to print at the beginning of the formatted message for the signpost."}]}],"name":"prefix"},{"name":"log","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"OSLog"},{"text":" to use for signposts.","type":"text"}]}]}]},{"content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A reducer that has been enhanced with instrumentation.","type":"text"}]}],"kind":"content"},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"inlineContent":[{"text":"Each invocation of the reducer will be measured by an interval, and the lifecycle of its","type":"text"},{"type":"text","text":" "},{"text":"effects will be measured with interval and event signposts.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use, build your app for profiling, create a blank instrument, and add the signpost"},{"text":" ","type":"text"},{"type":"text","text":"instrument. Start recording your app you will see timing information for every action sent to"},{"text":" ","type":"text"},{"type":"text","text":"the store, as well as every effect executed."}]},{"type":"paragraph","inlineContent":[{"text":"Effect instrumentation can be particularly useful for inspecting the lifecycle of long-living","type":"text"},{"type":"text","text":" "},{"text":"effects. For example, if you start an effect (","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"e.g."}]},{"type":"text","text":", a location manager) in "},{"code":"onAppear","type":"codeVoice"},{"text":" and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"forget to tear down the effect in "},{"code":"onDisappear","type":"codeVoice"},{"text":", the instrument will show that the effect","type":"text"},{"type":"text","text":" "},{"text":"never completed.","type":"text"}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/swift\/optional\/signpost(_:log:)"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional\/signpost(_:log:)"},"kind":"symbol","references":{"https://developer.apple.com/documentation/os/logging/recording_performance_data":{"titleInlineContent":[{"type":"text","text":"signposts"}],"identifier":"https:\/\/developer.apple.com\/documentation\/os\/logging\/recording_performance_data","title":"signposts","url":"https:\/\/developer.apple.com\/documentation\/os\/logging\/recording_performance_data","type":"link"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"kind":"symbol","title":"Effect","type":"topic","url":"\/documentation\/composablearchitecture\/effect","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","navigatorTitle":[{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"kind":"symbol","title":"ComposableArchitecture","type":"topic","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Swift/Optional/signpost(_:log:)":{"abstract":[{"type":"text","text":"Instruments a reducer with"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/os\/logging\/recording_performance_data"},{"text":".","type":"text"}],"url":"\/documentation\/composablearchitecture\/swift\/optional\/signpost(_:log:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional\/signpost(_:log:)","type":"topic","title":"signpost(_:log:)","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"signpost","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"log","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:objc(cs)OS_os_log","kind":"typeIdentifier","text":"OSLog"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"_SignpostReducer"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true,"type":"reference"},{"text":"s should be executed later by the store, if any.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","role":"symbol","kind":"symbol","title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Swift/Optional":{"fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"text":"Optional","kind":"identifier","preciseIdentifier":"s:Sq"}],"title":"Optional","type":"topic","url":"\/documentation\/composablearchitecture\/swift\/optional","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Optional","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Swift/Optional/Reducer-Implementations":{"title":"Reducer Implementations","type":"topic","url":"\/documentation\/composablearchitecture\/swift\/optional\/reducer-implementations","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional\/Reducer-Implementations","kind":"article","role":"collectionGroup"}}}