{"abstract":[{"text":"Embeds a child reducer in a parent domain.","type":"text"}],"seeAlsoSections":[{"generated":true,"anchor":"Embedding-child-features","title":"Embedding child features","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"]}],"sections":[],"kind":"symbol","metadata":{"roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Scope","kind":"identifier"}],"symbolKind":"struct","modules":[{"name":"ComposableArchitecture"}],"title":"Scope","externalID":"s:22ComposableArchitecture5ScopeV","navigatorTitle":[{"text":"Scope","kind":"identifier"}],"role":"symbol"},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/scope"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"topicSections":[{"anchor":"Deprecations","title":"Deprecations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ScopeDeprecations"]},{"generated":true,"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/init(state:action:child:)-3muq","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/init(state:action:child:)-68945","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/init(state:action:child:fileID:filePath:line:column:)-40ssf","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/init(state:action:child:fileID:filePath:line:column:)-817l9"]},{"generated":true,"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/reduce(into:action:)"]},{"generated":true,"anchor":"Default-Implementations","title":"Default Implementations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/Reducer-Implementations"]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Scope","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ParentState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ParentAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Child","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Child"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","preciseIdentifier":"s:22ComposableArchitecture7ReducerP","text":"Reducer"}]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"inlineContent":[{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","type":"reference","isActive":true},{"text":" allows you to transform a parent domain into a child domain, and then run a child","type":"text"},{"text":" ","type":"text"},{"text":"reduce on that subset domain. This is an important tool for breaking down large features into","type":"text"},{"text":" ","type":"text"},{"text":"smaller units and then piecing them together. The smaller units can be easier to understand and","type":"text"},{"text":" ","type":"text"},{"text":"test, and can even be packaged into their own isolated modules.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"You hand "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","isActive":true},{"type":"text","text":" 3 pieces of data for it to do its job:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"A writable key path that identifies the child state inside the parent state.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A case path that identifies the child actions inside the parent actions."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A @"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","isActive":true},{"type":"text","text":" closure that describes the reducer you want to run on the child domain."}]}]}],"type":"unorderedList"},{"inlineContent":[{"text":"When run, it will intercept all child actions sent and feed them to the child reducer so that","type":"text"},{"text":" ","type":"text"},{"text":"it can update the parent state and execute effects.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"For example, given the basic scaffolding of child reducer:","type":"text"}],"type":"paragraph"},{"code":["@Reducer","struct Child {","  struct State {","    \/\/ ...","  }","  enum Action {","    \/\/ ...","  }","  \/\/ ...","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"A parent reducer with a domain that holds onto the child domain can use"},{"type":"text","text":" "},{"type":"codeVoice","code":"init(state:action:child:)-88vdx"},{"type":"text","text":" to embed the child reducer in its"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-20w8t"},{"type":"text","text":":"}],"type":"paragraph"},{"code":["@Reducer","struct Parent {","  struct State {","    var child: Child.State","    \/\/ ...","  }","","  enum Action {","    case child(Child.Action)","    \/\/ ...","  }","","  var body: some Reducer<State, Action> {","    Scope(state: \\.child, action: \\.child) {","      Child()","    }","    Reduce { state, action in","      \/\/ Additional parent logic and behavior","    }","  }","}"],"type":"codeListing","syntax":"swift"},{"anchor":"Enum-state","type":"heading","level":2,"text":"Enum state"},{"inlineContent":[{"type":"text","text":"The "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope"},{"type":"text","text":" reducer also works when state is modeled as an enum, not just a struct. In that"},{"type":"text","text":" "},{"type":"text","text":"case you can use "},{"type":"codeVoice","code":"init(state:action:child:fileID:filePath:line:column:)-9g44g"},{"type":"text","text":" to specify a"},{"type":"text","text":" "},{"type":"text","text":"case path that identifies the case of state you want to scope to."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example, if your state was modeled as an enum for unloaded\/loading\/loaded, you could"},{"type":"text","text":" "},{"type":"text","text":"scope to the loaded case to run a reduce on only that case:"}],"type":"paragraph"},{"code":["@Reducer","struct Feature {","  enum State {","    case unloaded","    case loading","    case loaded(Child.State)","  }","  enum Action {","    case child(Child.Action)","    \/\/ ...","  }","","  var body: some Reducer<State, Action> {","    Scope(state: \\.loaded, action: \\.child) {","      Child()","    }","    Reduce { state, action in","      \/\/ Additional feature logic and behavior","    }","  }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"It is important to note that the order of combine ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","isActive":true,"type":"reference"},{"text":" and your additional feature logic","type":"text"},{"text":" ","type":"text"},{"text":"matters. It must be combined before the additional logic. In the other order it would be","type":"text"},{"text":" ","type":"text"},{"text":"possible for the feature to intercept a child action, switch the state to another case, and","type":"text"},{"text":" ","type":"text"},{"text":"then the scoped child reducer would not be able to react to that action. That can cause subtle","type":"text"},{"text":" ","type":"text"},{"text":"bugs, and so we show a runtime warning in that case, and cause test failures.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"For an alternative to using ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope"},{"text":" with state case paths that enforces the order, check out","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":"ifCaseLet(_:action:then:fileID:filePath:line:column:)-rdrb","type":"codeVoice"},{"text":" operator.","type":"text"}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"]]},"relationshipsSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope/reduce(into:action:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reduce","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParentState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ParentAction","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Effect","preciseIdentifier":"s:22ComposableArchitecture6EffectV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ParentAction","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"reduce(into:action:)","type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/reduce(into:action:)","url":"\/documentation\/composablearchitecture\/scope\/reduce(into:action:)","kind":"symbol","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/body-20w8t":{"abstract":[{"text":"The content and behavior of a reducer that is composed from other reducers.","type":"text"}],"required":true,"type":"topic","role":"symbol","title":"body","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Body","preciseIdentifier":"s:22ComposableArchitecture7ReducerP4BodyQa"}],"url":"\/documentation\/composablearchitecture\/reducer\/body-20w8t","defaultImplementations":2,"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-20w8t"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ScopeDeprecations":{"title":"Deprecations","abstract":[{"type":"text","text":"Review unsupported reducer APIs and their replacements."}],"kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/scopedeprecations","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ScopeDeprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope":{"url":"\/documentation\/composablearchitecture\/scope","navigatorTitle":[{"kind":"identifier","text":"Scope"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scope"}],"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","title":"Scope"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope/Reducer-Implementations":{"url":"\/documentation\/composablearchitecture\/scope\/reducer-implementations","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/Reducer-Implementations","kind":"article","role":"collectionGroup","type":"topic","title":"Reducer Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope/init(state:action:child:fileID:filePath:line:column:)-40ssf":{"deprecated":true,"kind":"symbol","type":"topic","title":"init(state:action:child:fileID:filePath:line:column:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/init(state:action:child:fileID:filePath:line:column:)-40ssf","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ChildState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"state","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:13CasePathsCore03AnyA4PathV","text":"AnyCasePath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ParentState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChildState","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:13CasePathsCore03AnyA4PathV","text":"AnyCasePath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ParentAction","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"child","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Child","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/composablearchitecture\/scope\/init(state:action:child:fileid:filepath:line:column:)-40ssf","role":"symbol","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"role":"collectionGroup","type":"topic","kind":"article","url":"\/documentation\/composablearchitecture\/navigation","abstract":[{"type":"text","text":"Learn how to use the navigation tools in the library, including how to best model your domains, how"},{"type":"text","text":" "},{"type":"text","text":"to integrate features in the reducer and view layers, and how to write tests."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","title":"Navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope/init(state:action:child:)-3muq":{"type":"topic","abstract":[{"text":"Initializes a reducer that runs the given child reducer against a slice of parent state and","type":"text"},{"text":" ","type":"text"},{"text":"actions.","type":"text"}],"title":"init(state:action:child:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ChildState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"state","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ParentState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChildState","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:13CasePathsCore0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ParentAction","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"child","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Child","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/composablearchitecture\/scope\/init(state:action:child:)-3muq","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/init(state:action:child:)-3muq"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","role":"collection","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerBuilder":{"url":"\/documentation\/composablearchitecture\/reducerbuilder","navigatorTitle":[{"text":"ReducerBuilder","kind":"identifier"}],"kind":"symbol","title":"ReducerBuilder","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReducerBuilder","kind":"identifier"}],"abstract":[{"type":"text","text":"A result builder for combining reducers into a single reducer by running each, one after the"},{"type":"text","text":" "},{"type":"text","text":"other, and merging their effects."}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"kind":"symbol","title":"Effect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","url":"\/documentation\/composablearchitecture\/effect","role":"symbol","navigatorTitle":[{"text":"Effect","kind":"identifier"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope/init(state:action:child:fileID:filePath:line:column:)-817l9":{"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/init(state:action:child:fileID:filePath:line:column:)-817l9","url":"\/documentation\/composablearchitecture\/scope\/init(state:action:child:fileid:filepath:line:column:)-817l9","title":"init(state:action:child:fileID:filePath:line:column:)","abstract":[{"type":"text","text":"Initializes a reducer that runs the given child reducer against a slice of parent state and"},{"type":"text","text":" "},{"type":"text","text":"actions."}],"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ChildState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ChildAction"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CaseKeyPath","preciseIdentifier":"s:13CasePathsCore0A7KeyPatha"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildState"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CaseKeyPath","preciseIdentifier":"s:13CasePathsCore0A7KeyPatha"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentAction"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildAction"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"child"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Child"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"filePath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope/init(state:action:child:)-68945":{"role":"symbol","url":"\/documentation\/composablearchitecture\/scope\/init(state:action:child:)-68945","kind":"symbol","title":"init(state:action:child:)","deprecated":true,"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ChildState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ChildAction"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildState"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:13CasePathsCore03AnyA4PathV","text":"AnyCasePath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentAction"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildAction"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"child"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Child"},{"kind":"text","text":")"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/init(state:action:child:)-68945","type":"topic","abstract":[]}}}