{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"defaultFileStorage"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorage","preciseIdentifier":"s:22ComposableArchitecture11FileStorageV","text":"FileStorage"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"kind":"keyword","text":"set"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this dependency to override the manner in which "},{"type":"codeVoice","code":"PersistenceReaderKey\/fileStorage(_:)"},{"type":"text","text":" "},{"type":"text","text":"interacts with file storage. For example, while your app is running for UI tests you"},{"type":"text","text":" "},{"type":"text","text":"probably do not want your features writing changes to disk, which would cause that data to"},{"type":"text","text":" "},{"type":"text","text":"bleed over from test to test."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"So, for that situation you can use the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorage\/inMemory"},{"type":"text","text":" file storage so that each"},{"type":"text","text":" "},{"type":"text","text":"run of the app starts with a fresh “file system” that will never interfer with other tests:"}]},{"type":"codeListing","syntax":"swift","code":["@main","struct EntryPoint: App {","  let store = Store(initialState: AppFeature.State()) {","    AppFeature()","  } withDependencies: {","    if ProcessInfo.processInfo.environment[\"UITesting\"] == \"true\" {","      $0.defaultFileStorage = .inMemory","    }","  }","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/dependencies\/dependencyvalues\/defaultfilestorage"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies\/DependencyValues\/defaultFileStorage","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Default file storage used by "},{"type":"codeVoice","code":"PersistenceReaderKey\/fileStorage(_:)"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"role":"symbol","title":"defaultFileStorage","roleHeading":"Instance Property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"defaultFileStorage"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FileStorage","preciseIdentifier":"s:22ComposableArchitecture11FileStorageV"}],"symbolKind":"property","externalID":"s:12Dependencies16DependencyValuesV22ComposableArchitectureE18defaultFileStorageAD0gH0Vvp","extendedModule":"Dependencies","modules":[{"name":"ComposableArchitecture","relatedModules":["Dependencies"]}]},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducers","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey"]]},"seeAlsoSections":[{"title":"Overriding storage","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorage"],"generated":true}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"role":"symbol","title":"Reducer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"url":"\/documentation\/composablearchitecture\/reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"role":"collectionGroup","title":"Sharing state","abstract":[{"type":"text","text":"Learn techniques for sharing state throughout many parts of your application, and how to persist"},{"type":"text","text":" "},{"type":"text","text":"data to user defaults, the file system, and other external mediums."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/sharingstate"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"role":"symbol","title":"Effect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"url":"\/documentation\/composablearchitecture\/effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FileStorageKey":{"role":"symbol","title":"FileStorageKey","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileStorageKey"}],"abstract":[{"type":"text","text":"A type defining a file persistence strategy"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FileStorageKey"}],"url":"\/documentation\/composablearchitecture\/filestoragekey"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer()":{"role":"symbol","title":"Reducer()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Helps implement the conformance to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"},{"type":"text","text":" protocol for a type."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/reducer()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducers":{"role":"collectionGroup","title":"Reducers","abstract":[{"type":"text","text":"Learn about one of the most fundamental tools in the Composable Architecture: the reducer. It is"},{"type":"text","text":" "},{"type":"text","text":"responsible for evolving the state of your application forward when an action is sent, and"},{"type":"text","text":" "},{"type":"text","text":"constructing effects that are executed in the outside world."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducers","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/reducers"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FileStorage":{"role":"symbol","title":"FileStorage","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileStorage"}],"abstract":[{"type":"text","text":"A type that encapsulates saving and loading data from disk."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorage","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FileStorage"}],"url":"\/documentation\/composablearchitecture\/filestorage"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FileStorage/inMemory":{"role":"symbol","title":"inMemory","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"inMemory"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FileStorage","preciseIdentifier":"s:22ComposableArchitecture11FileStorageV"}],"abstract":[{"type":"text","text":"File storage that emulates a file system without actually writing anything to disk."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorage\/inMemory","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/filestorage\/inmemory"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Dependencies/DependencyValues/defaultFileStorage":{"role":"symbol","title":"defaultFileStorage","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"defaultFileStorage"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FileStorage","preciseIdentifier":"s:22ComposableArchitecture11FileStorageV"}],"abstract":[{"type":"text","text":"Default file storage used by "},{"type":"codeVoice","code":"PersistenceReaderKey\/fileStorage(_:)"},{"type":"text","text":"."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies\/DependencyValues\/defaultFileStorage","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/dependencies\/dependencyvalues\/defaultfilestorage"}}}