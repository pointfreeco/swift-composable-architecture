{"sections":[],"metadata":{"modules":[{"name":"ComposableArchitecture"}],"role":"symbol","extendedModule":"ComposableArchitecture","symbolKind":"method","roleHeading":"Instance Method","title":"transformDependency(_:transform:)","externalID":"s:22ComposableArchitecture7ReducerPAAE19transformDependency_0D0AA01_e10KeyWritingC0VyxGs08WritableF4PathCy12Dependencies0E6ValuesVqd__G_yqd__zctlF::SYNTHESIZED::s:22ComposableArchitecture5ScopeV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"transformDependency","kind":"identifier"},{"kind":"text","text":"<"},{"text":"V","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"DependencyValues","preciseIdentifier":"s:12Dependencies16DependencyValuesV"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":">, "},{"text":"transform","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"V"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/scope\/transformdependency(_:transform:)"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/Reducer-Implementations"]]},"abstract":[{"type":"text","text":"Transform a reducer’s dependency value at the specified key path with the given function."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/transformDependency(_:transform:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@warn_unqualified_access"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"transformDependency"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"keyPath","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"text":"DependencyValues","preciseIdentifier":"s:12Dependencies16DependencyValuesV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":">, "},{"text":"transform","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" ("},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"V"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A key path that indicates the property of the "},{"type":"codeVoice","code":"DependencyValues"},{"type":"text","text":" structure to"},{"text":" ","type":"text"},{"text":"transform.","type":"text"}],"type":"paragraph"}],"name":"keyPath"},{"name":"transform","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that is handed a mutable instance of the value specified by the key"},{"type":"text","text":" "},{"type":"text","text":"path."}]}]}]},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This is similar to ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/dependency(_:_:)","type":"reference","isActive":true},{"type":"text","text":", except it allows you to mutate a dependency value"},{"type":"text","text":" "},{"text":"directly. This can be handy when you want to alter a dependency but still use its current","type":"text"},{"type":"text","text":" "},{"text":"value.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"For example, suppose you want to see when a particular endpoint of a dependency gets called","type":"text"},{"text":" ","type":"text"},{"text":"in your application. You can override that endpoint to insert a breakpoint or print statement,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"but still call out to the original endpoint:"}]},{"syntax":"swift","code":["  Feature()","    .transformDependency(\\.speechClient) { speechClient in","      speechClient.requestAuthorization = {","        print(\"requestAuthorization\")","        try await speechClient.requestAuthorization()","      }","    }"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also transform "},{"inlineContent":[{"text":"all","type":"text"}],"type":"emphasis"},{"text":" dependency values at once by using the ","type":"text"},{"code":"\\.self","type":"codeVoice"},{"type":"text","text":" key path:"}]},{"code":["Feature()","  .transformDependency(\\.self) { dependencyValues in","    \/\/ Access to all dependencies in here","  }"],"type":"codeListing","syntax":"swift"},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":"The trailing closure of "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/transformDependency(_:transform:)","isActive":true,"type":"reference"},{"type":"text","text":" is called for every"},{"text":" ","type":"text"},{"type":"text","text":"action sent to the reducer, and so you can expect it to be called many times in an"},{"text":" ","type":"text"},{"type":"text","text":"application’s lifecycle. This means you should typically not create dependencies in the"},{"type":"text","text":" "},{"type":"text","text":"closure as that will cause a new dependency to be created everytime an action is sent."}],"type":"paragraph"}],"style":"warning","name":"Warning"}],"kind":"content"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope/transformDependency(_:transform:)":{"url":"\/documentation\/composablearchitecture\/scope\/transformdependency(_:transform:)","role":"symbol","abstract":[{"type":"text","text":"Transform a reducer’s dependency value at the specified key path with the given function."}],"title":"transformDependency(_:transform:)","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"transformDependency","kind":"identifier"},{"kind":"text","text":"<"},{"text":"V","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"V"},{"text":">, ","kind":"text"},{"text":"transform","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/transformDependency(_:transform:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope/dependency(_:_:)":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/scope\/dependency(_:_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/dependency(_:_:)","role":"symbol","title":"dependency(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dependency"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"_DependencyKeyWritingReducer"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Sets the dependency value of the specified key path to the given value."}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"kind":"symbol","title":"Effect","type":"topic","url":"\/documentation\/composablearchitecture\/effect","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","navigatorTitle":[{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true,"type":"reference"},{"text":"s should be executed later by the store, if any.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","role":"symbol","kind":"symbol","title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"kind":"symbol","title":"ComposableArchitecture","type":"topic","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Scope","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Scope"}],"title":"Scope","url":"\/documentation\/composablearchitecture\/scope","abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain."}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope/Reducer-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/Reducer-Implementations","role":"collectionGroup","abstract":[],"type":"topic","url":"\/documentation\/composablearchitecture\/scope\/reducer-implementations","kind":"article","title":"Reducer Implementations"}}}