{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Composable Architecture is now integrated with the "},{"type":"reference","isActive":true,"identifier":"http:\/\/github.com\/pointfreeco\/swift-navigation"},{"type":"text","text":" library,"},{"type":"text","text":" "},{"type":"text","text":"which brings powerful navigation and observation tools to UIKit. You can model your domains"},{"type":"text","text":" "},{"type":"text","text":"as concisely as possible, just as you would in SwiftUI, but then implement your view in UIKit"},{"type":"text","text":" "},{"type":"text","text":"without losing any power."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The simplest tool to use is "},{"type":"codeVoice","code":"observe"},{"type":"text","text":", which allows you to minimally observe changes to state in"},{"type":"text","text":" "},{"type":"text","text":"your feature and update the UI. Typically the best place to do this is in "},{"type":"codeVoice","code":"viewDidLoad"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["let store: StoreOf<Feature>","","func viewDidLoad() {","  super.viewDidLoad()","","  \/\/ ...","","  observe { [weak self] in","    countLabel.text = \"Count: \\(store.count)\"","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Only the state accessed in the "},{"type":"codeVoice","code":"observe"},{"type":"text","text":" trailing closure will be observed. If any other state"},{"type":"text","text":" "},{"type":"text","text":"changes, the closure will not be invoked and no extra work will be performed."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The library also provides powerful navigation tools for UIKit. For example, suppose you have a"},{"type":"text","text":" "},{"type":"text","text":"feature that can present a child feature (see the docs on "},{"overridingTitleInlineContent":[{"type":"text","text":"tree-based"},{"type":"text","text":" "},{"type":"text","text":"navigation"}],"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","overridingTitle":"tree-based navigation"},{"type":"text","text":" for more information on these tools):"}]},{"type":"codeListing","syntax":"swift","code":["@Reducer ","struct Feature {","  @ObservableState","  struct State {","    @Presents var child: ChildFeature.State?","    \/\/ ...","  }","  \/\/ ...","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then you can present a view controller when the child state flips to a non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" value by using the"},{"type":"text","text":" "},{"type":"codeVoice","code":"present(item:)"},{"type":"text","text":" API that comes with the library:"}]},{"type":"codeListing","syntax":"swift","code":["@UIBindable var store: StoreOf<Feature>","","func viewDidLoad() {","  super.viewDidLoad()","","  present(item: $store.scope(state: \\.child, action: \\.child)) { store in","    ChildViewController(store: store)","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Further, if your feature has a stack of features that can be presented, then you can model your"},{"type":"text","text":" "},{"type":"text","text":"domain like so (see the docs on "},{"overridingTitleInlineContent":[{"type":"text","text":"stack-based"}],"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","overridingTitle":"stack-based"},{"type":"text","text":" for more information"},{"type":"text","text":" "},{"type":"text","text":"on these tools):"}]},{"type":"codeListing","syntax":"swift","code":["@Reducer","struct AppFeature {","  struct State {","    var path = StackState<Path.State>()","    \/\/ ...","  }","","  @Reducer","  enum Path {","    case addItem(AddFeature)","    case detailItem(DetailFeature)","    case editItem(EditFeature)","  }","","  \/\/ ...","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"And for the view you can subclass "},{"type":"codeVoice","code":"NavigationStackController"},{"type":"text","text":" in order to drive navigation from the"},{"type":"text","text":" "},{"type":"text","text":"stack state:"}]},{"type":"codeListing","syntax":"swift","code":["class AppController: NavigationStackController {","  private var store: StoreOf<AppFeature>!","","  convenience init(store: StoreOf<AppFeature>) {","    @UIBindable var store = store","","    self.init(path: $store.scope(state: \\.path, action: \\.path)) {","      RootViewController(store: store)","    } destination: { store in ","      switch store.case {","      case .addItem(let store):","        AddViewController(store: store)","      case .detailItem(let store):","        DetailViewController(store: store)","      case .editItem(let store):","        EditViewController(store: store)","      }","    }","","    self.model = model","  }","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/migratingto1.13"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.13","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The Composable Architecture now provides first class tools for building features in UIKit,"},{"type":"text","text":" "},{"type":"text","text":"including minimal state observation, presentation and stack navigation."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Migrating to 1.13","role":"article","modules":[{"name":"ComposableArchitecture"}]},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.12","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.11","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.10","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.9","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.8","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.7","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.6","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.5","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.4"],"generated":true}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/dependency(_:)":{"role":"symbol","title":"dependency(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dependency"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"_DependencyKeyWritingReducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Places a value in the reducerâ€™s dependencies."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/reducer\/dependency(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TreeBasedNavigation":{"role":"article","title":"Tree-based navigation","abstract":[{"type":"text","text":"Learn about tree-based navigation, that is navigation modeled with optionals and enums, including"},{"type":"text","text":" "},{"type":"text","text":"how to model your domains, how to integrate features, how to test your features, and more."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/treebasednavigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Shared":{"role":"symbol","title":"Shared","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Shared"}],"abstract":[{"type":"text","text":"A property wrapper type that shares a value with multiple parts of an application."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Shared"}],"url":"\/documentation\/composablearchitecture\/shared"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore":{"deprecated":true,"role":"symbol","title":"ForEachStore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ForEachStore"}],"abstract":[{"type":"text","text":"A Composable Architecture-friendly wrapper around "},{"type":"codeVoice","code":"ForEach"},{"type":"text","text":" that simplifies working with"},{"type":"text","text":" "},{"type":"text","text":"collections of state."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ForEachStore"}],"url":"\/documentation\/composablearchitecture\/foreachstore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.12":{"role":"article","title":"Migrating to 1.12","abstract":[{"type":"text","text":"Take advantage of custom decoding and encoding logic for the shared file storage persistence"},{"type":"text","text":" "},{"type":"text","text":"strategy, as well as beta support for Swiftâ€™s native Testing framework."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.12","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.12"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Shared/withLock(_:)":{"role":"symbol","title":"withLock(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">(("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"}],"abstract":[{"type":"text","text":"Perform an operation on shared state with isolated access to the underlying value."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared\/withLock(_:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/shared\/withlock(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/WithViewStore":{"deprecated":true,"role":"symbol","title":"WithViewStore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WithViewStore"}],"abstract":[{"type":"text","text":"A view helper that transforms a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":" into a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"},{"type":"text","text":" so that its state can be observed"},{"type":"text","text":" "},{"type":"text","text":"by a view builder."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WithViewStore"}],"url":"\/documentation\/composablearchitecture\/withviewstore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FileStorageKey":{"role":"symbol","title":"FileStorageKey","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileStorageKey"}],"abstract":[{"type":"text","text":"A type defining a file persistence strategy"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FileStorageKey"}],"url":"\/documentation\/composablearchitecture\/filestoragekey"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.9":{"role":"article","title":"Migrating to 1.9","abstract":[{"type":"text","text":"Update your code to make use of the new "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/send(_:assert:fileID:file:line:column:)-8877x"},{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"method on "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"},{"type":"text","text":" which gives a succinct syntax for sending actions with case key paths, and"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:)"},{"type":"text","text":" method for overriding dependencies."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.9","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.9"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.10":{"role":"article","title":"Migrating to 1.10","abstract":[{"type":"text","text":"Update your code to make use of the new state sharing tools in the library, such as the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared"},{"type":"text","text":" "},{"type":"text","text":"property wrapper, and the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKey"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey"},{"type":"text","text":" persistence strategies."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.10","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.10"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/send(_:assert:fileID:file:line:column:)-8877x":{"role":"symbol","title":"send(_:assert:fileID:file:line:column:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"assert"},{"kind":"text","text":": (("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"TestStoreTask","preciseIdentifier":"s:22ComposableArchitecture13TestStoreTaskV"}],"abstract":[{"type":"text","text":"Sends an action to the store and asserts when state changes."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/send(_:assert:fileID:file:line:column:)-8877x","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/teststore\/send(_:assert:fileid:file:line:column:)-8877x"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKey":{"role":"symbol","title":"AppStorageKey","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AppStorageKey"}],"abstract":[{"type":"text","text":"A type defining a user defaults persistence strategy."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AppStorageKey"}],"url":"\/documentation\/composablearchitecture\/appstoragekey"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigrationGuides":{"role":"collectionGroup","title":"Migration guides","abstract":[{"type":"text","text":"Learn how to upgrade your application to the newest version of the Composable Architecture."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/migrationguides"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.7":{"role":"article","title":"Migrating to 1.7","abstract":[{"type":"text","text":"Update your code to make use of the new observation tools in the library and get rid of legacy"},{"type":"text","text":" "},{"type":"text","text":"APIs such as "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore"},{"type":"text","text":", and more."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.7","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.7"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"deprecated":true,"role":"symbol","title":"IfLetStore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IfLetStore"}],"abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}],"url":"\/documentation\/composablearchitecture\/ifletstore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"role":"symbol","title":"Store","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Store"}],"url":"\/documentation\/composablearchitecture\/store"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackBasedNavigation":{"role":"article","title":"Stack-based navigation","abstract":[{"type":"text","text":"Learn about stack-based navigation, that is navigation modeled with collections, including how to"},{"type":"text","text":" "},{"type":"text","text":"model your domains, how to integrate features, how to test your features, and more."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/stackbasednavigation"},"http://github.com/pointfreeco/swift-navigation":{"title":"Swift Navigation","titleInlineContent":[{"type":"text","text":"Swift Navigation"}],"type":"link","identifier":"http:\/\/github.com\/pointfreeco\/swift-navigation","url":"http:\/\/github.com\/pointfreeco\/swift-navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.4":{"role":"article","title":"Migrating to 1.4","abstract":[{"type":"text","text":"Update your code to make use of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()"},{"type":"text","text":" macro, and learn how to better leverage case key"},{"type":"text","text":" "},{"type":"text","text":"paths in your features."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.4","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.4"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.5":{"role":"article","title":"Migrating to 1.5","abstract":[{"type":"text","text":"Update your code to make use of the new "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255"},{"type":"text","text":" operation on "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":" "},{"type":"text","text":"in order to improve the performance of your features and simplify the usage of navigation APIs."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.5","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.5"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/receive(_:_:timeout:assert:fileID:file:line:column:)-9jd7x":{"role":"symbol","title":"receive(_:_:timeout:assert:fileID:file:line:column:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"receive"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:s8DurationV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"assert"},{"kind":"text","text":": (("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"abstract":[{"type":"text","text":"Asserts an action was received matching a case path with a specific payload, and asserts how"},{"type":"text","text":" "},{"type":"text","text":"the state changes."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/receive(_:_:timeout:assert:fileID:file:line:column:)-9jd7x","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/teststore\/receive(_:_:timeout:assert:fileid:file:line:column:)-9jd7x"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.6":{"role":"article","title":"Migrating to 1.6","abstract":[{"type":"text","text":"Update your code to make use of the new"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/receive(_:_:timeout:assert:fileID:file:line:column:)-9jd7x"},{"type":"text","text":" method when you need to"},{"type":"text","text":" "},{"type":"text","text":"assert on the payload inside an action received."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.6","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.6"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"role":"symbol","title":"TestStore","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestStore"}],"abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TestStore"}],"url":"\/documentation\/composablearchitecture\/teststore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.11":{"role":"article","title":"Migrating to 1.11","abstract":[{"type":"text","text":"Update your code to use the new "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared\/withLock(_:)"},{"type":"text","text":" method for mutating shared state from"},{"type":"text","text":" "},{"type":"text","text":"asynchronous contexts, rather than mutating the underlying wrapped value directly."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.11","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.11"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer()":{"role":"symbol","title":"Reducer()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Helps implement the conformance to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"},{"type":"text","text":" protocol for a type."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/reducer()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:action:)-90255":{"role":"symbol","title":"scope(state:action:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"scope"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ChildState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ChildAction"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildState"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildAction"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ChildState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildAction"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Scopes the store to one that exposes child state and actions."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/store\/scope(state:action:)-90255"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.8":{"role":"article","title":"Migrating to 1.8","abstract":[{"type":"text","text":"Update your code to make use of the new capabilities of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()"},{"type":"text","text":" macro, including automatic"},{"type":"text","text":" "},{"type":"text","text":"fulfillment of requirements for destination reducers and path reducers."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.8","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.8"}}}