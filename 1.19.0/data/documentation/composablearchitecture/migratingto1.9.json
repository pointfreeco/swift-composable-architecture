{"sections":[],"metadata":{"modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Article","title":"Migrating to 1.9","role":"article"},"primaryContentSections":[{"content":[{"level":2,"anchor":"Overview","text":"Overview","type":"heading"},{"inlineContent":[{"text":"The Composable Architecture is under constant development, and we are always looking for ways to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"simplify the library, and make it more powerful. As such, we often need to deprecate certain APIs"},{"text":" ","type":"text"},{"text":"in favor of newer ones. We recommend people update their code as quickly as possible to the newest","type":"text"},{"type":"text","text":" "},{"text":"APIs, and this article contains some tips for doing so.","type":"text"}],"type":"paragraph"},{"level":3,"text":"Sending test store actions","anchor":"Sending-test-store-actions","type":"heading"},{"inlineContent":[{"type":"text","text":"Version 1.4 of the library introduced the ability to receive test store actions using case key path"},{"text":" ","type":"text"},{"type":"text","text":"syntax, massively simplifying how one asserts on actions received in a test:"}],"type":"paragraph"},{"syntax":"diff","code":["-store.receive(.child(.presented(.response(.success(\"Hello\")))))","+store.receive(\\.child.response.success)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"While version 1.6 of the library introduced the ability to assert against the payload of a received"},{"type":"text","text":" "},{"type":"text","text":"action:"}]},{"type":"codeListing","syntax":"swift","code":["store.receive(\\.child.presented.success, \"Hello\")"]},{"type":"paragraph","inlineContent":[{"text":"Version 1.9 introduces similar affordances for ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"sending"}]},{"type":"text","text":" actions to test stores via"},{"type":"text","text":" "},{"type":"codeVoice","code":"TestStore\/send(_:assert:fileID:file:line:column:)-8877x"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/send(_:_:assert:fileID:file:line:column:)","isActive":true},{"text":". These methods can significantly simplify","type":"text"},{"type":"text","text":" "},{"text":"integration-style tests that send deeply-nested actions to child features, and provide symmetry to","type":"text"},{"type":"text","text":" "},{"text":"how actions are received:","type":"text"}]},{"code":["-store.send(.path(.element(id: 0, action: .destination(.presented(.record(.startButtonTapped))))))","+store.send(\\.path[id: 0].destination.record.startButtonTapped)"," store.receive(\\.path[id: 0].destination.record.timerTick)"],"type":"codeListing","syntax":"diff"},{"style":"tip","type":"aside","content":[{"inlineContent":[{"text":"Case key paths offer specialized syntax for many different action types.","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","isActive":true,"type":"reference"},{"text":"â€™s ","type":"text"},{"type":"codeVoice","code":"presented"},{"type":"text","text":" case can be collapsed:"}],"type":"paragraph"},{"type":"codeListing","syntax":"diff","code":["-store.send(.destination(.presented(.tap)))","+store.send(\\.destination.tap)"]}]},{"content":[{"inlineContent":[{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction","isActive":true,"type":"reference"},{"text":" and ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction"},{"type":"text","text":" can be subscripted into:"}],"type":"paragraph"},{"code":["-store.send(.path(.element(id: 0, action: .tap)))","+store.send(\\.path[id: 0].tap)"],"syntax":"diff","type":"codeListing"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"And ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction"},{"type":"text","text":"s can dynamically chain into a key path of state:"}]},{"code":["-store.send(.binding(.set(\\.firstName, \"Blob\")))","+store.send(\\.binding.firstName, \"Blob\")"],"type":"codeListing","syntax":"diff"}]}]},{"inlineContent":[{"text":"Together, these helpers can massively simplify asserting against nested actions:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"diff","code":["-store.send(","-  .path(","-    .element(","-      id: 0,","-      action: .destination(","-        .presented(","-          .sheet(","-            .binding(","-              .set(\\.password, \"blobisawesome\")","-            )","-          )","-        )","-      )","-    )","-  )","-)","+store.send(\\.path[id: 0].destination.sheet.binding.password, \"blobisawesome\")"]}],"name":"Tip"},{"anchor":"Overriding-dependencies","text":"Overriding dependencies","type":"heading","level":3},{"inlineContent":[{"text":"Version 1.2 of ","type":"text"},{"isActive":true,"type":"reference","identifier":"http:\/\/github.com\/pointfreeco\/swift-dependencies"},{"type":"text","text":" introduced an"},{"type":"text","text":" "},{"type":"text","text":"alternative syntax for referencing a dependency:"}],"type":"paragraph"},{"type":"codeListing","syntax":"diff","code":["-@Dependency(\\.apiClient) var apiClient","+@Dependency(APIClient.self) var apiClient"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The primary benefit of this syntax is that you do not need to define a dedicated computed property"},{"type":"text","text":" "},{"text":"on ","type":"text"},{"type":"codeVoice","code":"DependencyValues"},{"type":"text","text":", which saves a small amount of boilerplate."}]},{"inlineContent":[{"text":"There is now a similar API for overriding dependencies on a reducer, ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:)","isActive":true,"type":"reference"},{"text":",","type":"text"},{"type":"text","text":" "},{"text":"which can be used like so:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["MyFeature()","  .dependency(mockAPIClient)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The type of "},{"code":"mockAPIClient","type":"codeVoice"},{"type":"text","text":" determines how the dependency is overridden."}]},{"inlineContent":[{"type":"text","text":"This style of accessing and overriding dependencies is really only appropriate for dependencies"},{"type":"text","text":" "},{"type":"text","text":"defined directly in your project. If you are shipping a dependency client that is used by others,"},{"type":"text","text":" "},{"text":"then still prefer adding a computed property to ","type":"text"},{"code":"DependencyValues","type":"codeVoice"},{"type":"text","text":" in order to be more discoverable."}],"type":"paragraph"}],"kind":"content"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.9","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Update your code to make use of the new ","type":"text"},{"code":"TestStore\/send(_:assert:fileID:file:line:column:)-8877x","type":"codeVoice"},{"type":"text","text":""},{"text":" ","type":"text"},{"type":"text","text":"method on "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","type":"reference","isActive":true},{"text":" which gives a succinct syntax for sending actions with case key paths, and","type":"text"},{"type":"text","text":" "},{"text":"the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:)","type":"reference"},{"text":" method for overriding dependencies.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.19","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.18","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.17.1","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.17","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.16","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.15","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.14","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.13","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.12","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.11","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.10","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.8","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.7","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.6","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.5","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.4"],"generated":true}],"variants":[{"paths":["\/documentation\/composablearchitecture\/migratingto1.9"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"article","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackAction":{"navigatorTitle":[{"text":"StackAction","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A wrapper type for actions that can be presented in a navigation stack."}],"title":"StackAction","url":"\/documentation\/composablearchitecture\/stackaction","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StackAction","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.12":{"abstract":[{"text":"Take advantage of custom decoding and encoding logic for the shared file storage persistence","type":"text"},{"type":"text","text":" "},{"type":"text","text":"strategy, as well as beta support for Swiftâ€™s native Testing framework."}],"type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.12","kind":"article","role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.12","title":"Migrating to 1.12"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.17.1":{"abstract":[{"text":"The Sharing library has graduated, with backwards-incompatible changes, to 2.0, and the Composable","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Architecture has been updated to extend support to this new version."}],"type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.17.1","kind":"article","role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.17.1","title":"Migrating to 1.17.1"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigrationGuides":{"abstract":[{"text":"Learn how to upgrade your application to the newest version of the Composable Architecture.","type":"text"}],"type":"topic","url":"\/documentation\/composablearchitecture\/migrationguides","kind":"article","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides","title":"Migration guides"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.8":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.8","url":"\/documentation\/composablearchitecture\/migratingto1.8","role":"article","type":"topic","abstract":[{"text":"Update your code to make use of the new capabilities of the ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","type":"reference","isActive":true},{"type":"text","text":" macro, including automatic"},{"type":"text","text":" "},{"text":"fulfillment of requirements for destination reducers and path reducers.","type":"text"}],"title":"Migrating to 1.8","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","url":"\/documentation\/composablearchitecture\/foreachstore","deprecated":true,"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ForEachStore"}],"abstract":[{"text":"A Composable Architecture-friendly wrapper around ","type":"text"},{"type":"codeVoice","code":"ForEach"},{"type":"text","text":" that simplifies working with"},{"text":" ","type":"text"},{"type":"text","text":"collections of state."}],"kind":"symbol","role":"symbol","type":"topic","navigatorTitle":[{"text":"ForEachStore","kind":"identifier"}],"title":"ForEachStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/WithViewStore":{"abstract":[{"text":"A view helper that transforms a ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true},{"type":"text","text":" into a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"},{"type":"text","text":" so that its state can be observed"},{"type":"text","text":" "},{"type":"text","text":"by a view builder."}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","title":"WithViewStore","deprecated":true,"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"WithViewStore"}],"url":"\/documentation\/composablearchitecture\/withviewstore","role":"symbol","navigatorTitle":[{"text":"WithViewStore","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.4":{"abstract":[{"text":"Update your code to make use of the ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","type":"reference","isActive":true},{"type":"text","text":" macro, and learn how to better leverage case key"},{"type":"text","text":" "},{"text":"paths in your features.","type":"text"}],"type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.4","kind":"article","role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.4","title":"Migrating to 1.4"},"http://github.com/pointfreeco/swift-dependencies":{"type":"link","title":"swift-dependencies","titleInlineContent":[{"type":"text","text":"swift-dependencies"}],"identifier":"http:\/\/github.com\/pointfreeco\/swift-dependencies","url":"http:\/\/github.com\/pointfreeco\/swift-dependencies"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TestStore"}],"type":"topic","url":"\/documentation\/composablearchitecture\/teststore","kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","title":"TestStore","navigatorTitle":[{"text":"TestStore","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingAction":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BindingAction","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","type":"topic","kind":"symbol","navigatorTitle":[{"text":"BindingAction","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/bindingaction","abstract":[{"type":"text","text":"An action that describes simple mutations to some root state at a writable key path."}],"title":"BindingAction"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:action:)-90255":{"role":"symbol","abstract":[{"text":"Scopes the store to one that exposes child state and actions.","type":"text"}],"url":"\/documentation\/composablearchitecture\/store\/scope(state:action:)-90255","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scope","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ChildState"},{"kind":"text","text":", "},{"text":"ChildAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"state","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"text":"ChildState","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"action","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"ChildState"},{"kind":"text","text":", "},{"text":"ChildAction","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic","title":"scope(state:action:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","title":"Store","abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"kind":"symbol","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"url":"\/documentation\/composablearchitecture\/store","navigatorTitle":[{"kind":"identifier","text":"Store"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction":{"type":"topic","url":"\/documentation\/composablearchitecture\/presentationaction","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","navigatorTitle":[{"text":"PresentationAction","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"PresentationAction","kind":"identifier"}],"kind":"symbol","title":"PresentationAction","abstract":[{"text":"A wrapper type for actions that can be presented.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.19":{"abstract":[{"text":"Store internals have been rewritten for performance and future features, and are now compatible with","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUIâ€™s "},{"type":"codeVoice","code":"@StateObject"},{"text":" property wrapper.","type":"text"}],"type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.19","kind":"article","role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.19","title":"Migrating to 1.19"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.10":{"abstract":[{"text":"Update your code to make use of the new state sharing tools in the library, such as the ","type":"text"},{"type":"codeVoice","code":"Shared"},{"type":"text","text":" "},{"type":"text","text":"property wrapper, and the "},{"type":"codeVoice","code":"appStorage"},{"text":" and ","type":"text"},{"code":"fileStorage","type":"codeVoice"},{"type":"text","text":" persistence strategies."}],"type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.10","kind":"article","role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.10","title":"Migrating to 1.10"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/dependency(_:)":{"abstract":[{"text":"Places a value in the reducerâ€™s dependencies.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dependency","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","url":"\/documentation\/composablearchitecture\/reducer\/dependency(_:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:)","title":"dependency(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.14":{"role":"article","abstract":[{"text":"The ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","type":"reference","isActive":true},{"type":"text","text":" type is now officially "},{"type":"codeVoice","code":"@MainActor"},{"text":" isolated.","type":"text"}],"url":"\/documentation\/composablearchitecture\/migratingto1.14","type":"topic","title":"Migrating to 1.14","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.14","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.5":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.5","url":"\/documentation\/composablearchitecture\/migratingto1.5","role":"article","type":"topic","abstract":[{"text":"Update your code to make use of the new ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","type":"reference","isActive":true},{"type":"text","text":" operation on "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true},{"text":" ","type":"text"},{"text":"in order to improve the performance of your features and simplify the usage of navigation APIs.","type":"text"}],"title":"Migrating to 1.5","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.11":{"role":"article","abstract":[{"text":"Update your code to use the new ","type":"text"},{"type":"codeVoice","code":"withLock"},{"type":"text","text":" method for mutating shared state from asynchronous"},{"type":"text","text":" "},{"text":"contexts, rather than mutating the underlying wrapped value directly.","type":"text"}],"url":"\/documentation\/composablearchitecture\/migratingto1.11","type":"topic","title":"Migrating to 1.11","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.11","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"kind":"symbol","title":"ComposableArchitecture","type":"topic","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.6":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.6","abstract":[{"text":"Update your code to make use of the new","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"TestStore\/receive(_:_:timeout:assert:fileID:file:line:column:)-9jd7x"},{"type":"text","text":" method when you need to"},{"text":" ","type":"text"},{"text":"assert on the payload inside an action received.","type":"text"}],"role":"article","kind":"article","type":"topic","title":"Migrating to 1.6","url":"\/documentation\/composablearchitecture\/migratingto1.6"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer()":{"url":"\/documentation\/composablearchitecture\/reducer()","abstract":[{"text":"Helps implement the conformance to the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","type":"reference"},{"type":"text","text":" protocol for a type."}],"role":"symbol","title":"Reducer()","type":"topic","kind":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Reducer"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.17":{"abstract":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"@Shared"},{"type":"text","text":" property wrapper and related tools have been extracted to their own"},{"type":"text","text":" "},{"text":"library so that they can be used in non-Composable Architecture applications. This a","type":"text"},{"text":" ","type":"text"},{"text":"backwards compatible change, but some new deprecations have been introduced.","type":"text"}],"type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.17","kind":"article","role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.17","title":"Migrating to 1.17"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.15":{"abstract":[{"text":"The library has been completely updated for Swift 6 language mode, and now compiles in strict","type":"text"},{"type":"text","text":" "},{"type":"text","text":"concurrency with no warnings or errors."}],"type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.15","kind":"article","role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.15","title":"Migrating to 1.15"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.18":{"role":"article","abstract":[{"text":"Stores now automatically cancel their in-flight effects when they deallocate. And another UIKit","type":"text"},{"type":"text","text":" "},{"type":"text","text":"navigation helper has been introduced."}],"url":"\/documentation\/composablearchitecture\/migratingto1.18","type":"topic","title":"Migrating to 1.18","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.18","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"kind":"symbol","title":"IfLetStore","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IfLetStore"}],"navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}],"deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","url":"\/documentation\/composablearchitecture\/ifletstore","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.16":{"abstract":[{"text":"The ","type":"text"},{"type":"codeVoice","code":".appStorage"},{"type":"text","text":" strategy used with "},{"type":"codeVoice","code":"@Shared"},{"text":" now uses key-value observing instead of","type":"text"},{"text":" ","type":"text"},{"code":"NotificationCenter","type":"codeVoice"},{"type":"text","text":" when possible. Learn how this may affect your code."}],"type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.16","kind":"article","role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.16","title":"Migrating to 1.16"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/send(_:_:assert:fileID:file:line:column:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/send(_:_:assert:fileID:file:line:column:)","role":"symbol","conformance":{"constraints":[{"code":"State","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"send(_:_:assert:fileID:file:line:column:)","url":"\/documentation\/composablearchitecture\/teststore\/send(_:_:assert:fileid:file:line:column:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":">, ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"assert","kind":"externalParam"},{"kind":"text","text":": (("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?, "},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"file"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"text":"TestStoreTask","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture13TestStoreTaskV"}],"kind":"symbol","abstract":[{"text":"Sends an action to the store and asserts when state changes.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedAction":{"navigatorTitle":[{"text":"IdentifiedAction","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A wrapper type for actions that can be presented in a list."}],"title":"IdentifiedAction","url":"\/documentation\/composablearchitecture\/identifiedaction","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IdentifiedAction","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.7":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.7","type":"topic","role":"article","url":"\/documentation\/composablearchitecture\/migratingto1.7","title":"Migrating to 1.7","kind":"article","abstract":[{"type":"text","text":"Update your code to make use of the new observation tools in the library and get rid of legacy"},{"text":" ","type":"text"},{"type":"text","text":"APIs such as "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","type":"reference","isActive":true},{"text":", ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore"},{"type":"text","text":", "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","isActive":true},{"text":", and more.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.13":{"abstract":[{"text":"The Composable Architecture now provides first class tools for building features in UIKit,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"including minimal state observation, presentation and stack navigation."}],"type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.13","kind":"article","role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.13","title":"Migrating to 1.13"}}}