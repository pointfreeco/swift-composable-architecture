{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fontDesign","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"design"},{"text":": ","kind":"text"},{"text":"Font","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4FontV"},{"kind":"text","text":"."},{"text":"Design","preciseIdentifier":"s:7SwiftUI4FontV6DesignO","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":"\n"}],"platforms":["macOS"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/fontdesign(_:)"]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/fontDesign(_:)","interfaceLanguage":"swift"},"metadata":{"platforms":[{"beta":false,"deprecated":false,"unavailable":false,"name":"iOS","introducedAt":"16.1"},{"unavailable":false,"beta":false,"name":"macOS","deprecated":false,"introducedAt":"13.0"},{"introducedAt":"16.1","deprecated":false,"name":"tvOS","beta":false,"unavailable":false},{"beta":false,"unavailable":false,"deprecated":false,"introducedAt":"9.1","name":"watchOS"}],"modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fontDesign"},{"kind":"text","text":"("},{"text":"Font","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4FontV"},{"text":".","kind":"text"},{"text":"Design","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4FontV6DesignO"},{"text":"?) -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"extendedModule":"SwiftUICore","externalID":"s:7SwiftUI4ViewPAAE10fontDesignyQrAA4FontV0E0OSgF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","title":"fontDesign(_:)","symbolKind":"method","roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","abstract":[{"type":"text","text":"Inherited from "},{"code":"View.fontDesign(_:)","type":"codeVoice"},{"text":".","type":"text"}],"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","title":"SwiftUI Integration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"role":"collectionGroup","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","abstract":[],"type":"topic","title":"View Implementations","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article","title":"Deprecations","url":"\/documentation\/composablearchitecture\/swiftuideprecations","type":"topic","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/fontDesign(_:)":{"url":"\/documentation\/composablearchitecture\/ifletstore\/fontdesign(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"fontDesign","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4FontV","text":"Font"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4FontV6DesignO","text":"Design"},{"text":"?) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"type":"topic","title":"fontDesign(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/fontDesign(_:)","role":"symbol","kind":"symbol","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","title":"ComposableArchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","role":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IfLetStore"}],"navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"abstract":[{"text":"A view that safely unwraps a store of optional state in order to show one of two views.","type":"text"}],"type":"topic","title":"IfLetStore","deprecated":true,"kind":"symbol"}}}