{"variants":[{"paths":["\/documentation\/composablearchitecture\/ifletstore\/chartlinestylescale(range:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"chartLineStyleScale"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Range"},{"kind":"text","text":">("},{"kind":"externalParam","text":"range"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Range"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Range","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Charts10ScaleRangeP","text":"ScaleRange"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Range"},{"text":".","kind":"text"},{"text":"VisualValue","kind":"typeIdentifier","preciseIdentifier":"s:6Charts10ScaleRangeP11VisualValueQa"},{"text":" == ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI11StrokeStyleV","text":"StrokeStyle","kind":"typeIdentifier"},{"text":"\n","kind":"text"}]}]}],"metadata":{"role":"symbol","platforms":[{"deprecated":false,"unavailable":false,"introducedAt":"16.0","beta":false,"name":"iOS"},{"introducedAt":"13.0","name":"macOS","unavailable":false,"beta":false,"deprecated":false},{"deprecated":false,"beta":false,"name":"tvOS","introducedAt":"16.0","unavailable":false},{"introducedAt":"9.0","beta":false,"unavailable":false,"name":"watchOS","deprecated":false}],"title":"chartLineStyleScale(range:)","externalID":"s:7SwiftUI4ViewP6ChartsE19chartLineStyleScale5rangeQrqd___tAD0H5RangeRd__AA06StrokeG0V11VisualValueRtd__lF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","symbolKind":"method","roleHeading":"Instance Method","modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"extendedModule":"SwiftUICore","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"chartLineStyleScale"},{"text":"<","kind":"text"},{"text":"Range","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"range","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Range","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}]},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.chartLineStyleScale(range:)"},{"type":"text","text":"."}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/chartLineStyleScale(range:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/chartLineStyleScale(range:)":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/chartLineStyleScale(range:)","title":"chartLineStyleScale(range:)","url":"\/documentation\/composablearchitecture\/ifletstore\/chartlinestylescale(range:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"chartLineStyleScale","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Range","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"range","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Range","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"abstract":[],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","abstract":[],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","type":"topic","title":"View Implementations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"type":"topic","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuideprecations","title":"Deprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","kind":"symbol","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"type":"topic","kind":"article","title":"SwiftUI Integration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"IfLetStore","kind":"identifier"}],"title":"IfLetStore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}],"url":"\/documentation\/composablearchitecture\/ifletstore","deprecated":true,"type":"topic"}}}