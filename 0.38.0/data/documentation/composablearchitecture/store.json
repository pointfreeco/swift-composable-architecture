{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"State"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Action"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You will typically construct a single one of these at the root of your application, and then use"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)"},{"type":"text","text":" method to derive more focused stores that can be passed to"},{"type":"text","text":" "},{"type":"text","text":"subviews:"}]},{"type":"codeListing","syntax":"swift","code":["@main","struct MyApp: App {","  var body: some Scene {","    WindowGroup {","      RootView(","        store: Store(","          initialState: AppState(),","          reducer: appReducer,","          environment: AppEnvironment(","            ...","          )","        )","      )","    }","  }","}"]},{"anchor":"Scoping","level":3,"type":"heading","text":"Scoping"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The most important operation defined on "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":" is the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)"},{"type":"text","text":" method, which"},{"type":"text","text":" "},{"type":"text","text":"allows you to transform a store into one that deals with local state and actions. This is"},{"type":"text","text":" "},{"type":"text","text":"necessary for passing stores to subviews that only care about a small portion of the entire"},{"type":"text","text":" "},{"type":"text","text":"application’s domain."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, if an application has a tab view at its root with tabs for activity, search, and"},{"type":"text","text":" "},{"type":"text","text":"profile, then we can model the domain like this:"}]},{"type":"codeListing","syntax":"swift","code":["struct AppState {","  var activity: ActivityState","  var profile: ProfileState","  var search: SearchState","}","","enum AppAction {","  case activity(ActivityAction)","  case profile(ProfileAction)","  case search(SearchAction)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"We can construct a view for each of these domains by applying "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)"},{"type":"text","text":" to a"},{"type":"text","text":" "},{"type":"text","text":"store that holds onto the full app domain in order to transform it into a store for each"},{"type":"text","text":" "},{"type":"text","text":"sub-domain:"}]},{"type":"codeListing","syntax":"swift","code":["struct AppView: View {","  let store: Store<AppState, AppAction>","","  var body: some View {","    TabView {","      ActivityView(store: self.store.scope(state: \\.activity, action: AppAction.activity))","        .tabItem { Text(\"Activity\") }","","      SearchView(store: self.store.scope(state: \\.search, action: AppAction.search))","        .tabItem { Text(\"Search\") }","","      ProfileView(store: self.store.scope(state: \\.profile, action: AppAction.profile))","        .tabItem { Text(\"Profile\") }","    }","  }","}"]},{"anchor":"Thread-safety","level":3,"type":"heading","text":"Thread safety"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Store"},{"type":"text","text":" class is not thread-safe, and so all interactions with an instance of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":" "},{"type":"text","text":"(including all of its scopes and derived "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"},{"type":"text","text":"s) must be done on the same thread the"},{"type":"text","text":" "},{"type":"text","text":"store was created on. Further, if the store is powering a SwiftUI or UIKit view, as is"},{"type":"text","text":" "},{"type":"text","text":"customary, then all interactions must be done on the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"main"}]},{"type":"text","text":" thread."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The reason stores are not thread-safe is due to the fact that when an action is sent to a store,"},{"type":"text","text":" "},{"type":"text","text":"a reducer is run on the current state, and this process cannot be done from multiple threads."},{"type":"text","text":" "},{"type":"text","text":"It is possible to make this process thread-safe by introducing locks or queues, but this"},{"type":"text","text":" "},{"type":"text","text":"introduces new complications:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If done simply with "},{"type":"codeVoice","code":"DispatchQueue.main.async"},{"type":"text","text":" you will incur a thread hop even when you are"},{"type":"text","text":" "},{"type":"text","text":"already on the main thread. This can lead to unexpected behavior in UIKit and SwiftUI, where"},{"type":"text","text":" "},{"type":"text","text":"sometimes you are required to do work synchronously, such as in animation blocks."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"It is possible to create a scheduler that performs its work immediately when on the main"},{"type":"text","text":" "},{"type":"text","text":"thread and otherwise uses "},{"type":"codeVoice","code":"DispatchQueue.main.async"},{"type":"text","text":" ("},{"type":"emphasis","inlineContent":[{"type":"text","text":"e.g."}]},{"type":"text","text":", see Combine Schedulers’"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/pointfreeco\/combine-schedulers\/blob\/main\/Sources\/CombineSchedulers\/UIScheduler.swift"},{"type":"text","text":")."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This introduces a lot more complexity, and should probably not be adopted without having a very"},{"type":"text","text":" "},{"type":"text","text":"good reason."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is why we require all actions be sent from the same thread. This requirement is in the same"},{"type":"text","text":" "},{"type":"text","text":"spirit of how "},{"type":"codeVoice","code":"URLSession"},{"type":"text","text":" and other Apple APIs are designed. Those APIs tend to deliver their"},{"type":"text","text":" "},{"type":"text","text":"outputs on whatever thread is most convenient for them, and then it is your responsibility to"},{"type":"text","text":" "},{"type":"text","text":"dispatch back to the main queue if that’s what you need. The Composable Architecture makes you"},{"type":"text","text":" "},{"type":"text","text":"responsible for making sure to send actions on the main thread. If you are using an effect that"},{"type":"text","text":" "},{"type":"text","text":"may deliver its output on a non-main thread, you must explicitly perform "},{"type":"codeVoice","code":".receive(on:)"},{"type":"text","text":" in"},{"type":"text","text":" "},{"type":"text","text":"order to force it back on the main thread."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This approach makes the fewest number of assumptions about how effects are created and"},{"type":"text","text":" "},{"type":"text","text":"transformed, and prevents unnecessary thread hops and re-dispatching. It also provides some"},{"type":"text","text":" "},{"type":"text","text":"testing benefits. If your effects are not responsible for their own scheduling, then in tests"},{"type":"text","text":" "},{"type":"text","text":"all of the effects would run synchronously and immediately. You would not be able to test how"},{"type":"text","text":" "},{"type":"text","text":"multiple in-flight effects interleave with each other and affect the state of your application."},{"type":"text","text":" "},{"type":"text","text":"However, by leaving scheduling out of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":" we get to test these aspects of our effects"},{"type":"text","text":" "},{"type":"text","text":"if we so desire, or we can ignore if we prefer. We have that flexibility."}]},{"anchor":"Thread-safety-checks","level":4,"type":"heading","text":"Thread safety checks"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The store performs some basic thread safety checks in order to help catch mistakes. Stores"},{"type":"text","text":" "},{"type":"text","text":"constructed via the initializer "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/init(initialState:reducer:environment:)"},{"type":"text","text":" are assumed"},{"type":"text","text":" "},{"type":"text","text":"to run only on the main thread, and so a check is executed immediately to make sure that is the"},{"type":"text","text":" "},{"type":"text","text":"case. Further, all actions sent to the store and all scopes (see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)"},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"of the store are also checked to make sure that work is performed on the main thread."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you need a store that runs on a non-main thread, which should be very rare and you should"},{"type":"text","text":" "},{"type":"text","text":"have a very good reason to do so, then you can construct a store via the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/unchecked(initialState:reducer:environment:)"},{"type":"text","text":" static method to opt out of all main"},{"type":"text","text":" "},{"type":"text","text":"thread checks."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"See also: "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"},{"type":"text","text":" to understand how one observes changes to the state in a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"text","text":"sends user actions."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/store"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"title":"Store","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:22ComposableArchitecture5StoreC","modules":[{"name":"ComposableArchitecture"}],"navigatorTitle":[{"kind":"identifier","text":"Store"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/init(initialState:reducer:environment:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/actionless","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/stateless"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/ifLet(then:else:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/publisherScope(state:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/publisherScope(state:action:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)"]},{"title":"Type Methods","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/unchecked(initialState:reducer:environment:)"]}],"references":{"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/Store/ifLet(then:else:)":{"role":"symbol","title":"ifLet(then:else:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"ifLet"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Wrapped"},{"kind":"text","text":">("},{"kind":"externalParam","text":"then"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Wrapped","preciseIdentifier":"s:22ComposableArchitecture5StoreC5ifLet4then4else7Combine11Cancellable_pyACyqd__q_Gc_yyctqd__SgRszlF7WrappedL_qd__mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:22ComposableArchitecture5StoreC6Actionq_mfp"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":", "},{"kind":"externalParam","text":"else"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Cancellable","preciseIdentifier":"s:7Combine11CancellableP"}],"abstract":[{"type":"text","text":"Calls one of two closures depending on whether a store’s optional state is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" or not, and"},{"type":"text","text":" "},{"type":"text","text":"whenever this condition changes for as long as the cancellable lives."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/ifLet(then:else:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/store\/iflet(then:else:)"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/Store":{"role":"symbol","title":"Store","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Store"}],"url":"\/documentation\/composablearchitecture\/store"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/Store/publisherScope(state:action:)":{"role":"symbol","title":"publisherScope(state:action:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"publisherScope"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"LocalState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"LocalAction"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"AnyPublisher","preciseIdentifier":"s:7Combine12AnyPublisherV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:22ComposableArchitecture5StoreC5Statexmfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"P","preciseIdentifier":"s:22ComposableArchitecture5StoreC14publisherScope5state6action7Combine12AnyPublisherVyACyqd_0_qd_1_Gs5NeverOGqd__AIyxALGc_q_qd_1_ctAG0J0Rd__6OutputQyd__Rsd_0_AL7FailureRtd__r1_lF1PL_qd__mfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"LocalAction","preciseIdentifier":"s:22ComposableArchitecture5StoreC14publisherScope5state6action7Combine12AnyPublisherVyACyqd_0_qd_1_Gs5NeverOGqd__AIyxALGc_q_qd_1_ctAG0J0Rd__6OutputQyd__Rsd_0_AL7FailureRtd__r1_lF11LocalActionL_qd_1_mfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:22ComposableArchitecture5StoreC6Actionq_mfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AnyPublisher","preciseIdentifier":"s:7Combine12AnyPublisherV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"LocalState","preciseIdentifier":"s:22ComposableArchitecture5StoreC14publisherScope5state6action7Combine12AnyPublisherVyACyqd_0_qd_1_Gs5NeverOGqd__AIyxALGc_q_qd_1_ctAG0J0Rd__6OutputQyd__Rsd_0_AL7FailureRtd__r1_lF10LocalStateL_qd_0_mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"LocalAction","preciseIdentifier":"s:22ComposableArchitecture5StoreC14publisherScope5state6action7Combine12AnyPublisherVyACyqd_0_qd_1_Gs5NeverOGqd__AIyxALGc_q_qd_1_ctAG0J0Rd__6OutputQyd__Rsd_0_AL7FailureRtd__r1_lF11LocalActionL_qd_1_mfp"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/publisherScope(state:action:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/composablearchitecture\/store\/publisherscope(state:action:)"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/Store/unchecked(initialState:reducer:environment:)":{"role":"symbol","title":"unchecked(initialState:reducer:environment:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unchecked"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Environment"},{"kind":"text","text":">("},{"kind":"externalParam","text":"initialState"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:22ComposableArchitecture5StoreC5Statexmfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"reducer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Reducer","preciseIdentifier":"s:22ComposableArchitecture7ReducerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:22ComposableArchitecture5StoreC5Statexmfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:22ComposableArchitecture5StoreC6Actionq_mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Environment","preciseIdentifier":"s:22ComposableArchitecture5StoreC9unchecked12initialState7reducer11environmentACyxq_GXDx_AA7ReducerVyxq_qd__Gqd__tlFZ11EnvironmentL_qd__mfp"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"environment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Environment","preciseIdentifier":"s:22ComposableArchitecture5StoreC9unchecked12initialState7reducer11environmentACyxq_GXDx_AA7ReducerVyxq_qd__Gqd__tlFZ11EnvironmentL_qd__mfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Initializes a store from an initial state, a reducer, and an environment, and the main thread"},{"type":"text","text":" "},{"type":"text","text":"check is disabled for all interactions with this store."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/unchecked(initialState:reducer:environment:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/store\/unchecked(initialstate:reducer:environment:)"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/Store/init(initialState:reducer:environment:)":{"role":"symbol","title":"init(initialState:reducer:environment:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Environment"},{"kind":"text","text":">("},{"kind":"externalParam","text":"initialState"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:22ComposableArchitecture5StoreC5Statexmfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"reducer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Reducer","preciseIdentifier":"s:22ComposableArchitecture7ReducerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:22ComposableArchitecture5StoreC5Statexmfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:22ComposableArchitecture5StoreC6Actionq_mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Environment","preciseIdentifier":"s:22ComposableArchitecture5StoreC12initialState7reducer11environmentACyxq_Gx_AA7ReducerVyxq_qd__Gqd__tclufc11EnvironmentL_qd__mfp"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"environment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Environment","preciseIdentifier":"s:22ComposableArchitecture5StoreC12initialState7reducer11environmentACyxq_Gx_AA7ReducerVyxq_qd__Gqd__tclufc11EnvironmentL_qd__mfp"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Initializes a store from an initial state, a reducer, and an environment."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/init(initialState:reducer:environment:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/store\/init(initialstate:reducer:environment:)"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/Store/actionless":{"role":"symbol","title":"actionless","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"actionless"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:22ComposableArchitecture5StoreC5Statexmfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns an “actionless” store by erasing action to "},{"type":"codeVoice","code":"Never"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/actionless","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/store\/actionless"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/Store/publisherScope(state:)":{"role":"symbol","title":"publisherScope(state:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"publisherScope"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"LocalState"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"AnyPublisher","preciseIdentifier":"s:7Combine12AnyPublisherV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:22ComposableArchitecture5StoreC5Statexmfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"P","preciseIdentifier":"s:22ComposableArchitecture5StoreC14publisherScope5state7Combine12AnyPublisherVyACyqd_0_q_Gs5NeverOGqd__AHyxAKGc_tAF0I0Rd__6OutputQyd__Rsd_0_AK7FailureRtd__r0_lF1PL_qd__mfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AnyPublisher","preciseIdentifier":"s:7Combine12AnyPublisherV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"LocalState","preciseIdentifier":"s:22ComposableArchitecture5StoreC14publisherScope5state7Combine12AnyPublisherVyACyqd_0_q_Gs5NeverOGqd__AHyxAKGc_tAF0I0Rd__6OutputQyd__Rsd_0_AK7FailureRtd__r0_lF10LocalStateL_qd_0_mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:22ComposableArchitecture5StoreC6Actionq_mfp"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/publisherScope(state:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/composablearchitecture\/store\/publisherscope(state:)"},"https://github.com/pointfreeco/combine-schedulers/blob/main/Sources/CombineSchedulers/UIScheduler.swift":{"title":"UIScheduler","titleInlineContent":[{"type":"text","text":"UIScheduler"}],"type":"link","identifier":"https:\/\/github.com\/pointfreeco\/combine-schedulers\/blob\/main\/Sources\/CombineSchedulers\/UIScheduler.swift","url":"https:\/\/github.com\/pointfreeco\/combine-schedulers\/blob\/main\/Sources\/CombineSchedulers\/UIScheduler.swift"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/Store/stateless":{"role":"symbol","title":"stateless","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"stateless"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:22ComposableArchitecture5StoreC6Actionq_mfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns a “stateless” store by erasing state to "},{"type":"codeVoice","code":"Void"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/stateless","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/store\/stateless"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:)":{"role":"symbol","title":"scope(state:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"scope"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"LocalState"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:22ComposableArchitecture5StoreC5Statexmfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LocalState","preciseIdentifier":"s:22ComposableArchitecture5StoreC5scope5stateACyqd__q_Gqd__xc_tlF10LocalStateL_qd__mfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"LocalState","preciseIdentifier":"s:22ComposableArchitecture5StoreC5scope5stateACyqd__q_Gqd__xc_tlF10LocalStateL_qd__mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:22ComposableArchitecture5StoreC6Actionq_mfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Scopes the store to one that exposes local state."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/store\/scope(state:)"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:action:)":{"role":"symbol","title":"scope(state:action:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"scope"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"LocalState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"LocalAction"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:22ComposableArchitecture5StoreC5Statexmfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LocalState","preciseIdentifier":"s:22ComposableArchitecture5StoreC5scope5state6actionACyqd__qd_0_Gqd__xc_q_qd_0_ctr0_lF10LocalStateL_qd__mfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"LocalAction","preciseIdentifier":"s:22ComposableArchitecture5StoreC5scope5state6actionACyqd__qd_0_Gqd__xc_q_qd_0_ctr0_lF11LocalActionL_qd_0_mfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:22ComposableArchitecture5StoreC6Actionq_mfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"LocalState","preciseIdentifier":"s:22ComposableArchitecture5StoreC5scope5state6actionACyqd__qd_0_Gqd__xc_q_qd_0_ctr0_lF10LocalStateL_qd__mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"LocalAction","preciseIdentifier":"s:22ComposableArchitecture5StoreC5scope5state6actionACyqd__qd_0_Gqd__xc_q_qd_0_ctr0_lF11LocalActionL_qd_0_mfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Scopes the store to one that exposes local state and actions."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/store\/scope(state:action:)"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"role":"symbol","title":"ViewStore","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewStore"}],"abstract":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"},{"type":"text","text":" is an object that can observe state changes and send actions. They are most"},{"type":"text","text":" "},{"type":"text","text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be"},{"type":"text","text":" "},{"type":"text","text":"used anywhere it makes sense to observe state and send actions."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ViewStore"}],"url":"\/documentation\/composablearchitecture\/viewstore"}}}