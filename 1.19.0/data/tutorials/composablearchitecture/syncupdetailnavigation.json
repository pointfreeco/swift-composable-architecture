{"kind":"project","schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/$volume","doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Navigating-to-sync-up-detail"]],"modules":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/What-is-SyncUps-","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#A-tour-of-SyncUps"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#Create-the-SyncUps-project","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps"}]},{"projects":[{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#Domain-models","kind":"task"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#SyncUpsList-feature"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#A-handy-debugging-tool"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps#Writing-your-first-test","kind":"task"}]}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Lists-of-sync-ups"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/New-sync-up-form","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Sync-up-form-basics"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-an-approach","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-a-better-approach","kind":"task"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Removing-attendees"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Adding-attendees"}]}]},{"projects":[{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-domains-together","kind":"task"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-views-together"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm"},{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Adding-a-sync-up","kind":"task"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Non-exhaustive-testing"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Presenting-the-sync-up-form"},{"projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Persisting-data-to-disk","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Testing-persistence","kind":"task"}]}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Persisting-sync-ups-to-disk"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Sync-up-detail","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail#Create-the-sync-up-detail","kind":"task"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Editing-the-sync-up"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Deleting-the-sync-up","kind":"task"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#More-concise-domain-modeling"}]},{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail#Testing-the-edit-flow","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail"}]},{"projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-feature","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-view","kind":"task"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Navigating-to-the-detail"}]},{"sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#The-meeting-screen"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#Navigate-to-a-meeting","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation"},{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation#Deleting-a-sync-up","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Navigating-to-sync-up-detail"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Record-meeting","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Create-a-new-feature"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Navigating-to-the-record-meeting-feature","kind":"task"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#A-basic-timer","kind":"task"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Controlling-dependencies-early"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Ending-the-meeting-early","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Testing-the-timer","kind":"task"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission","kind":"task"}]}]}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps"},"metadata":{"role":"project","title":"Navigating to a sync-up detail","categoryPathComponent":"BuildingSyncUps","category":"Building SyncUps"},"variants":[{"paths":["\/tutorials\/composablearchitecture\/syncupdetailnavigation"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[{"estimatedTimeInMinutes":20,"kind":"hero","title":"Navigating to a sync-up detail","chapter":"Navigating to sync-up detail","content":[{"inlineContent":[{"type":"text","text":"We will wrap the application built so far in a "},{"code":"NavigationStack","type":"codeVoice"},{"type":"text","text":" so that we can navigate to"},{"text":" ","type":"text"},{"text":"the detail screen. To do this we will create a new root-level feature that will be responsible","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"type":"paragraph"}]},{"tasks":[{"stepsSection":[{"code":"SyncUpDetailNavigation-01-code-0001.swift","caption":[{"name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You may already have an App.swift in your project that holds the entry point of"},{"type":"text","text":" "},{"text":"the application (i.e. ","type":"text"},{"type":"codeVoice","code":"@main"},{"text":"). If so, you can name this file AppFeature.swift, or you can","type":"text"},{"type":"text","text":" "},{"type":"text","text":"rename the entry point to Main.swift."}]},{"type":"paragraph","inlineContent":[{"text":"We often leave out suffixing reducers with names like “feature” or “reducer”, but in this","type":"text"},{"type":"text","text":" "},{"type":"text","text":"case we must avoid conflicting with SwiftUI’s"},{"text":" ","type":"text"},{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/app","isActive":true,"type":"reference"},{"text":" protocol, so we’ll use","type":"text"},{"type":"text","text":" "},{"code":"AppFeature","type":"codeVoice"},{"text":", instead.","type":"text"}]}],"type":"aside"}],"content":[{"inlineContent":[{"type":"text","text":"Create a new file called App.swift and paste in the basic scaffolding of a new"},{"type":"text","text":" "},{"text":"Composable Architecture feature.","type":"text"}],"type":"paragraph"}],"type":"step","runtimePreview":null,"media":null},{"inlineContent":[{"type":"text","text":"This feature’s primary responsibility will be to integrate all the features that can be"},{"type":"text","text":" "},{"type":"text","text":"presented in the navigation stack. Currently that is only the "},{"code":"SyncUpsList","type":"codeVoice"},{"type":"text","text":" feature, which"},{"type":"text","text":" "},{"type":"text","text":"is always at the root of the stack, and the "},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":" feature. Soon there will be more"},{"text":" ","type":"text"},{"type":"text","text":"features that can be presented in the stack, such as the record meeting feature and the past"},{"type":"text","text":" "},{"type":"text","text":"meeting feature."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The sync-ups list feature is a little different from all of those other features, though."},{"type":"text","text":" "},{"text":"It is at the root of the stack, and it can not be dismissed. For that reason it is composed","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"into the "},{"code":"AppFeature","type":"codeVoice"},{"text":" by simply holding onto its state and actions, and using the","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","type":"reference","isActive":true},{"type":"text","text":" reducer to compose it into "},{"code":"AppFeature","type":"codeVoice"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"body"},{"type":"text","text":"."}]},{"code":"SyncUpDetailNavigation-01-code-0002.swift","caption":[],"media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Integrate the "},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" reducer into the "},{"code":"AppFeature","type":"codeVoice"},{"type":"text","text":" by holding onto its state and"},{"text":" ","type":"text"},{"type":"text","text":"actions, and using the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","isActive":true,"type":"reference"},{"text":" reducer to compose the two","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"reducers together."}]}],"type":"step","runtimePreview":null},{"inlineContent":[{"text":"Next we want to integrate the ","type":"text"},{"type":"codeVoice","code":"SyncUpDetail"},{"text":" reducer into the ","type":"text"},{"type":"codeVoice","code":"AppFeature"},{"type":"text","text":". The library comes"},{"text":" ","type":"text"},{"type":"text","text":"with specific tools to do this for navigation stacks. It starts by using"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","isActive":true},{"type":"text","text":", which is a collection type provided by the library"},{"type":"text","text":" "},{"type":"text","text":"specifically tuned for dealing with navigation stacks."}],"type":"paragraph"},{"runtimePreview":null,"caption":[],"code":"SyncUpDetailNavigation-01-code-0003.swift","type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Integrate the state of "},{"code":"SyncUpDetail","type":"codeVoice"},{"text":" in ","type":"text"},{"code":"AppFeature","type":"codeVoice"},{"text":" by holding onto","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","isActive":true,"type":"reference"},{"type":"text","text":". We like to call this variable "},{"type":"codeVoice","code":"path"},{"type":"text","text":" since it mimics"},{"text":" ","type":"text"},{"type":"text","text":"the "},{"code":"NavigationStack(path:)","type":"codeVoice"},{"type":"text","text":" API in SwiftUI."}]}],"media":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"However, this is not quite right. We don’t want to "},{"inlineContent":[{"type":"text","text":"only"}],"type":"emphasis"},{"type":"text","text":" show the "},{"code":"SyncUpDetail","type":"codeVoice"},{"text":" in the","type":"text"},{"type":"text","text":" "},{"text":"navigation stack. Soon we will have a ","type":"text"},{"type":"codeVoice","code":"RecordMeeting"},{"text":" feature, and a ","type":"text"},{"type":"codeVoice","code":"Meeting"},{"text":" feature,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and in the future there may be more."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For this reason it is best to do some upfront work to model a feature that can handle any"},{"text":" ","type":"text"},{"text":"number of features on the stack. This works much like the ","type":"text"},{"type":"codeVoice","code":"Destination"},{"text":" reducer we created","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"in "},{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp","isActive":true,"type":"reference"},{"type":"text","text":"."}]},{"type":"step","code":"SyncUpDetailNavigation-01-code-0004.swift","caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Create a new ","type":"text"},{"code":"Path","type":"codeVoice"},{"type":"text","text":" reducer inside "},{"code":"AppFeature","type":"codeVoice"},{"text":". Like the ","type":"text"},{"type":"codeVoice","code":"Destination"},{"type":"text","text":" reducer we defined for the"},{"text":" ","type":"text"},{"type":"text","text":"sync-up detail screen, "},{"code":"Path","type":"codeVoice"},{"type":"text","text":" type will be an "},{"inlineContent":[{"text":"enum","type":"text"}],"type":"emphasis"},{"text":" so that it can compose all of the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"screens you can navigate to into a single reducer."}]}],"runtimePreview":null,"media":null},{"media":null,"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a case to the path for the "},{"code":"SyncUpDetail","type":"codeVoice"},{"type":"text","text":" feature. In the future more cases will be"},{"type":"text","text":" "},{"text":"added to this enum for each kind of feature that can be pushed onto the stack.","type":"text"}]}],"code":"SyncUpDetailNavigation-01-code-0005.swift","type":"step","caption":[]},{"type":"paragraph","inlineContent":[{"type":"text","text":"That’s all it takes to create a single reducer that encapsulates all of the logic and behavior"},{"text":" ","type":"text"},{"type":"text","text":"of each screen in the navigation stack. In the future as we add more screens to the stack"},{"type":"text","text":" "},{"text":"we will just add more cases to this reducer.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Next we will integrate the "},{"type":"codeVoice","code":"Path"},{"text":" reducer into the ","type":"text"},{"type":"codeVoice","code":"AppFeature"},{"type":"text","text":" reducer."}]},{"type":"step","runtimePreview":null,"caption":[{"type":"aside","style":"important","name":"Important","content":[{"inlineContent":[{"type":"text","text":"In order to maintain "},{"code":"State","type":"codeVoice"},{"text":"’s ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"text":", we must conform ","type":"text"},{"type":"codeVoice","code":"Path.State"},{"type":"text","text":" to be"},{"text":" ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":" as well."}],"type":"paragraph"}]}],"media":null,"code":"SyncUpDetailNavigation-01-code-0006.swift","content":[{"inlineContent":[{"text":"Update the ","type":"text"},{"type":"codeVoice","code":"path"},{"text":" variable to hold onto ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState"},{"type":"text","text":" of"},{"type":"text","text":" "},{"code":"Path.State","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"media":null,"code":"SyncUpDetailNavigation-01-code-0007.swift","type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Integrate the "},{"type":"codeVoice","code":"Path"},{"text":"’s actions into ","type":"text"},{"type":"codeVoice","code":"AppFeature"},{"text":" by adding a case to its ","type":"text"},{"code":"Action","type":"codeVoice"},{"text":" enum, and using","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction"},{"text":". We can use the","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackActionOf","isActive":true},{"text":" type alias to specify a single generic of the path","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"reducer."}]}],"caption":[{"name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"Right now we don’t need to perform any logic in the ","type":"text"},{"code":".path","type":"codeVoice"},{"type":"text","text":" action so we can return"},{"text":" ","type":"text"},{"type":"codeVoice","code":".none"},{"type":"text","text":" in it."}]}],"type":"aside"}],"runtimePreview":null},{"inlineContent":[{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction","type":"reference"},{"type":"text","text":" is a type that represents the most"},{"text":" ","type":"text"},{"type":"text","text":"fundamental things that can happen in a stack: an element in the stack can send an action"},{"type":"text","text":" "},{"type":"text","text":"("},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction\/element(id:action:)"},{"type":"text","text":"), or it can push an element"},{"text":" ","type":"text"},{"type":"text","text":"onto the stack ("},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction\/push(id:state:)","type":"reference"},{"type":"text","text":"), or it can"},{"type":"text","text":" "},{"type":"text","text":"pop an element from the stack ("},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction\/popFrom(id:)","type":"reference"},{"type":"text","text":")."}],"type":"paragraph"},{"code":"SyncUpDetailNavigation-01-code-0008.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Integrate the "},{"type":"codeVoice","code":"Path"},{"text":" reducer into the ","type":"text"},{"code":"body","type":"codeVoice"},{"text":" of the ","type":"text"},{"code":"AppFeature","type":"codeVoice"},{"type":"text","text":" reducer by using the"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:)"},{"type":"text","text":" operator."}]}],"caption":[],"runtimePreview":null,"type":"step","media":null},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:)","isActive":true},{"text":"","type":"text"},{"type":"text","text":" "},{"text":"operator takes care of processing an incoming ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction","isActive":true},{"text":", routing","type":"text"},{"text":" ","type":"text"},{"text":"it to the current reducer in the stack, and automatically cancelling effects when a feature","type":"text"},{"type":"text","text":" "},{"text":"is popped from the stack.","type":"text"}]},{"inlineContent":[{"type":"text","text":"That is all it takes to create the "},{"code":"AppFeature","type":"codeVoice"},{"text":" reducer and integrate the ","type":"text"},{"code":"SyncUpDetail","type":"codeVoice"},{"text":" into the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"stack. Next We will create the view layer."}],"type":"paragraph"}],"contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","content":[{"inlineContent":[{"text":"Let’s create a new feature to hold the ","type":"text"},{"type":"codeVoice","code":"NavigationStack"},{"text":".","type":"text"}],"type":"paragraph"}]}],"anchor":"Creating-the-app-feature","title":"Creating the app feature"},{"anchor":"Creating-the-app-view","contentSection":[{"mediaPosition":"trailing","content":[{"inlineContent":[{"type":"text","text":"Let’s create the view that holds onto the "},{"code":"NavigationStack","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"contentAndMedia"}],"title":"Creating the app view","stepsSection":[{"code":"SyncUpDetailNavigation-02-code-0001.swift","type":"step","media":null,"runtimePreview":null,"content":[{"inlineContent":[{"text":"Create a new ","type":"text"},{"type":"codeVoice","code":"AppView"},{"text":" struct to conform to the ","type":"text"},{"code":"View","type":"codeVoice"},{"type":"text","text":" protocol in SwiftUI."}],"type":"paragraph"}],"caption":[]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Add a ","type":"text"},{"type":"codeVoice","code":"store"},{"text":" property to the view. We are going to be proactive and make the property","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"@Bindable"},{"type":"text","text":" because we will need to derive a binding to it for the "},{"code":"NavigationStack","type":"codeVoice"},{"type":"text","text":"."}]}],"media":null,"caption":[],"code":"SyncUpDetailNavigation-02-code-0002.swift","runtimePreview":null,"type":"step"},{"content":[{"inlineContent":[{"text":"Implement the ","type":"text"},{"type":"codeVoice","code":"body"},{"type":"text","text":" of the view by constructing a "},{"type":"codeVoice","code":"NavigationStack"},{"text":", but we will be using","type":"text"},{"type":"text","text":" "},{"text":"special initializer that comes with the library:","type":"text"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI\/NavigationStack\/init(path:root:destination:fileID:filePath:line:column:)"},{"type":"text","text":". This initializer takes"},{"text":" ","type":"text"},{"text":"a binding to a store focused on the stack domain, as well as two trailing closures. The","type":"text"},{"type":"text","text":" "},{"type":"text","text":"first for the root view that is always present, and the second for the destinations that"},{"type":"text","text":" "},{"type":"text","text":"can be  pushed onto the stack."}],"type":"paragraph"}],"code":"SyncUpDetailNavigation-02-code-0003.swift","media":null,"type":"step","runtimePreview":null,"caption":[]},{"media":null,"code":"SyncUpDetailNavigation-02-code-0004.swift","caption":[],"content":[{"inlineContent":[{"text":"For the root view we can construct the ","type":"text"},{"code":"SyncUpsListView","type":"codeVoice"},{"type":"text","text":" by using"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","isActive":true},{"type":"text","text":" on the "},{"type":"codeVoice","code":"store"},{"type":"text","text":" to isolate"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"SyncUpsList"},{"text":" domain.","type":"text"}],"type":"paragraph"}],"type":"step","runtimePreview":null},{"media":null,"code":"SyncUpDetailNavigation-02-code-0005.swift","runtimePreview":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"destination"},{"type":"text","text":" trailing closure is handed a "},{"code":"store","type":"codeVoice"},{"type":"text","text":" focused on the path’s state, which"},{"type":"text","text":" "},{"type":"text","text":"is an enum. Because we are using the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()"},{"text":" macro on a ","type":"text"},{"code":"Path","type":"codeVoice"},{"type":"text","text":" enum we get access"},{"text":" ","type":"text"},{"text":"to a special super power of enum reducers. We can switch on ","type":"text"},{"type":"codeVoice","code":"store.case"},{"text":" to destructure","type":"text"},{"type":"text","text":" "},{"text":"a child store for each case of the enum.","type":"text"}]}],"caption":[{"inlineContent":[{"type":"text","text":"See "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer#Destination-and-path-reducers","isActive":true},{"type":"text","text":" for more information on this tool."}],"type":"paragraph"}]},{"code":"SyncUpDetailNavigation-02-code-0006.swift","runtimePreview":null,"type":"step","caption":[],"media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"For each case in the enum we will destructure the store and construct the corresponding","type":"text"},{"text":" ","type":"text"},{"text":"destination view by handing the store to the view.","type":"text"}]}]},{"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Add a preview to the bottom of the file.","type":"text"}]}],"code":"SyncUpDetailNavigation-02-code-0007.swift","caption":[],"runtimePreview":null,"media":null},{"inlineContent":[{"text":"That’s all it takes to build the root ","type":"text"},{"code":"AppView","type":"codeVoice"},{"text":" that holds onto a ","type":"text"},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":". But"},{"type":"text","text":" "},{"type":"text","text":"currently we do not have any buttons to actually navigate to the detail screen from the list"},{"type":"text","text":" "},{"type":"text","text":"screen."}],"type":"paragraph"}]},{"stepsSection":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Go to the SyncUpsList.swift file where the "},{"code":"SyncUpListView","type":"codeVoice"},{"type":"text","text":" is defined. In that view we"},{"text":" ","type":"text"},{"text":"currently have a ","type":"text"},{"type":"codeVoice","code":"Button"},{"type":"text","text":" in the list. Let’s now replace it with a "},{"type":"codeVoice","code":"NavigationLink"},{"type":"text","text":", but"},{"text":" ","type":"text"},{"type":"text","text":"using the special initializer that comes with this library:"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI\/NavigationLink\/init(state:label:fileID:filePath:line:column:)","isActive":true,"type":"reference"},{"type":"text","text":"."}]}],"caption":[],"type":"step","media":null,"code":"SyncUpDetailNavigation-03-code-0001.swift","runtimePreview":null},{"type":"paragraph","inlineContent":[{"text":"This special initializer takes a piece of state that matches the type that is held in the","type":"text"},{"type":"text","text":" "},{"text":"root feature’s ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","isActive":true},{"type":"text","text":". In our case, that is "},{"code":"AppFeature.Path.State","type":"codeVoice"},{"type":"text","text":","},{"text":" ","type":"text"},{"type":"text","text":"which is an enum of all the possible destinations that can be navigated to."}]},{"media":null,"type":"step","code":"SyncUpDetailNavigation-03-code-0002.swift","caption":[],"runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Provide "},{"type":"codeVoice","code":"Path.State.detail"},{"type":"text","text":" to the "},{"type":"codeVoice","code":"NavigationLink"},{"type":"text","text":" to indicate that we want to"},{"type":"text","text":" "},{"text":"navigate to the detail feature.","type":"text"}],"type":"paragraph"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"However, to construct "},{"type":"codeVoice","code":"SyncUpDetail.State"},{"type":"text","text":" we need to provide a "},{"type":"codeVoice","code":"Shared<SyncUp>"},{"text":" value.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This needs to be derived from the shared sync-ups held in "},{"type":"codeVoice","code":"SyncUpsList.State"},{"text":" so that the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"detail feature can be allowed to make edits to the state have those edits be automatically"},{"type":"text","text":" "},{"text":"made to ","type":"text"},{"code":"SyncUpsList.State","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"One can use the projected value of ","type":"text"},{"type":"codeVoice","code":"@Shared"},{"text":" in order to derive a ","type":"text"},{"type":"codeVoice","code":"Shared"},{"type":"text","text":" value for each"},{"type":"text","text":" "},{"text":"element in the collection.","type":"text"}]},{"type":"step","content":[{"inlineContent":[{"text":"Convert the shared collection of sync-ups into a collection of shared sync-ups and pass it","type":"text"},{"text":" ","type":"text"},{"text":"along to ","type":"text"},{"type":"codeVoice","code":"ForEach"},{"text":".","type":"text"}],"type":"paragraph"}],"media":null,"code":"SyncUpDetailNavigation-03-code-0003.swift","runtimePreview":null,"caption":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"While we use an "},{"type":"codeVoice","code":"Array"},{"text":" initializer to do this conversion, it is possible to use any range","type":"text"},{"text":" ","type":"text"},{"text":"replaceable collection.","type":"text"}]}],"type":"aside","name":"Tip","style":"tip"}]},{"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Pass the projected value "},{"type":"codeVoice","code":"$syncUp"},{"type":"text","text":" to "},{"code":"SyncUpDetail.State","type":"codeVoice"},{"text":".","type":"text"}]}],"caption":[],"media":null,"code":"SyncUpDetailNavigation-03-code-0004.swift","runtimePreview":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"That is all it takes to perform a navigation from the list feature to the detail feature."},{"type":"text","text":" "},{"type":"text","text":"When the navigation link is tapped, SwiftUI will search up the view hierarchy to find the"},{"type":"text","text":" "},{"code":"NavigationStack","type":"codeVoice"},{"type":"text","text":" powering the view, find its "},{"code":"path","type":"codeVoice"},{"type":"text","text":" binding, and append the new "},{"type":"codeVoice","code":".detail"},{"type":"text","text":" "},{"type":"text","text":"state to the path, thus triggering a drill-down animation."}]},{"inlineContent":[{"type":"text","text":"This is the easiest way to navigate to one screen to another, but it does have some drawbacks."},{"type":"text","text":" "},{"text":"Because we need to reference all of ","type":"text"},{"type":"codeVoice","code":"AppFeature.State.Path"},{"text":" to construct a navigation link, it can","type":"text"},{"text":" ","type":"text"},{"text":"make modularization difficult. Every navigation link will need access to every feature’s","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"state."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"An alternative is to use a plain ","type":"text"},{"type":"codeVoice","code":"Button"},{"text":" instead of ","type":"text"},{"type":"codeVoice","code":"NavigationLink"},{"text":", and send an action","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"from that button. Then the parent "},{"type":"codeVoice","code":"App"},{"type":"text","text":" feature can intercept that action and manually append"},{"type":"text","text":" "},{"text":"state to its ","type":"text"},{"type":"codeVoice","code":"path"},{"text":". This fully decouples the features from one another, and only the ","type":"text"},{"type":"codeVoice","code":"App"},{"text":" ","type":"text"},{"text":"feature needs to have knowledge about all of the child features.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"We will not do that refactor now, but it would be instructive for the reader to try it","type":"text"},{"type":"text","text":" "},{"text":"themselves.","type":"text"}]},{"inlineContent":[{"text":"Before moving on let’s make sure that the deletion and editing logic that we implemented in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the detail screens properly works now that we can navigate to the detail screen from the"},{"text":" ","type":"text"},{"text":"sync-ups list screen.","type":"text"}],"type":"paragraph"},{"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Navigate to the detail screen of a sync-up and delete it to confirm that it works as"},{"text":" ","type":"text"},{"type":"text","text":"expected."}]}],"code":null,"caption":[],"runtimePreview":null,"media":"SyncUpDetailNavigation-03-video-0005.mov"},{"code":null,"caption":[],"type":"step","media":"SyncUpDetailNavigation-03-video-0006.mov","content":[{"inlineContent":[{"type":"text","text":"Navigate to the detail screen of a sync-up, edit it, and then navigate back to the list"},{"type":"text","text":" "},{"type":"text","text":"screen to verify that changes were made. Also relaunch the app to confirm that the data"},{"text":" ","type":"text"},{"type":"text","text":"was persisted to disk."}],"type":"paragraph"}],"runtimePreview":null}],"title":"Navigating to the detail","anchor":"Navigating-to-the-detail","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"text":"To navigate to the detail screen from the list screen we need to append some","type":"text"},{"text":" ","type":"text"},{"code":"SyncUpDetail.State","type":"codeVoice"},{"type":"text","text":" to the "},{"type":"codeVoice","code":"path"},{"type":"text","text":" of the "},{"type":"codeVoice","code":"App"},{"text":" feature. The easiest way to do this is with","type":"text"},{"type":"text","text":" "},{"type":"text","text":"a "},{"type":"codeVoice","code":"NavigationLink"},{"type":"text","text":", which will automatically append some state to the path when tapped."}]}],"mediaPosition":"trailing"}]}],"kind":"tasks"},{"title":"Navigating to a meeting","kind":"callToAction","action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"type":"reference","overridingTitle":"Get started","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation"},"abstract":[{"text":"Now that we have a navigation stack in place we can start navigating to other features in the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"application. The simplest is the meeting screen, which allows you to see the details of a"},{"text":" ","type":"text"},{"type":"text","text":"previous recorded meeting."}],"featuredEyebrow":"Tutorial"}],"references":{"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#Deleting-the-sync-up":{"abstract":[{"text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"type":"text","text":" "},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}],"url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#Deleting-the-sync-up","kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Deleting-the-sync-up","title":"Deleting the sync-up","type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm#Removing-attendees":{"url":"\/tutorials\/composablearchitecture\/testingsyncupform#Removing-attendees","role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Removing-attendees","abstract":[{"type":"text","text":"We now have a moderately complex feature for editing the details of a sync-up, the "},{"code":"SyncUpForm","type":"codeVoice"},{"type":"text","text":" "},{"text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come","type":"text"},{"text":" ","type":"text"},{"text":"face-to-face with dependencies for the first time in this tutorial.","type":"text"}],"kind":"section","title":"Removing attendees","type":"section"},"SyncUpDetailNavigation-01-code-0001.swift":{"content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  @ObservableState","  struct State: Equatable {","  }","  enum Action {","  }","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      }","    }","  }","}"],"identifier":"SyncUpDetailNavigation-01-code-0001.swift","highlights":[],"type":"file","fileName":"App.swift","syntax":"swift","fileType":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer":{"abstract":[{"text":"The first major piece of logic and behavior we will introduce to the record meeting feature is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"text":" ","type":"text"},{"text":"we need to implement nuanced logic to figure out when to proceed to the next speaker.","type":"text"}],"role":"project","type":"topic","title":"Adding a meeting timer","url":"\/tutorials\/composablearchitecture\/implementingtimer","estimatedTime":"25min","kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp":{"abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"type":"text","text":" "},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"text":" ","type":"text"},{"text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup","estimatedTime":"30min","kind":"project","role":"project","title":"Editing and deleting a sync-up","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp","type":"topic"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Record-meeting":{"url":"\/tutorials\/buildingsyncups\/record-meeting","title":"Record meeting","abstract":[],"kind":"article","role":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Record-meeting","type":"topic"},"SyncUpDetailNavigation-03-video-0006.mov":{"alt":null,"identifier":"SyncUpDetailNavigation-03-video-0006.mov","type":"video","poster":null,"variants":[{"url":"\/videos\/ComposableArchitecture\/SyncUpDetailNavigation-03-video-0006.mov","traits":["1x","light"]}]},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Persisting-sync-ups-to-disk":{"abstract":[],"url":"\/tutorials\/buildingsyncups\/persisting-sync-ups-to-disk","kind":"article","role":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Persisting-sync-ups-to-disk","title":"Persisting sync-ups to disk","type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingSpeechRecognizer":{"abstract":[{"type":"text","text":"We have just one feature left to implement, and it’s one of the most complicated ones. We need"},{"type":"text","text":" "},{"text":"to use Apple’s ","type":"text"},{"type":"codeVoice","code":"SFSpeechRecognizer"},{"type":"text","text":" API to ask the user for permission to transcribe their"},{"type":"text","text":" "},{"type":"text","text":"audio, and then start a speech recognition task to live transcribe the meeting while it is"},{"type":"text","text":" "},{"text":"in progress.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer","title":"Adding a speech recognizer","kind":"project","type":"topic","url":"\/tutorials\/composablearchitecture\/implementingspeechrecognizer","role":"project","estimatedTime":"10min"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature#Create-a-new-feature":{"abstract":[{"type":"text","text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will"},{"type":"text","text":" "},{"text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/recordmeetingfeature#Create-a-new-feature","kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Create-a-new-feature","title":"Create a new feature","type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetail#Create-the-sync-up-detail":{"abstract":[{"type":"text","text":"The “sync-up detail” screen shows all the information of a sync-up, and has many actions that"},{"type":"text","text":" "},{"text":"can take place in the screen. The user can edit the sync-up, or start a new meeting in the sync","type":"text"},{"type":"text","text":" "},{"text":"up, or drill-down to a past meeting, or even delete the meeting.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail#Create-the-sync-up-detail","title":"Create the sync-up detail","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/syncupdetail#Create-the-sync-up-detail","role":"pseudoSymbol"},"SyncUpDetailNavigation-01-code-0006.swift":{"fileType":"swift","fileName":"App.swift","syntax":"swift","type":"file","identifier":"SyncUpDetailNavigation-01-code-0006.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  @Reducer","  enum Path {","    case detail(SyncUpDetail)","  }","  @ObservableState","  struct State: Equatable {","    var path = StackState<Path.State>()","    var syncUpsList = SyncUpsList.State()","  }","  enum Action {","    case syncUpsList(SyncUpsList.Action)","  }","  var body: some ReducerOf<Self> {","    Scope(state: \\.syncUpsList, action: \\.syncUpsList) {","      SyncUpsList()","    }","    Reduce { state, action in","      switch action {","      case .syncUpsList:","        return .none","      }","    }","  }","}","extension AppFeature.Path.State: Equatable {}"],"highlights":[{"line":12},{"line":30}]},"SyncUpDetailNavigation-02-code-0006.swift":{"syntax":"swift","fileName":"App.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  \/\/ ...","}","","struct AppView: View {","  @Bindable var store: StoreOf<AppFeature>","","  var body: some View {","    NavigationStack(","      path: $store.scope(state: \\.path, action: \\.path)","    ) {","      SyncUpsListView(","        store: store.scope(state: \\.syncUpsList, action: \\.syncUpsList)","      )","    } destination: { store in","      switch store.case {","      case let .detail(detailStore):","        SyncUpDetailView(store: detailStore)","      }","    }","  }","}"],"highlights":[{"line":22}],"fileType":"swift","identifier":"SyncUpDetailNavigation-02-code-0006.swift","type":"file"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Navigating-to-sync-up-detail":{"abstract":[],"url":"\/tutorials\/buildingsyncups\/navigating-to-sync-up-detail","kind":"article","role":"article","title":"Navigating to sync-up detail","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Navigating-to-sync-up-detail"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackAction":{"navigatorTitle":[{"text":"StackAction","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A wrapper type for actions that can be presented in a navigation stack."}],"title":"StackAction","url":"\/documentation\/composablearchitecture\/stackaction","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StackAction","kind":"identifier"}]},"SyncUpDetailNavigation-03-video-0005.mov":{"alt":null,"identifier":"SyncUpDetailNavigation-03-video-0005.mov","type":"video","poster":null,"variants":[{"url":"\/videos\/ComposableArchitecture\/SyncUpDetailNavigation-03-video-0005.mov","traits":["1x","light"]}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Ending-the-meeting-early":{"url":"\/tutorials\/composablearchitecture\/implementingtimer#Ending-the-meeting-early","type":"section","abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"text":" ","type":"text"},{"text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and","type":"text"},{"type":"text","text":" "},{"text":"we need to implement nuanced logic to figure out when to proceed to the next speaker.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Ending-the-meeting-early","kind":"section","title":"Ending the meeting early","role":"pseudoSymbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:action:)-90255":{"role":"symbol","abstract":[{"text":"Scopes the store to one that exposes child state and actions.","type":"text"}],"url":"\/documentation\/composablearchitecture\/store\/scope(state:action:)-90255","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scope","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ChildState"},{"kind":"text","text":", "},{"text":"ChildAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"state","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"text":"ChildState","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"action","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"ChildState"},{"kind":"text","text":", "},{"text":"ChildAction","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic","title":"scope(state:action:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","kind":"symbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation":{"abstract":[{"type":"text","text":"We will wrap the application built so far in a "},{"type":"codeVoice","code":"NavigationStack"},{"text":" so that we can navigate to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the detail screen. To do this we will create a new root-level feature that will be responsible"},{"type":"text","text":" "},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation","estimatedTime":"20min","kind":"project","role":"project","title":"Navigating to a sync-up detail","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation","type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#Domain-models":{"url":"\/tutorials\/composablearchitecture\/listsofsyncups#Domain-models","title":"Domain models","abstract":[{"text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the","type":"text"},{"type":"text","text":" "},{"text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the app evolves."}],"kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#Domain-models","type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature#Navigating-to-the-record-meeting-feature":{"abstract":[{"type":"text","text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will"},{"type":"text","text":" "},{"type":"text","text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Navigating-to-the-record-meeting-feature","type":"section","title":"Navigating to the record meeting feature","kind":"section","url":"\/tutorials\/composablearchitecture\/recordmeetingfeature#Navigating-to-the-record-meeting-feature","role":"pseudoSymbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackActionOf":{"navigatorTitle":[{"text":"StackActionOf","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"StackActionOf","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackActionOf","kind":"symbol","title":"StackActionOf","abstract":[{"text":"A convenience type alias for referring to a stack action of a given reducer’s domain.","type":"text"}],"url":"\/documentation\/composablearchitecture\/stackactionof","type":"topic","role":"symbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#More-concise-domain-modeling":{"type":"section","title":"More concise domain modeling","kind":"section","abstract":[{"text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"type":"text","text":" "},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}],"role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#More-concise-domain-modeling","url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#More-concise-domain-modeling"},"SyncUpDetailNavigation-02-code-0007.swift":{"syntax":"swift","fileName":"App.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  \/\/ ...","}","","struct AppView: View {","  @Bindable var store: StoreOf<AppFeature>","","  var body: some View {","    NavigationStack(","      path: $store.scope(state: \\.path, action: \\.path)","    ) {","      SyncUpsListView(","        store: store.scope(state: \\.syncUpsList, action: \\.syncUpsList)","      )","    } destination: { store in","      switch store.case {","      case let .detail(detailStore):","        SyncUpDetailView(store: detailStore)","      }","    }","  }","}","","#Preview {","  AppView(","    store: Store(","      initialState: AppFeature.State(","        syncUpsList: SyncUpsList.State()","      )","    ) {","      AppFeature()","    }","  )","}"],"highlights":[{"line":27},{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38}],"fileType":"swift","identifier":"SyncUpDetailNavigation-02-code-0007.swift","type":"file"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Form-focus-an-approach":{"url":"\/tutorials\/composablearchitecture\/syncupform#Form-focus-an-approach","role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-an-approach","abstract":[{"text":"We will create a new feature with the Composable Architecture that is capable of editing the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"text":" ","type":"text"},{"text":"feature to make things a little more interesting.","type":"text"}],"kind":"section","title":"Form focus: an approach","type":"section"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Lists-of-sync-ups":{"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Lists-of-sync-ups","type":"topic","kind":"article","title":"Lists of sync-ups","url":"\/tutorials\/buildingsyncups\/lists-of-sync-ups","role":"article"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps":{"abstract":[{"type":"text","text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some"},{"type":"text","text":" "},{"text":"persistence. This will involve using the “shared state” tools from the library, such as","type":"text"},{"text":" ","type":"text"},{"code":"@Shared","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"fileStorage"},{"text":".","type":"text"}],"url":"\/tutorials\/composablearchitecture\/persistingsyncups","estimatedTime":"5min","kind":"project","role":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps","title":"Persisting sync-ups","type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps#Persisting-data-to-disk":{"type":"section","title":"Persisting data to disk","abstract":[{"type":"text","text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some"},{"type":"text","text":" "},{"type":"text","text":"persistence. This will involve using the “shared state” tools from the library, such as"},{"type":"text","text":" "},{"type":"codeVoice","code":"@Shared"},{"text":" and ","type":"text"},{"code":"fileStorage","type":"codeVoice"},{"type":"text","text":"."}],"kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Persisting-data-to-disk","url":"\/tutorials\/composablearchitecture\/persistingsyncups#Persisting-data-to-disk"},"SyncUpDetailNavigation-03-code-0003.swift":{"fileType":"swift","fileName":"SyncUpsList.swift","syntax":"swift","type":"file","identifier":"SyncUpDetailNavigation-03-code-0003.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  \/\/ ...","}","","struct SyncUpsListView: View {","  @Bindable var store: StoreOf<SyncUpsList>","","  var body: some View {","    List {","      ForEach(Array(store.$syncUps)) { $syncUp in","        NavigationLink(","          state: AppFeature.Path.State.detail(SyncUpDetail.State(syncUp: <#Shared<SyncUp>#>))","        ) {","          CardView(syncUp: syncUp)","        }","        .listRowBackground(syncUp.theme.mainColor)","      }","    }","    .sheet(item: $store.scope(state: \\.addSyncUp, action: \\.addSyncUp)) { addSyncUpStore in","      NavigationStack {","        SyncUpFormView(store: addSyncUpStore)","          .navigationTitle(\"New sync-up\")","          .toolbar {","            ToolbarItem(placement: .cancellationAction) {","              Button(\"Discard\") {","                store.send(.discardButtonTapped)","              }","            }","            ToolbarItem(placement: .confirmationAction) {","              Button(\"Add\") {","                store.send(.confirmAddButtonTapped)","              }","            }","          }","      }","    }","    .toolbar {","      Button {","        store.send(.addSyncUpButtonTapped)","      } label: {","        Image(systemName: \"plus\")","      }","    }","    .navigationTitle(\"Daily Sync-ups\")","  }","}","","struct CardView: View {","  let syncUp: SyncUp","","  var body: some View {","    VStack(alignment: .leading) {","      Text(syncUp.title)","        .font(.headline)","      Spacer()","      HStack {","        Label(\"\\(syncUp.attendees.count)\", systemImage: \"person.3\")","        Spacer()","        Label(syncUp.duration.formatted(.units()), systemImage: \"clock\")","          .labelStyle(.trailingIcon)","      }","      .font(.caption)","    }","    .padding()","    .foregroundStyle(syncUp.theme.accentColor)","  }","}","","struct TrailingIconLabelStyle: LabelStyle {","  func makeBody(configuration: Configuration) -> some View {","    HStack {","      configuration.title","      configuration.icon","    }","  }","}","","extension LabelStyle where Self == TrailingIconLabelStyle {","  static var trailingIcon: Self { Self() }","}","","#Preview {","  NavigationStack {","    SyncUpsListView(","      store: Store(","        initialState: SyncUpsList.State(","          syncUps: [.mock]","        )","      ) {","        SyncUpsList()","      }","    )","  }","}"],"highlights":[{"line":14}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps":{"kind":"project","title":"Lists of sync-ups","url":"\/tutorials\/composablearchitecture\/listsofsyncups","abstract":[{"text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the","type":"text"},{"type":"text","text":" "},{"text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the app evolves."}],"role":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps","estimatedTime":"10min","type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingNavigation":{"abstract":[{"text":"We have now implemented a navigation stack at the root of our application, and integrated","type":"text"},{"type":"text","text":" "},{"type":"text","text":"3 features into the stack: the "},{"code":"SyncUpsList","type":"codeVoice"},{"text":" feature, the ","type":"text"},{"code":"SyncUpDetail","type":"codeVoice"},{"type":"text","text":" feature, and the"},{"type":"text","text":" "},{"type":"codeVoice","code":"MeetingView"},{"type":"text","text":". Some of these features have quite complex logic binding them together, such as"},{"type":"text","text":" "},{"text":"when one deletes a sync-up from the detail screen it should pop the screen off the stack.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/testingnavigation","kind":"project","role":"project","estimatedTime":"10min","title":"Testing navigation","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/forEach(_:action:destination:fileID:filePath:line:column:)-9svqb":{"url":"\/documentation\/composablearchitecture\/reducer\/foreach(_:action:destination:fileid:filepath:line:column:)-9svqb","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"forEach","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"DestinationState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"DestinationAction"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Destination"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"kind":"text","text":", "},{"preciseIdentifier":"s:22ComposableArchitecture10StackStateV","text":"StackState","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"DestinationState"},{"text":">>, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"text":", ","kind":"text"},{"text":"StackAction","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture11StackActionO"},{"kind":"text","text":"<"},{"text":"DestinationState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"DestinationAction"},{"text":">>, ","kind":"text"},{"kind":"externalParam","text":"destination"},{"kind":"text","text":": () -> "},{"text":"Destination","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"fileID","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"filePath","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"text":"column","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP","kind":"typeIdentifier","text":"Reducer"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action"},{"text":">\n","kind":"text"}],"abstract":[{"text":"Embeds a child reducer in a parent domain that works on elements of a navigation stack in","type":"text"},{"type":"text","text":" "},{"text":"parent state.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:destination:fileID:filePath:line:column:)-9svqb","kind":"symbol","role":"symbol","title":"forEach(_:action:destination:fileID:filePath:line:column:)"},"SyncUpDetailNavigation-03-code-0002.swift":{"syntax":"swift","fileName":"SyncUpsList.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  \/\/ ...","}","","struct SyncUpsListView: View {","  @Bindable var store: StoreOf<SyncUpsList>","","  var body: some View {","    List {","      ForEach(store.syncUps) { syncUp in","        NavigationLink(","          state: AppFeature.Path.State.detail(SyncUpDetail.State(syncUp: <#Shared<SyncUp>#>))","        ) {","          CardView(syncUp: syncUp)","        }","        .listRowBackground(syncUp.theme.mainColor)","      }","    }","    .sheet(item: $store.scope(state: \\.addSyncUp, action: \\.addSyncUp)) { addSyncUpStore in","      NavigationStack {","        SyncUpFormView(store: addSyncUpStore)","          .navigationTitle(\"New sync-up\")","          .toolbar {","            ToolbarItem(placement: .cancellationAction) {","              Button(\"Discard\") {","                store.send(.discardButtonTapped)","              }","            }","            ToolbarItem(placement: .confirmationAction) {","              Button(\"Add\") {","                store.send(.confirmAddButtonTapped)","              }","            }","          }","      }","    }","    .toolbar {","      Button {","        store.send(.addSyncUpButtonTapped)","      } label: {","        Image(systemName: \"plus\")","      }","    }","    .navigationTitle(\"Daily Sync-ups\")","  }","}","","struct CardView: View {","  let syncUp: SyncUp","","  var body: some View {","    VStack(alignment: .leading) {","      Text(syncUp.title)","        .font(.headline)","      Spacer()","      HStack {","        Label(\"\\(syncUp.attendees.count)\", systemImage: \"person.3\")","        Spacer()","        Label(syncUp.duration.formatted(.units()), systemImage: \"clock\")","          .labelStyle(.trailingIcon)","      }","      .font(.caption)","    }","    .padding()","    .foregroundStyle(syncUp.theme.accentColor)","  }","}","","struct TrailingIconLabelStyle: LabelStyle {","  func makeBody(configuration: Configuration) -> some View {","    HStack {","      configuration.title","      configuration.icon","    }","  }","}","","extension LabelStyle where Self == TrailingIconLabelStyle {","  static var trailingIcon: Self { Self() }","}","","#Preview {","  NavigationStack {","    SyncUpsListView(","      store: Store(","        initialState: SyncUpsList.State(","          syncUps: [.mock]","        )","      ) {","        SyncUpsList()","      }","    )","  }","}"],"highlights":[{"line":16}],"fileType":"swift","identifier":"SyncUpDetailNavigation-03-code-0002.swift","type":"file"},"SyncUpDetailNavigation-02-code-0002.swift":{"type":"file","identifier":"SyncUpDetailNavigation-02-code-0002.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  \/\/ ...","}","","struct AppView: View {","  @Bindable var store: StoreOf<AppFeature>","}"],"highlights":[{"line":10}],"fileType":"swift","syntax":"swift","fileName":"App.swift"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true,"type":"reference"},{"text":"s should be executed later by the store, if any.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","role":"symbol","kind":"symbol","title":"Reducer"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps":{"abstract":[{"text":"The SyncUps application is a recreation of one of Apple’s more interesting demo applications,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Scrumdinger. We recreate it from scratch using the Composable Architecture, with a focus on"},{"type":"text","text":" "},{"type":"text","text":"domain modeling, controlling dependencies, and testability."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","title":"Building SyncUps","type":"topic","kind":"overview","url":"\/tutorials\/buildingsyncups","role":"overview"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission":{"title":"Asking for speech recognition permission","type":"section","role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission","kind":"section","abstract":[{"text":"We have just one feature left to implement, and it’s one of the most complicated ones. We need","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to use Apple’s "},{"type":"codeVoice","code":"SFSpeechRecognizer"},{"type":"text","text":" API to ask the user for permission to transcribe their"},{"type":"text","text":" "},{"text":"audio, and then start a speech recognition task to live transcribe the meeting while it is","type":"text"},{"text":" ","type":"text"},{"text":"in progress.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/implementingspeechrecognizer#Asking-for-speech-recognition-permission"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackAction/push(id:state:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction\/push(id:state:)","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"push"},{"text":"(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StackElementID","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture14StackElementIDV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"state"},{"text":": ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"An action sent to present the given state at a given identifier in a navigation stack. This"},{"type":"text","text":" "},{"text":"action is typically sent from the view via the ","type":"text"},{"type":"codeVoice","code":"NavigationLink(value:)"},{"type":"text","text":" initializer."}],"type":"topic","url":"\/documentation\/composablearchitecture\/stackaction\/push(id:state:)","kind":"symbol","title":"StackAction.push(id:state:)"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm":{"abstract":[{"text":"We will create a new feature with the Composable Architecture that is capable of editing the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"type":"text","text":" "},{"text":"feature to make things a little more interesting.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm","title":"Sync-up form","type":"topic","kind":"project","url":"\/tutorials\/composablearchitecture\/syncupform","role":"project","estimatedTime":"15min"},"SyncUpDetailNavigation-01-code-0004.swift":{"syntax":"swift","fileName":"App.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  @Reducer","  enum Path {","  }","  @ObservableState","  struct State: Equatable {","    var path = StackState<SyncUpDetail.State>()","    var syncUpsList = SyncUpsList.State()","  }","  enum Action {","    case syncUpsList(SyncUpsList.Action)","  }","  var body: some ReducerOf<Self> {","    Scope(state: \\.syncUpsList, action: \\.syncUpsList) {","      SyncUpsList()","    }","    Reduce { state, action in","      switch action {","      case .syncUpsList:","        return .none","      }","    }","  }","}"],"highlights":[{"line":6},{"line":7},{"line":8}],"fileType":"swift","identifier":"SyncUpDetailNavigation-01-code-0004.swift","type":"file"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Sync-up-detail":{"abstract":[],"url":"\/tutorials\/buildingsyncups\/sync-up-detail","kind":"article","role":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Sync-up-detail","title":"Sync-up detail","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackState":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","kind":"symbol","abstract":[{"text":"A list of data representing the content of a navigation stack.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StackState"}],"url":"\/documentation\/composablearchitecture\/stackstate","navigatorTitle":[{"text":"StackState","kind":"identifier"}],"title":"StackState"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#A-handy-debugging-tool":{"abstract":[{"text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the","type":"text"},{"text":" ","type":"text"},{"text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the app evolves."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#A-handy-debugging-tool","title":"A handy debugging tool","type":"section","kind":"section","url":"\/tutorials\/composablearchitecture\/listsofsyncups#A-handy-debugging-tool","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps":{"kind":"project","title":"What is SyncUps?","url":"\/tutorials\/composablearchitecture\/whatissyncups","abstract":[{"text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a","type":"text"},{"type":"text","text":" "},{"text":"recreation of Apple’s Scrumdinger demo application.","type":"text"}],"role":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps","estimatedTime":"5min","type":"topic"},"SyncUpDetailNavigation-01-code-0003.swift":{"fileType":"swift","fileName":"App.swift","syntax":"swift","type":"file","identifier":"SyncUpDetailNavigation-01-code-0003.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  @ObservableState","  struct State: Equatable {","    var path = StackState<SyncUpDetail.State>()","    var syncUpsList = SyncUpsList.State()","  }","  enum Action {","    case syncUpsList(SyncUpsList.Action)","  }","  var body: some ReducerOf<Self> {","    Scope(state: \\.syncUpsList, action: \\.syncUpsList) {","      SyncUpsList()","    }","    Reduce { state, action in","      switch action {","      case .syncUpsList:","        return .none","      }","    }","  }","}"],"highlights":[{"line":8}]},"SyncUpDetailNavigation-01-code-0005.swift":{"syntax":"swift","fileName":"App.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  @Reducer","  enum Path {","    case detail(SyncUpDetail)","  }","  @ObservableState","  struct State: Equatable {","    var path = StackState<SyncUpDetail.State>()","    var syncUpsList = SyncUpsList.State()","  }","  enum Action {","    case syncUpsList(SyncUpsList.Action)","  }","  var body: some ReducerOf<Self> {","    Scope(state: \\.syncUpsList, action: \\.syncUpsList) {","      SyncUpsList()","    }","    Reduce { state, action in","      switch action {","      case .syncUpsList:","        return .none","      }","    }","  }","}"],"highlights":[{"line":8}],"fileType":"swift","identifier":"SyncUpDetailNavigation-01-code-0005.swift","type":"file"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackAction/element(id:action:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction\/element(id:action:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"element","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture14StackElementIDV","text":"StackElementID"},{"text":", ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"An action sent to the associated stack element at a given identifier."}],"url":"\/documentation\/composablearchitecture\/stackaction\/element(id:action:)","type":"topic","kind":"symbol","title":"StackAction.element(id:action:)"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Testing-the-timer":{"abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}],"role":"pseudoSymbol","type":"section","kind":"section","title":"Testing the timer","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Testing-the-timer","url":"\/tutorials\/composablearchitecture\/implementingtimer#Testing-the-timer"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpDetail":{"abstract":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"SyncUpDetail"},{"text":" feature has slowly become quite complex. It now handles two forms of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"navigation (an alert and sheet), it models navigation state with a single enum, and it"},{"type":"text","text":" "},{"text":"updates the parent feature via a shared property. It’s about time we got some test","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"coverage on this feature so we can be sure it works as we expect, and so that we can make future"},{"type":"text","text":" "},{"type":"text","text":"changes with confidence."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail","title":"Testing the sync-up detail","type":"topic","kind":"project","url":"\/tutorials\/composablearchitecture\/testingsyncupdetail","role":"project","estimatedTime":"10min"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetail":{"url":"\/tutorials\/composablearchitecture\/syncupdetail","role":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail","abstract":[{"type":"text","text":"The “sync-up detail” screen shows all the information of a sync-up, and has many actions that"},{"type":"text","text":" "},{"text":"can take place in the screen. The user can edit the sync-up, or start a new meeting in the sync","type":"text"},{"text":" ","type":"text"},{"text":"up, or drill-down to a past meeting, or even delete the meeting.","type":"text"}],"estimatedTime":"5min","kind":"project","title":"Sync-up detail","type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation":{"url":"\/tutorials\/composablearchitecture\/meetingnavigation","type":"topic","abstract":[{"type":"text","text":"Now that we have a navigation stack in place we can start navigating to other features in the"},{"type":"text","text":" "},{"type":"text","text":"application. The simplest is the meeting screen, which allows you to see the details of a"},{"type":"text","text":" "},{"type":"text","text":"previous recorded meeting."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation","estimatedTime":"5min","kind":"project","title":"Navigating to a meeting","role":"project"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps#A-tour-of-SyncUps":{"abstract":[{"text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"recreation of Apple’s Scrumdinger demo application."}],"url":"\/tutorials\/composablearchitecture\/whatissyncups#A-tour-of-SyncUps","kind":"section","role":"pseudoSymbol","type":"section","title":"A tour of SyncUps","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#A-tour-of-SyncUps"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingNavigation#Deleting-a-sync-up":{"url":"\/tutorials\/composablearchitecture\/testingnavigation#Deleting-a-sync-up","title":"Deleting a sync-up","abstract":[{"text":"We have now implemented a navigation stack at the root of our application, and integrated","type":"text"},{"type":"text","text":" "},{"text":"3 features into the stack: the ","type":"text"},{"code":"SyncUpsList","type":"codeVoice"},{"type":"text","text":" feature, the "},{"code":"SyncUpDetail","type":"codeVoice"},{"text":" feature, and the","type":"text"},{"type":"text","text":" "},{"code":"MeetingView","type":"codeVoice"},{"type":"text","text":". Some of these features have quite complex logic binding them together, such as"},{"type":"text","text":" "},{"type":"text","text":"when one deletes a sync-up from the detail screen it should pop the screen off the stack."}],"kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation#Deleting-a-sync-up","type":"section"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/What-is-SyncUps-":{"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/What-is-SyncUps-","title":"What is SyncUps?","type":"topic","kind":"article","url":"\/tutorials\/buildingsyncups\/what-is-syncups-","role":"article"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Sync-up-form-basics":{"abstract":[{"text":"We will create a new feature with the Composable Architecture that is capable of editing the","type":"text"},{"text":" ","type":"text"},{"text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"feature to make things a little more interesting."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Sync-up-form-basics","title":"Sync-up form basics","type":"section","kind":"section","url":"\/tutorials\/composablearchitecture\/syncupform#Sync-up-form-basics","role":"pseudoSymbol"},"SyncUpDetailNavigation-01-code-0002.swift":{"fileType":"swift","fileName":"App.swift","syntax":"swift","type":"file","identifier":"SyncUpDetailNavigation-01-code-0002.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  @ObservableState","  struct State: Equatable {","    var syncUpsList = SyncUpsList.State()","  }","  enum Action {","    case syncUpsList(SyncUpsList.Action)","  }","  var body: some ReducerOf<Self> {","    Scope(state: \\.syncUpsList, action: \\.syncUpsList) {","      SyncUpsList()","    }","    Reduce { state, action in","      switch action {","      case .syncUpsList:","        return .none","      }","    }","  }","}"],"highlights":[{"line":8},{"line":11},{"line":14},{"line":15},{"line":16},{"line":19},{"line":20}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#SyncUpsList-feature":{"abstract":[{"type":"text","text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the"},{"type":"text","text":" "},{"type":"text","text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as"},{"type":"text","text":" "},{"type":"text","text":"the app evolves."}],"url":"\/tutorials\/composablearchitecture\/listsofsyncups#SyncUpsList-feature","kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#SyncUpsList-feature","type":"section","title":"SyncUpsList feature"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Creating-the-app-view":{"abstract":[{"type":"text","text":"We will wrap the application built so far in a "},{"type":"codeVoice","code":"NavigationStack"},{"text":" so that we can navigate to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the detail screen. To do this we will create a new root-level feature that will be responsible"},{"type":"text","text":" "},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Creating-the-app-view","kind":"section","role":"pseudoSymbol","title":"Creating the app view","type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-view"},"SyncUpDetailNavigation-01-code-0008.swift":{"syntax":"swift","fileName":"App.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  @Reducer","  enum Path {","    case detail(SyncUpDetail)","  }","  @ObservableState","  struct State: Equatable {","    var path = StackState<Path.State>()","    var syncUpsList = SyncUpsList.State()","  }","  enum Action {","    case path(StackActionOf<Path>)","    case syncUpsList(SyncUpsList.Action)","  }","  var body: some ReducerOf<Self> {","    Scope(state: \\.syncUpsList, action: \\.syncUpsList) {","      SyncUpsList()","    }","    Reduce { state, action in","      switch action {","      case .path:","        return .none","      case .syncUpsList:","        return .none","      }","    }","    .forEach(\\.path, action: \\.path)","  }","}","extension AppFeature.Path.State: Equatable {}"],"highlights":[{"line":31}],"fileType":"swift","identifier":"SyncUpDetailNavigation-01-code-0008.swift","type":"file"},"SyncUpDetailNavigation-02-code-0005.swift":{"fileType":"swift","fileName":"App.swift","syntax":"swift","type":"file","identifier":"SyncUpDetailNavigation-02-code-0005.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  \/\/ ...","}","","struct AppView: View {","  @Bindable var store: StoreOf<AppFeature>","","  var body: some View {","    NavigationStack(","      path: $store.scope(state: \\.path, action: \\.path)","    ) {","      SyncUpsListView(","        store: store.scope(state: \\.syncUpsList, action: \\.syncUpsList)","      )","    } destination: { store in","      switch store.case {","      case let .detail(detailStore):","        ","      }","    }","  }","}"],"highlights":[{"line":20},{"line":21},{"line":22},{"line":23}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation#Navigate-to-a-meeting":{"url":"\/tutorials\/composablearchitecture\/meetingnavigation#Navigate-to-a-meeting","type":"section","abstract":[{"text":"Now that we have a navigation stack in place we can start navigating to other features in the","type":"text"},{"type":"text","text":" "},{"text":"application. The simplest is the meeting screen, which allows you to see the details of a","type":"text"},{"text":" ","type":"text"},{"text":"previous recorded meeting.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#Navigate-to-a-meeting","kind":"section","title":"Navigate to a meeting","role":"pseudoSymbol"},"SyncUpDetailNavigation-02-code-0003.swift":{"type":"file","identifier":"SyncUpDetailNavigation-02-code-0003.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  \/\/ ...","}","","struct AppView: View {","  @Bindable var store: StoreOf<AppFeature>","","  var body: some View {","    NavigationStack(","      path: $store.scope(state: \\.path, action: \\.path)","    ) {","","    } destination: { store in","      ","    }","  }","}"],"highlights":[{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20}],"fileType":"swift","syntax":"swift","fileName":"App.swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Integrating-the-feature-views-together":{"abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"type":"text","text":" "},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"type":"text","text":" "},{"type":"text","text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then"},{"text":" ","type":"text"},{"text":"add that sync-up to the root list.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Integrating-the-feature-views-together","kind":"section","role":"pseudoSymbol","title":"Integrating the feature views together","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-views-together","type":"section"},"SyncUpDetailNavigation-03-code-0001.swift":{"fileType":"swift","fileName":"SyncUpsList.swift","syntax":"swift","type":"file","identifier":"SyncUpDetailNavigation-03-code-0001.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  \/\/ ...","}","","struct SyncUpsListView: View {","  @Bindable var store: StoreOf<SyncUpsList>","","  var body: some View {","    List {","      ForEach(store.syncUps) { syncUp in","        NavigationLink(","          state: ","        ) {","          CardView(syncUp: syncUp)","        }","        .listRowBackground(syncUp.theme.mainColor)","      }","    }","    .sheet(item: $store.scope(state: \\.addSyncUp, action: \\.addSyncUp)) { addSyncUpStore in","      NavigationStack {","        SyncUpFormView(store: addSyncUpStore)","          .navigationTitle(\"New sync-up\")","          .toolbar {","            ToolbarItem(placement: .cancellationAction) {","              Button(\"Discard\") {","                store.send(.discardButtonTapped)","              }","            }","            ToolbarItem(placement: .confirmationAction) {","              Button(\"Add\") {","                store.send(.confirmAddButtonTapped)","              }","            }","          }","      }","    }","    .toolbar {","      Button {","        store.send(.addSyncUpButtonTapped)","      } label: {","        Image(systemName: \"plus\")","      }","    }","    .navigationTitle(\"Daily Sync-ups\")","  }","}","","struct CardView: View {","  let syncUp: SyncUp","","  var body: some View {","    VStack(alignment: .leading) {","      Text(syncUp.title)","        .font(.headline)","      Spacer()","      HStack {","        Label(\"\\(syncUp.attendees.count)\", systemImage: \"person.3\")","        Spacer()","        Label(syncUp.duration.formatted(.units()), systemImage: \"clock\")","          .labelStyle(.trailingIcon)","      }","      .font(.caption)","    }","    .padding()","    .foregroundStyle(syncUp.theme.accentColor)","  }","}","","struct TrailingIconLabelStyle: LabelStyle {","  func makeBody(configuration: Configuration) -> some View {","    HStack {","      configuration.title","      configuration.icon","    }","  }","}","","extension LabelStyle where Self == TrailingIconLabelStyle {","  static var trailingIcon: Self { Self() }","}","","#Preview {","  NavigationStack {","    SyncUpsListView(","      store: Store(","        initialState: SyncUpsList.State(","          syncUps: [.mock]","        )","      ) {","        SyncUpsList()","      }","    )","  }","}"],"highlights":[{"line":15},{"line":16},{"line":17}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Form-focus-a-better-approach":{"abstract":[{"text":"We will create a new feature with the Composable Architecture that is capable of editing the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"type":"text","text":" "},{"text":"feature to make things a little more interesting.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/syncupform#Form-focus-a-better-approach","kind":"section","role":"pseudoSymbol","title":"Form focus: a better approach","type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-a-better-approach"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUI/NavigationStack/init(path:root:destination:fileID:filePath:line:column:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"State","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Action"},{"kind":"text","text":", "},{"text":"Destination","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI7BindingV","kind":"typeIdentifier","text":"Binding"},{"kind":"text","text":"<"},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"text":"StackState","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture10StackStateV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","text":"StackAction","preciseIdentifier":"s:22ComposableArchitecture11StackActionO"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Action","kind":"typeIdentifier"},{"text":">>>, ","kind":"text"},{"kind":"externalParam","text":"root"},{"kind":"text","text":": () -> "},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"destination","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Destination"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"filePath"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":", "},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"conformance":{"constraints":[{"code":"Root","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"View"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"text":"Drives a navigation stack with a store.","type":"text"}],"title":"init(path:root:destination:fileID:filePath:line:column:)","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI\/NavigationStack\/init(path:root:destination:fileID:filePath:line:column:)","url":"\/documentation\/composablearchitecture\/swiftui\/navigationstack\/init(path:root:destination:fileid:filepath:line:column:)"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingListOfSyncUps#Writing-your-first-test":{"abstract":[{"text":"The SyncUpsList feature we have built so far isn’t very complex. In fact, it only has one","type":"text"},{"type":"text","text":" "},{"type":"text","text":"primary action, that of deleting sync-ups from its collection. However, it can be good practice"},{"type":"text","text":" "},{"text":"to test new features as you add them, and in the future we will have much more complicated","type":"text"},{"type":"text","text":" "},{"text":"behavior to test.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/testinglistofsyncups#Writing-your-first-test","kind":"section","role":"pseudoSymbol","title":"Writing your first test","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps#Writing-your-first-test","type":"section"},"https://developer.apple.com/documentation/swiftui/app":{"titleInlineContent":[{"type":"text","text":"App"}],"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/app","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/app","type":"link","title":"App"},"SyncUpDetailNavigation-01-code-0007.swift":{"fileType":"swift","fileName":"App.swift","syntax":"swift","type":"file","identifier":"SyncUpDetailNavigation-01-code-0007.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  @Reducer","  enum Path {","    case detail(SyncUpDetail)","  }","  @ObservableState","  struct State: Equatable {","    var path = StackState<Path.State>()","    var syncUpsList = SyncUpsList.State()","  }","  enum Action {","    case path(StackActionOf<Path>)","    case syncUpsList(SyncUpsList.Action)","  }","  var body: some ReducerOf<Self> {","    Scope(state: \\.syncUpsList, action: \\.syncUpsList) {","      SyncUpsList()","    }","    Reduce { state, action in","      switch action {","      case .path:","        return .none","      case .syncUpsList:","        return .none","      }","    }","  }","}","extension AppFeature.Path.State: Equatable {}"],"highlights":[{"line":16},{"line":25},{"line":26}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm#Adding-attendees":{"kind":"section","title":"Adding attendees","url":"\/tutorials\/composablearchitecture\/testingsyncupform#Adding-attendees","abstract":[{"type":"text","text":"We now have a moderately complex feature for editing the details of a sync-up, the "},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":" "},{"type":"text","text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come"},{"text":" ","type":"text"},{"text":"face-to-face with dependencies for the first time in this tutorial.","type":"text"}],"role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Adding-attendees","type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature":{"url":"\/tutorials\/composablearchitecture\/recordmeetingfeature","role":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature","abstract":[{"text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will","type":"text"},{"type":"text","text":" "},{"type":"text","text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer."}],"estimatedTime":"5min","kind":"project","title":"The RecordMeeting feature","type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation#Non-exhaustive-testing":{"abstract":[{"type":"text","text":"We have now integrated two moderately complex features, the "},{"code":"SyncUpsList","type":"codeVoice"},{"type":"text","text":" and "},{"code":"SyncUpForm","type":"codeVoice"},{"text":", and","type":"text"},{"type":"text","text":" "},{"text":"so its time to write some tests. This will give us the opportunity to prove that the features","type":"text"},{"type":"text","text":" "},{"type":"text","text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less"},{"type":"text","text":" "},{"text":"fragile.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Non-exhaustive-testing","type":"section","title":"Non-exhaustive testing","kind":"section","url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation#Non-exhaustive-testing","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpDetail#Testing-the-edit-flow":{"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":" feature has slowly become quite complex. It now handles two forms of"},{"text":" ","type":"text"},{"type":"text","text":"navigation (an alert and sheet), it models navigation state with a single enum, and it"},{"text":" ","type":"text"},{"text":"updates the parent feature via a shared property. It’s about time we got some test","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"coverage on this feature so we can be sure it works as we expect, and so that we can make future"},{"type":"text","text":" "},{"type":"text","text":"changes with confidence."}],"url":"\/tutorials\/composablearchitecture\/testingsyncupdetail#Testing-the-edit-flow","kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail#Testing-the-edit-flow","title":"Testing the edit flow","type":"section"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Scope","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Scope"}],"title":"Scope","url":"\/documentation\/composablearchitecture\/scope","abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain."}],"kind":"symbol"},"SyncUpDetailNavigation-02-code-0004.swift":{"syntax":"swift","fileName":"App.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  \/\/ ...","}","","struct AppView: View {","  @Bindable var store: StoreOf<AppFeature>","","  var body: some View {","    NavigationStack(","      path: $store.scope(state: \\.path, action: \\.path)","    ) {","      SyncUpsListView(","        store: store.scope(state: \\.syncUpsList, action: \\.syncUpsList)","      )","    } destination: { store in","      ","    }","  }","}"],"highlights":[{"line":16},{"line":17},{"line":18}],"identifier":"SyncUpDetailNavigation-02-code-0004.swift","fileType":"swift","type":"file"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list":{"abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"type":"text","text":" "},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"type":"text","text":" "},{"text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then","type":"text"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}],"url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Adding-a-new-sync-up-to-the-list","kind":"section","role":"pseudoSymbol","type":"section","title":"Adding a new sync-up to the list","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Presenting-the-sync-up-form":{"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Presenting-the-sync-up-form","title":"Presenting the sync-up form","type":"topic","kind":"article","url":"\/tutorials\/buildingsyncups\/presenting-the-sync-up-form","role":"article"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Integrating-the-feature-domains-together":{"title":"Integrating the feature domains together","type":"section","role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-domains-together","kind":"section","abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"type":"text","text":" "},{"text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}],"url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Integrating-the-feature-domains-together"},"SyncUpDetailNavigation-02-code-0001.swift":{"fileType":"swift","fileName":"App.swift","syntax":"swift","type":"file","identifier":"SyncUpDetailNavigation-02-code-0001.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  \/\/ ...","}","","struct AppView: View {","}"],"highlights":[{"line":8},{"line":9},{"line":10}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps#Create-the-SyncUps-project":{"abstract":[{"type":"text","text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a"},{"type":"text","text":" "},{"text":"recreation of Apple’s Scrumdinger demo application.","type":"text"}],"role":"pseudoSymbol","type":"section","url":"\/tutorials\/composablearchitecture\/whatissyncups#Create-the-SyncUps-project","title":"Create the SyncUps project","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#Create-the-SyncUps-project"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation#Adding-a-sync-up":{"abstract":[{"type":"text","text":"We have now integrated two moderately complex features, the "},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" and "},{"type":"codeVoice","code":"SyncUpForm"},{"text":", and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"so its time to write some tests. This will give us the opportunity to prove that the features"},{"type":"text","text":" "},{"text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"fragile."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Adding-a-sync-up","title":"Adding a sync-up","type":"section","kind":"section","url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation#Adding-a-sync-up","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Creating-the-app-feature":{"abstract":[{"type":"text","text":"We will wrap the application built so far in a "},{"code":"NavigationStack","type":"codeVoice"},{"type":"text","text":" so that we can navigate to"},{"text":" ","type":"text"},{"text":"the detail screen. To do this we will create a new root-level feature that will be responsible","type":"text"},{"type":"text","text":" "},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Creating-the-app-feature","kind":"section","role":"pseudoSymbol","title":"Creating the app feature","type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-feature"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#A-basic-timer":{"kind":"section","title":"A basic timer","url":"\/tutorials\/composablearchitecture\/implementingtimer#A-basic-timer","abstract":[{"text":"The first major piece of logic and behavior we will introduce to the record meeting feature is","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}],"role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#A-basic-timer","type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation#The-meeting-screen":{"url":"\/tutorials\/composablearchitecture\/meetingnavigation#The-meeting-screen","title":"The meeting screen","abstract":[{"type":"text","text":"Now that we have a navigation stack in place we can start navigating to other features in the"},{"text":" ","type":"text"},{"text":"application. The simplest is the meeting screen, which allows you to see the details of a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"previous recorded meeting."}],"kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#The-meeting-screen","type":"section"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/forEach(_:action:)":{"type":"topic","kind":"symbol","title":"forEach(_:action:)","url":"\/documentation\/composablearchitecture\/reducer\/foreach(_:action:)","abstract":[{"text":"A special overload of ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:destination:fileID:filePath:line:column:)-9svqb","type":"reference"},{"type":"text","text":" for enum"},{"type":"text","text":" "},{"type":"text","text":"reducers."}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"forEach","kind":"identifier"},{"kind":"text","text":"<"},{"text":"DestinationState","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"DestinationAction"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"text":"StackState","preciseIdentifier":"s:22ComposableArchitecture10StackStateV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"kind":"externalParam","text":"action"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action"},{"kind":"text","text":", "},{"text":"StackAction","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture11StackActionO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"DestinationState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"DestinationAction"},{"text":">>) -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"Reducer","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action","kind":"typeIdentifier"},{"text":">\n","kind":"text"}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm":{"url":"\/tutorials\/composablearchitecture\/testingsyncupform","role":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm","abstract":[{"text":"We now have a moderately complex feature for editing the details of a sync-up, the ","type":"text"},{"type":"codeVoice","code":"SyncUpForm"},{"text":" ","type":"text"},{"type":"text","text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come"},{"type":"text","text":" "},{"type":"text","text":"face-to-face with dependencies for the first time in this tutorial."}],"estimatedTime":"10min","kind":"project","title":"Testing the sync-up form","type":"topic"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/New-sync-up-form":{"url":"\/tutorials\/buildingsyncups\/new-sync-up-form","type":"topic","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/New-sync-up-form","kind":"article","title":"New sync-up form","role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUI/NavigationLink/init(state:label:fileID:filePath:line:column:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"L"},{"text":">(","kind":"text"},{"text":"state","kind":"externalParam"},{"kind":"text","text":": "},{"text":"P","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"label"},{"text":": () -> ","kind":"text"},{"kind":"typeIdentifier","text":"L"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"filePath","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":")","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI\/NavigationLink\/init(state:label:fileID:filePath:line:column:)","conformance":{"constraints":[{"type":"codeVoice","code":"Label"},{"type":"text","text":" conforms to "},{"code":"View","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Destination","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Never"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"type":"text","text":"Creates a navigation link that presents the view corresponding to an element of"},{"type":"text","text":" "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","type":"reference"},{"type":"text","text":"."}],"title":"init(state:label:fileID:filePath:line:column:)","type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture\/swiftui\/navigationlink\/init(state:label:fileid:filepath:line:column:)","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer()":{"url":"\/documentation\/composablearchitecture\/reducer()","abstract":[{"text":"Helps implement the conformance to the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","type":"reference"},{"type":"text","text":" protocol for a type."}],"role":"symbol","title":"Reducer()","type":"topic","kind":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Reducer"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation":{"estimatedTime":"10min","title":"Testing the add sync-up flow","type":"topic","role":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation","kind":"project","abstract":[{"text":"We have now integrated two moderately complex features, the ","type":"text"},{"code":"SyncUpsList","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":", and"},{"type":"text","text":" "},{"type":"text","text":"so its time to write some tests. This will give us the opportunity to prove that the features"},{"type":"text","text":" "},{"text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less","type":"text"},{"type":"text","text":" "},{"type":"text","text":"fragile."}],"url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation"},"SyncUpDetailNavigation-03-code-0004.swift":{"syntax":"swift","fileName":"SyncUpsList.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  \/\/ ...","}","","struct SyncUpsListView: View {","  @Bindable var store: StoreOf<SyncUpsList>","","  var body: some View {","    List {","      ForEach(store.$syncUps) { $syncUp in","        NavigationLink(","          state: AppFeature.Path.State.detail(SyncUpDetail.State(syncUp: $syncUp))","        ) {","          CardView(syncUp: syncUp)","        }","        .listRowBackground(syncUp.theme.mainColor)","      }","    }","    .sheet(item: $store.scope(state: \\.addSyncUp, action: \\.addSyncUp)) { addSyncUpStore in","      NavigationStack {","        SyncUpFormView(store: addSyncUpStore)","          .navigationTitle(\"New sync-up\")","          .toolbar {","            ToolbarItem(placement: .cancellationAction) {","              Button(\"Discard\") {","                store.send(.discardButtonTapped)","              }","            }","            ToolbarItem(placement: .confirmationAction) {","              Button(\"Add\") {","                store.send(.confirmAddButtonTapped)","              }","            }","          }","      }","    }","    .toolbar {","      Button {","        store.send(.addSyncUpButtonTapped)","      } label: {","        Image(systemName: \"plus\")","      }","    }","    .navigationTitle(\"Daily Sync-ups\")","  }","}","","struct CardView: View {","  let syncUp: SyncUp","","  var body: some View {","    VStack(alignment: .leading) {","      Text(syncUp.title)","        .font(.headline)","      Spacer()","      HStack {","        Label(\"\\(syncUp.attendees.count)\", systemImage: \"person.3\")","        Spacer()","        Label(syncUp.duration.formatted(.units()), systemImage: \"clock\")","          .labelStyle(.trailingIcon)","      }","      .font(.caption)","    }","    .padding()","    .foregroundStyle(syncUp.theme.accentColor)","  }","}","","struct TrailingIconLabelStyle: LabelStyle {","  func makeBody(configuration: Configuration) -> some View {","    HStack {","      configuration.title","      configuration.icon","    }","  }","}","","extension LabelStyle where Self == TrailingIconLabelStyle {","  static var trailingIcon: Self { Self() }","}","","#Preview {","  NavigationStack {","    SyncUpsListView(","      store: Store(","        initialState: SyncUpsList.State(","          syncUps: [.mock]","        )","      ) {","        SyncUpsList()","      }","    )","  }","}"],"highlights":[{"line":14},{"line":16}],"identifier":"SyncUpDetailNavigation-03-code-0004.swift","fileType":"swift","type":"file"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer#Destination-and-path-reducers":{"url":"\/documentation\/composablearchitecture\/reducer#Destination-and-path-reducers","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer#Destination-and-path-reducers","type":"topic","title":"Destination and path reducers","abstract":[],"kind":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps#Testing-persistence":{"url":"\/tutorials\/composablearchitecture\/persistingsyncups#Testing-persistence","type":"section","abstract":[{"type":"text","text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some"},{"text":" ","type":"text"},{"text":"persistence. This will involve using the “shared state” tools from the library, such as","type":"text"},{"type":"text","text":" "},{"code":"@Shared","type":"codeVoice"},{"type":"text","text":" and "},{"code":"fileStorage","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Testing-persistence","kind":"section","title":"Testing persistence","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingListOfSyncUps":{"abstract":[{"text":"The SyncUpsList feature we have built so far isn’t very complex. In fact, it only has one","type":"text"},{"text":" ","type":"text"},{"text":"primary action, that of deleting sync-ups from its collection. However, it can be good practice","type":"text"},{"type":"text","text":" "},{"text":"to test new features as you add them, and in the future we will have much more complicated","type":"text"},{"type":"text","text":" "},{"text":"behavior to test.","type":"text"}],"title":"Testing the list of sync-ups","url":"\/tutorials\/composablearchitecture\/testinglistofsyncups","estimatedTime":"5min","kind":"project","role":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackAction/popFrom(id:)":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction\/popFrom(id:)","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"popFrom","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture14StackElementIDV","text":"StackElementID"},{"text":")","kind":"text"}],"title":"StackAction.popFrom(id:)","url":"\/documentation\/composablearchitecture\/stackaction\/popfrom(id:)","abstract":[{"type":"text","text":"An action sent to dismiss the associated stack element at a given identifier."}],"kind":"symbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Controlling-dependencies-early":{"abstract":[{"text":"The first major piece of logic and behavior we will introduce to the record meeting feature is","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"text":"we need to implement nuanced logic to figure out when to proceed to the next speaker.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Controlling-dependencies-early","title":"Controlling dependencies early","type":"section","kind":"section","url":"\/tutorials\/composablearchitecture\/implementingtimer#Controlling-dependencies-early","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm":{"abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"type":"text","text":" "},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"text":" ","type":"text"},{"text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then","type":"text"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm","title":"Presenting the sync-up form","kind":"project","type":"topic","url":"\/tutorials\/composablearchitecture\/presentingsyncupform","role":"project","estimatedTime":"10min"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Navigating-to-the-detail":{"url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Navigating-to-the-detail","type":"section","abstract":[{"text":"We will wrap the application built so far in a ","type":"text"},{"code":"NavigationStack","type":"codeVoice"},{"type":"text","text":" so that we can navigate to"},{"text":" ","type":"text"},{"text":"the detail screen. To do this we will create a new root-level feature that will be responsible","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Navigating-to-the-detail","kind":"section","title":"Navigating to the detail","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#Editing-the-sync-up":{"abstract":[{"text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"text":" ","type":"text"},{"text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#Editing-the-sync-up","kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Editing-the-sync-up","title":"Editing the sync-up","type":"section"}}}