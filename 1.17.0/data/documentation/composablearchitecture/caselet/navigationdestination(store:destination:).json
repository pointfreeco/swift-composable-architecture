{"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/composablearchitecture\/caselet\/navigationdestination(store:destination:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/navigationDestination(store:destination:)","interfaceLanguage":"swift"},"deprecationSummary":[{"inlineContent":[{"text":"Pass a binding of a store to 'navigationDestination(item:)' instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Replacing-navigation-view-modifiers-with-SwiftUI-modifiers]","type":"text"}],"type":"paragraph"}],"abstract":[{"text":"Associates a destination view with a store that can be used to push the view onto a","type":"text"},{"type":"text","text":" "},{"code":"NavigationStack","type":"codeVoice"},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@"},{"text":"MainActor","preciseIdentifier":"s:ScM","kind":"attribute"},{"kind":"text","text":" "},{"kind":"attribute","text":"@preconcurrency"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"navigationDestination"},{"kind":"text","text":"<"},{"text":"State","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Action","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Destination","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"store","kind":"externalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier","text":"Store"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","text":"PresentationState","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":">, "},{"preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO","text":"PresentationAction","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"text":"@","kind":"attribute"},{"text":"ViewBuilder","kind":"attribute","preciseIdentifier":"s:7SwiftUI11ViewBuilderV"},{"text":" ","kind":"text"},{"text":"destination","kind":"externalParam"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">) -> "},{"text":"Destination","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Destination"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"},{"text":"\n","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"A store that is focused on ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","type":"reference","isActive":true},{"text":" and ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","isActive":true},{"type":"text","text":" for"},{"type":"text","text":" "},{"type":"text","text":"a screen. When "},{"type":"codeVoice","code":"store"},{"text":"‘s state is non-","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":", the system passes a store of unwrapped"},{"type":"text","text":" "},{"type":"codeVoice","code":"State"},{"text":" and ","type":"text"},{"code":"Action","type":"codeVoice"},{"type":"text","text":" to the modifier’s closure. You use this store to power the content"},{"text":" ","type":"text"},{"type":"text","text":"in a view that the system pushes onto the navigation stack. If "},{"code":"store","type":"codeVoice"},{"type":"text","text":"’s state is"},{"text":" ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"-ed out, the system pops the view from the stack."}],"type":"paragraph"}],"name":"store"},{"name":"destination","content":[{"inlineContent":[{"text":"A closure returning the content of the destination view.","type":"text"}],"type":"paragraph"}]}]},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"content":[{"inlineContent":[{"type":"text","text":"This is a Composable Architecture-friendly version of SwiftUI’s"},{"text":" ","type":"text"},{"code":"navigationDestination(isPresented:)","type":"codeVoice"},{"type":"text","text":" view modifier."}],"type":"paragraph"}],"type":"aside","style":"note","name":"Note"}],"kind":"content"}],"sections":[],"metadata":{"platforms":[{"deprecatedAt":"9999.0","beta":false,"introducedAt":"16.0","unavailable":false,"message":"Pass a binding of a store to 'navigationDestination(item:)' instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Replacing-navigation-view-modifiers-with-SwiftUI-modifiers]","deprecated":false,"name":"iOS"},{"deprecatedAt":"9999.0","message":"Pass a binding of a store to 'navigationDestination(item:)' instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Replacing-navigation-view-modifiers-with-SwiftUI-modifiers]","beta":false,"name":"macOS","unavailable":false,"deprecated":false,"introducedAt":"13.0"},{"name":"tvOS","message":"Pass a binding of a store to 'navigationDestination(item:)' instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Replacing-navigation-view-modifiers-with-SwiftUI-modifiers]","introducedAt":"16.0","beta":false,"unavailable":false,"deprecated":false,"deprecatedAt":"9999.0"},{"deprecated":false,"name":"watchOS","unavailable":false,"message":"Pass a binding of a store to 'navigationDestination(item:)' instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Replacing-navigation-view-modifiers-with-SwiftUI-modifiers]","introducedAt":"9.0","deprecatedAt":"9999.0","beta":false}],"role":"symbol","roleHeading":"Instance Method","symbolKind":"method","extendedModule":"SwiftUICore","title":"navigationDestination(store:destination:)","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"externalID":"s:7SwiftUI4ViewP22ComposableArchitectureE21navigationDestination5store11destinationQrAD5StoreCyAD17PresentationStateVyqd__GAD0K6ActionOyqd_0_GG_qd_1_AIyqd__qd_0_GctAaBRd_1_r1_lF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"navigationDestination"},{"text":"<","kind":"text"},{"text":"State","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Action","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Destination"},{"kind":"text","text":">("},{"text":"store","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","kind":"typeIdentifier","text":"PresentationState"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":">, "},{"preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO","text":"PresentationAction","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">>, "},{"text":"destination","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">) -> "},{"text":"Destination","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}]},"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"type":"topic","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuideprecations","title":"Deprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"type":"topic","kind":"article","title":"SwiftUI Integration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"url":"\/documentation\/composablearchitecture\/caselet","role":"symbol","navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"kind":"symbol","deprecated":true,"abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"type":"text","text":"."}],"title":"CaseLet","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CaseLet","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","kind":"symbol","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"url":"\/documentation\/composablearchitecture\/switchstore","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"kind":"symbol","deprecated":true,"abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"type":"text","text":" views."}],"title":"SwitchStore","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"SwitchStore","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"PresentationState","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","navigatorTitle":[{"text":"PresentationState","kind":"identifier"}],"abstract":[{"type":"text","text":"A property wrapper for state that can be presented."}],"title":"PresentationState","role":"symbol","kind":"symbol","url":"\/documentation\/composablearchitecture\/presentationstate"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/navigationDestination(store:destination:)":{"role":"symbol","kind":"symbol","title":"navigationDestination(store:destination:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"navigationDestination","kind":"identifier"},{"text":"<","kind":"text"},{"text":"State","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Action","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Destination","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"store","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier","text":"Store"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"PresentationState","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":">, "},{"text":"PresentationAction","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO"},{"kind":"text","text":"<"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">>, "},{"text":"destination","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Destination"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/navigationDestination(store:destination:)","abstract":[{"type":"text","text":"Associates a destination view with a store that can be used to push the view onto a"},{"type":"text","text":" "},{"type":"codeVoice","code":"NavigationStack"},{"text":".","type":"text"}],"type":"topic","url":"\/documentation\/composablearchitecture\/caselet\/navigationdestination(store:destination:)","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","role":"collectionGroup","kind":"article","abstract":[],"title":"View Implementations","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A wrapper type for actions that can be presented."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","navigatorTitle":[{"kind":"identifier","text":"PresentationAction"}],"url":"\/documentation\/composablearchitecture\/presentationaction","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PresentationAction","kind":"identifier"}],"title":"PresentationAction"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"role":"symbol","title":"Store","navigatorTitle":[{"text":"Store","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/store","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"text":"around to views that need to interact with the application.","type":"text"}],"type":"topic"}}}