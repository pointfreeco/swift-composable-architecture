{"metadata":{"externalID":"s:7SwiftUI4ViewPAAE21textSelectionAffinityyQrAA04TexteF0OF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"title":"textSelectionAffinity(_:)","extendedModule":"SwiftUICore","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"textSelectionAffinity","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI21TextSelectionAffinityO","text":"TextSelectionAffinity"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"role":"symbol","platforms":[{"name":"iOS","introducedAt":"18.0","unavailable":false,"beta":false,"deprecated":false},{"name":"macOS","deprecated":false,"introducedAt":"15.0","beta":false,"unavailable":false},{"introducedAt":"18.0","deprecated":false,"name":"tvOS","beta":false,"unavailable":false},{"beta":false,"unavailable":false,"introducedAt":"2.0","name":"visionOS","deprecated":false},{"deprecated":false,"introducedAt":"11.0","beta":false,"unavailable":false,"name":"watchOS"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/textselectionaffinity(_:)"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"nonisolated"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"textSelectionAffinity","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"affinity"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI21TextSelectionAffinityO","kind":"typeIdentifier","text":"TextSelectionAffinity"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":"\n"}],"platforms":["macOS"],"languages":["swift"]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/textSelectionAffinity(_:)"},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"View.textSelectionAffinity(_:)"},{"type":"text","text":"."}],"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","kind":"symbol","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"type":"topic","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuideprecations","title":"Deprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"IfLetStore","kind":"identifier"}],"title":"IfLetStore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}],"url":"\/documentation\/composablearchitecture\/ifletstore","deprecated":true,"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","abstract":[],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","type":"topic","title":"View Implementations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/textSelectionAffinity(_:)":{"abstract":[],"role":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore\/textselectionaffinity(_:)","kind":"symbol","title":"textSelectionAffinity(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"textSelectionAffinity","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"TextSelectionAffinity","preciseIdentifier":"s:7SwiftUI21TextSelectionAffinityO"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/textSelectionAffinity(_:)","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"type":"topic","kind":"article","title":"SwiftUI Integration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration"}}}