{"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/composablearchitecture\/observationstatetracked()"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()"]]},"sections":[],"metadata":{"symbolKind":"macro","roleHeading":"Macro","externalID":"s:22ComposableArchitecture23ObservationStateTrackedyycfm","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservationStateTracked","kind":"identifier"},{"kind":"text","text":"()"}],"modules":[{"name":"ComposableArchitecture"}],"title":"ObservationStateTracked()"},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateTracked()","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"@attached","kind":"attribute"},{"kind":"text","text":"(accessor, names: named(init), named(get), named(set)) "},{"kind":"attribute","text":"@attached"},{"text":"(peer, names: prefixed(`_`)) ","kind":"text"},{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ObservationStateTracked"},{"text":"()","kind":"text"}],"platforms":["macOS"]}]}],"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateIgnored()"],"generated":true,"title":"Supporting macros","anchor":"Supporting-macros"}],"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","role":"symbol","title":"Effect","navigatorTitle":[{"text":"Effect","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Effect","kind":"identifier"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateTracked()":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateTracked()","kind":"symbol","abstract":[],"role":"symbol","url":"\/documentation\/composablearchitecture\/observationstatetracked()","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"ObservationStateTracked","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","title":"ObservationStateTracked()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateIgnored()":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateIgnored()","role":"symbol","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"ObservationStateIgnored","kind":"identifier"},{"kind":"text","text":"()"}],"title":"ObservationStateIgnored()","url":"\/documentation\/composablearchitecture\/observationstateignored()","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"url":"\/documentation\/composablearchitecture\/reducer\/state","title":"State","abstract":[{"text":"A type that holds the current state of the reducer.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"State","kind":"identifier"}],"type":"topic","required":true,"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState()":{"kind":"symbol","abstract":[{"type":"text","text":"Defines and implements conformance of the Observable protocol."}],"fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"ObservableState","kind":"identifier"},{"kind":"text","text":"()"}],"url":"\/documentation\/composablearchitecture\/observablestate()","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","role":"symbol","title":"ObservableState()","type":"topic"}}}