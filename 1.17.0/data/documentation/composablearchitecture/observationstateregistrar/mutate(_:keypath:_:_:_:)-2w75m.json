{"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar\/mutate(_:keyPath:_:_:_:)-2w75m"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar"]]},"variants":[{"paths":["\/documentation\/composablearchitecture\/observationstateregistrar\/mutate(_:keypath:_:_:_:)-2w75m"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"extendedModule":"ComposableArchitecture","roleHeading":"Instance Method","role":"symbol","title":"mutate(_:keyPath:_:_:_:)","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"mutate","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Subject","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Member"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":", "},{"kind":"externalParam","text":"keyPath"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Subject","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Member"},{"kind":"text","text":">, "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"externalID":"s:22ComposableArchitecture25ObservationStateRegistrarV6mutate_7keyPath___yx_s03KeyH0Cyxq_Gq0_zq0_Sbq0__q0_tXEt0C010ObservableRzr1_lF","platforms":[{"introducedAt":"17.0","name":"iOS","unavailable":false,"beta":false,"deprecated":false},{"introducedAt":"14.0","deprecated":false,"beta":false,"name":"macOS","unavailable":false},{"introducedAt":"17.0","beta":false,"deprecated":false,"unavailable":false,"name":"tvOS"},{"beta":false,"name":"watchOS","introducedAt":"10.0","deprecated":false,"unavailable":false}],"modules":[{"name":"ComposableArchitecture"}]},"abstract":[{"type":"text","text":"Mutates a value to a new value, and decided to notify observers based on the identity of"},{"text":" ","type":"text"},{"text":"the value.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"mutate","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Subject"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Member"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"subject"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":", "},{"kind":"externalParam","text":"keyPath"},{"text":": ","kind":"text"},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Subject","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Member"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"newValue"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"isIdentityEqual"},{"text":": (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Subject"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Observation10ObservableP","text":"Observable"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"An instance of an observable type.","type":"text"}],"type":"paragraph"}],"name":"subject"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The key path of an observed property."}]}],"name":"keyPath"},{"name":"value","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value being mutated."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The new value to mutate with."}]}],"name":"newValue"},{"name":"isIdentityEqual","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A comparison function that determines whether two values have the"},{"type":"text","text":" "},{"text":"same identity or not.","type":"text"}]}]}],"kind":"parameters"}],"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","kind":"symbol","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateRegistrar":{"kind":"symbol","type":"topic","abstract":[{"text":"Provides storage for tracking and access to data changes.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar","navigatorTitle":[{"text":"ObservationStateRegistrar","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/observationstateregistrar","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservationStateRegistrar","kind":"identifier"}],"title":"ObservationStateRegistrar"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateRegistrar/mutate(_:keyPath:_:_:_:)-2w75m":{"kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Mutates a value to a new value, and decided to notify observers based on the identity of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the value."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"mutate","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Subject","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Member","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Subject","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"keyPath","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Member"},{"text":">, ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar\/mutate(_:keyPath:_:_:_:)-2w75m","title":"mutate(_:keyPath:_:_:_:)","url":"\/documentation\/composablearchitecture\/observationstateregistrar\/mutate(_:keypath:_:_:_:)-2w75m"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState()":{"url":"\/documentation\/composablearchitecture\/observablestate()","title":"ObservableState()","role":"symbol","type":"topic","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableState","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","abstract":[{"text":"Defines and implements conformance of the Observable protocol.","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"kind":"symbol","role":"symbol","title":"State","type":"topic","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"State"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","url":"\/documentation\/composablearchitecture\/reducer\/state","abstract":[{"type":"text","text":"A type that holds the current state of the reducer."}],"required":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"text":" ","type":"text"},{"type":"text","text":"given an action, and describes what "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference"},{"text":"s should be executed later by the store, if any.","type":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","title":"Effect","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}],"role":"symbol"}}}