{"variants":[{"paths":["\/documentation\/composablearchitecture\/viewstore\/binding(get:send:)-65xes"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"externalID":"s:22ComposableArchitecture9ViewStoreC7binding3get4send7SwiftUI7BindingVyqd__Gqd__xc_q_qd__ctlF","platforms":[],"roleHeading":"Instance Method","role":"symbol","title":"binding(get:send:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binding","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"get","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"send","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"symbolKind":"method","modules":[{"name":"ComposableArchitecture"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(get:send:)-65xes"},"sections":[],"abstract":[{"text":"Derives a binding from the store that prevents direct writes to state and instead sends","type":"text"},{"text":" ","type":"text"},{"text":"actions to the store.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"topicSections":[{"anchor":"Overloads","title":"Overloads","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(get:send:)-l66r","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(send:)-7nwak","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(send:)-705m7"]}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use '@ObservableState', instead. See the following migration guide for more information: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Using-ObservableState"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"kind":"attribute","text":"MainActor","preciseIdentifier":"s:ScM"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"binding"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"externalParam","text":"get"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"send"},{"kind":"text","text":" "},{"kind":"internalParam","text":"valueToAction"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Binding","preciseIdentifier":"s:7SwiftUI7BindingV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"platforms":["macOS"]}]},{"parameters":[{"name":"get","content":[{"type":"paragraph","inlineContent":[{"text":"A function to get the state for the binding from the view store’s full state.","type":"text"}]}]},{"name":"valueToAction","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A function that transforms the binding’s value into an action that can be"},{"type":"text","text":" "},{"type":"text","text":"sent to the store."}]}]}],"kind":"parameters"},{"content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"text":"A binding.","type":"text"}]}],"kind":"content"},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The method is useful for dealing with SwiftUI components that work with two-way "},{"code":"Binding","type":"codeVoice"},{"type":"text","text":"s"},{"type":"text","text":" "},{"type":"text","text":"since the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true,"type":"reference"},{"type":"text","text":" does not allow directly writing its state; it only allows reading state"},{"type":"text","text":" "},{"type":"text","text":"and sending actions."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, a text field binding can be created like this:"}]},{"type":"codeListing","code":["struct State { var name = \"\" }","enum Action { case nameChanged(String) }","","TextField(","  \"Enter name\",","  text: viewStore.binding(","    get: { $0.name },","    send: { Action.nameChanged($0) }","  )",")"],"syntax":"swift"}],"kind":"content"}],"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"kind":"article","title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/binding(get:send:)-65xes":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binding","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"get","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"send","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","deprecated":true,"type":"topic","url":"\/documentation\/composablearchitecture\/viewstore\/binding(get:send:)-65xes","title":"binding(get:send:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(get:send:)-65xes","abstract":[{"text":"Derives a binding from the store that prevents direct writes to state and instead sends","type":"text"},{"text":" ","type":"text"},{"text":"actions to the store.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","type":"topic","title":"Deprecations","kind":"article","url":"\/documentation\/composablearchitecture\/swiftuideprecations","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/binding(get:send:)-l66r":{"url":"\/documentation\/composablearchitecture\/viewstore\/binding(get:send:)-l66r","role":"symbol","abstract":[{"type":"text","text":"Derives a binding from the store that prevents direct writes to state and instead sends"},{"type":"text","text":" "},{"type":"text","text":"actions to the store."}],"type":"topic","title":"binding(get:send:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binding","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"get","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"send","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(get:send:)-l66r"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","type":"topic","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/binding(send:)-7nwak":{"url":"\/documentation\/composablearchitecture\/viewstore\/binding(send:)-7nwak","role":"symbol","abstract":[{"type":"text","text":"Derives a binding from the store that prevents direct writes to state and instead sends"},{"type":"text","text":" "},{"type":"text","text":"actions to the store."}],"type":"topic","title":"binding(send:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binding","kind":"identifier"},{"text":"(","kind":"text"},{"text":"send","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(send:)-7nwak"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/binding(send:)-705m7":{"url":"\/documentation\/composablearchitecture\/viewstore\/binding(send:)-705m7","role":"symbol","abstract":[{"type":"text","text":"Derives a binding from the store that prevents direct writes to state and instead sends"},{"type":"text","text":" "},{"type":"text","text":"actions to the store."}],"type":"topic","title":"binding(send:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binding","kind":"identifier"},{"text":"(","kind":"text"},{"text":"send","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(send:)-705m7"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewStore"}],"title":"ViewStore","role":"symbol","abstract":[{"text":"A ","type":"text"},{"code":"ViewStore","type":"codeVoice"},{"text":" is an object that can observe state changes and send actions. They are most","type":"text"},{"text":" ","type":"text"},{"text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used","type":"text"},{"text":" ","type":"text"},{"text":"anywhere it makes sense to observe state or send actions.","type":"text"}],"url":"\/documentation\/composablearchitecture\/viewstore","navigatorTitle":[{"kind":"identifier","text":"ViewStore"}],"deprecated":true,"type":"topic","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"navigatorTitle":[{"kind":"identifier","text":"Store"}],"url":"\/documentation\/composablearchitecture\/store","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","kind":"symbol","title":"Store","role":"symbol"}}}