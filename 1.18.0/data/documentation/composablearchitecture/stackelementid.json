{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StackElementID"}]}]},{"content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState"},{"text":" type creates instances of this identifier when new elements are added to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the stack. This makes it possible to easily look up specific elements in the stack without"},{"text":" ","type":"text"},{"text":"resorting to positional indices, which can be error prone, especially when dealing with async","type":"text"},{"type":"text","text":" "},{"type":"text","text":"effects."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"The identifier is backed by a deterministic, generational ID. This allows you to predict how","type":"text"},{"type":"text","text":" "},{"type":"text","text":"IDs will be created and allows you to write tests for how features behave in the stack."}]},{"syntax":"swift","type":"codeListing","code":["@Test","func basics() {","  var path = StackState<Int>()","  path.append(42)","  XCTAssertEqual(path[id: 0], 42)","  path.append(1729)","  XCTAssertEqual(path[id: 1], 1729)","","  path.removeAll()","  path.append(-1)","  XCTAssertEqual(path[id: 2], -1)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Notice that after removing all elements and appending a new element, the ID generated was 2 and"},{"text":" ","type":"text"},{"text":"did not go back to 0. This is because in tests the IDs are ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"generational"}]},{"text":", which means they","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"keep counting up, even if you remove elements from the stack."}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/stackelementid"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","topicSections":[{"generated":true,"title":"Default Implementations","anchor":"Default-Implementations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/CustomDebugStringConvertible-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/CustomDumpStringConvertible-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/Equatable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/ExpressibleByIntegerLiteral-Implementations"]}],"relationshipsSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/10CustomDump0aB17StringConvertibleP","doc:\/\/ComposableArchitecture\/s8CopyableP","doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP","doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/s27ExpressibleByIntegerLiteralP","doc:\/\/ComposableArchitecture\/SH","doc:\/\/ComposableArchitecture\/s8SendableP"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"]]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID","interfaceLanguage":"swift"},"sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"StackElementID","kind":"identifier"}],"navigatorTitle":[{"text":"StackElementID","kind":"identifier"}],"roleHeading":"Structure","externalID":"s:22ComposableArchitecture14StackElementIDV","role":"symbol","symbolKind":"struct","modules":[{"name":"ComposableArchitecture"}],"title":"StackElementID"},"abstract":[{"text":"An opaque type that identifies an element of ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState"},{"type":"text","text":"."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"seeAlsoSections":[{"title":"Stack-based navigation","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackActionOf","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:destination:fileID:filePath:line:column:)-9svqb"],"anchor":"Stack-based-navigation","generated":true}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/forEach(_:action:destination:fileID:filePath:line:column:)-9svqb":{"url":"\/documentation\/composablearchitecture\/reducer\/foreach(_:action:destination:fileid:filepath:line:column:)-9svqb","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:destination:fileID:filePath:line:column:)-9svqb","type":"topic","kind":"symbol","title":"forEach(_:action:destination:fileID:filePath:line:column:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"forEach"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"DestinationState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"DestinationAction"},{"text":", ","kind":"text"},{"text":"Destination","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture10StackStateV","text":"StackState","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"DestinationState"},{"text":">>, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture11StackActionO","text":"StackAction"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"DestinationAction"},{"text":">>, ","kind":"text"},{"text":"destination","kind":"externalParam"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Destination"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"filePath"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP","text":"Reducer"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","kind":"typeIdentifier"},{"text":">\n","kind":"text"}],"abstract":[{"text":"Embeds a child reducer in a parent domain that works on elements of a navigation stack in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"parent state."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID/Equatable-Implementations":{"type":"topic","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/Equatable-Implementations","title":"Equatable Implementations","role":"collectionGroup","abstract":[],"url":"\/documentation\/composablearchitecture\/stackelementid\/equatable-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID":{"role":"symbol","title":"StackElementID","url":"\/documentation\/composablearchitecture\/stackelementid","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID","kind":"symbol","abstract":[{"type":"text","text":"An opaque type that identifies an element of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState"},{"text":".","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"StackElementID"}],"navigatorTitle":[{"text":"StackElementID","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID/CustomDebugStringConvertible-Implementations":{"role":"collectionGroup","title":"CustomDebugStringConvertible Implementations","kind":"article","url":"\/documentation\/composablearchitecture\/stackelementid\/customdebugstringconvertible-implementations","type":"topic","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/CustomDebugStringConvertible-Implementations"},"doc://ComposableArchitecture/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","title":"Swift.Sendable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackState":{"role":"symbol","navigatorTitle":[{"text":"StackState","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","abstract":[{"type":"text","text":"A list of data representing the content of a navigation stack."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"StackState"}],"url":"\/documentation\/composablearchitecture\/stackstate","title":"StackState","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID/ExpressibleByIntegerLiteral-Implementations":{"url":"\/documentation\/composablearchitecture\/stackelementid\/expressiblebyintegerliteral-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/ExpressibleByIntegerLiteral-Implementations","role":"collectionGroup","type":"topic","abstract":[],"kind":"article","title":"ExpressibleByIntegerLiteral Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"role":"collectionGroup","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","abstract":[{"type":"text","text":"Learn how to use the navigation tools in the library, including how to best model your domains, how"},{"type":"text","text":" "},{"type":"text","text":"to integrate features in the reducer and view layers, and how to write tests."}],"url":"\/documentation\/composablearchitecture\/navigation","title":"Navigation","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackAction":{"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"StackAction"}],"navigatorTitle":[{"kind":"identifier","text":"StackAction"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction","abstract":[{"text":"A wrapper type for actions that can be presented in a navigation stack.","type":"text"}],"url":"\/documentation\/composablearchitecture\/stackaction","title":"StackAction","role":"symbol","kind":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackActionOf":{"title":"StackActionOf","kind":"symbol","abstract":[{"type":"text","text":"A convenience type alias for referring to a stack action of a given reducer’s domain."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackActionOf","url":"\/documentation\/composablearchitecture\/stackactionof","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StackActionOf"}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"StackActionOf","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"topic","abstract":[],"title":"Effect","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"navigatorTitle":[{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/s8CopyableP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8CopyableP","title":"Swift.Copyable"},"doc://ComposableArchitecture/s27ExpressibleByIntegerLiteralP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s27ExpressibleByIntegerLiteralP","title":"Swift.ExpressibleByIntegerLiteral"},"doc://ComposableArchitecture/SH":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/SH","title":"Swift.Hashable"},"doc://ComposableArchitecture/SQ":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/SQ","title":"Swift.Equatable"},"doc://ComposableArchitecture/s28CustomDebugStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP","title":"Swift.CustomDebugStringConvertible"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","title":"ComposableArchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"title":"Reducer"},"doc://ComposableArchitecture/10CustomDump0aB17StringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/10CustomDump0aB17StringConvertibleP","title":"CustomDump.CustomDumpStringConvertible"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackBasedNavigation":{"type":"topic","url":"\/documentation\/composablearchitecture\/stackbasednavigation","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","role":"article","abstract":[{"type":"text","text":"Learn about stack-based navigation, that is navigation modeled with collections, including how to"},{"type":"text","text":" "},{"type":"text","text":"model your domains, how to integrate features, how to test your features, and more."}],"kind":"article","title":"Stack-based navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID/CustomDumpStringConvertible-Implementations":{"role":"collectionGroup","title":"CustomDumpStringConvertible Implementations","url":"\/documentation\/composablearchitecture\/stackelementid\/customdumpstringconvertible-implementations","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/CustomDumpStringConvertible-Implementations","kind":"article","abstract":[]}}}