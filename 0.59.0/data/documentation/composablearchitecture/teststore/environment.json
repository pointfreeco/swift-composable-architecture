{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"environment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Environment"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"kind":"keyword","text":"set"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The environment can be modified throughout a test storeâ€™s lifecycle in order to influence how"},{"type":"text","text":" "},{"type":"text","text":"it produces effects. This can be handy for testing flows that require a dependency to start in"},{"type":"text","text":" "},{"type":"text","text":"a failing state and then later change into a succeeding state:"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Start dependency endpoint in a failing state","store.environment.client.fetch = { _ in throw FetchError() }","await store.send(.buttonTapped)","await store.receive(.response(.failure(FetchError())) {","  \/\/ ...","}","","\/\/ Change dependency endpoint into a succeeding state","await store.environment.client.fetch = { \"Hello \\($0)!\" }","await store.send(.buttonTapped)","await store.receive(.response(.success(\"Hello Blob!\"))) {","  \/\/ ...","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/teststore\/environment"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/environment","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The current environment."}],"kind":"symbol","metadata":{"role":"symbol","title":"environment","roleHeading":"Instance Property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"environment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Environment"}],"symbolKind":"property","externalID":"s:22ComposableArchitecture9TestStoreC11environmentq2_vp","modules":[{"name":"ComposableArchitecture"}],"platforms":[]},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreDeprecations"]]},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"\n      'AnyReducer' and 'Environment' have been deprecated in favor of 'Reducer' and 'DependencyValues'.\n\n      See the migration guide for more information: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/Reducer\n      "}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStoreDeprecations":{"role":"collectionGroup","title":"Deprecations","abstract":[{"type":"text","text":"Review unsupported test store APIs and their replacements."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreDeprecations","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/teststoredeprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/environment":{"role":"symbol","title":"environment","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"environment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Environment"}],"abstract":[{"type":"text","text":"The current environment."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/environment","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/composablearchitecture\/teststore\/environment"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"role":"symbol","title":"TestStore","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestStore"}],"abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TestStore"}],"url":"\/documentation\/composablearchitecture\/teststore"}}}