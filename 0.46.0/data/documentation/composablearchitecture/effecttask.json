{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"EffectTask"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Action"},{"kind":"text","text":"> = "},{"kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher","preciseIdentifier":"s:22ComposableArchitecture15EffectPublisherV","text":"EffectPublisher"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Instead of specifying "},{"type":"codeVoice","code":"Never"},{"type":"text","text":" as "},{"type":"codeVoice","code":"Failure"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["func reduce(into state: inout State, action: Action) -> EffectPublisher<Action, Never> { … }"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can specify a single generic:"}]},{"type":"codeListing","syntax":"swift","code":["func reduce(into state: inout State, action: Action) -> EffectTask<Action>  { … }"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/effecttask"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A convenience type alias for referring to an effect that can never fail, like the kind of"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher"},{"type":"text","text":" returned by a reducer after processing an action."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"EffectTask"}],"title":"EffectTask","roleHeading":"Type Alias","role":"symbol","symbolKind":"typealias","externalID":"s:22ComposableArchitecture10EffectTaska","modules":[{"name":"ComposableArchitecture"}],"navigatorTitle":[{"kind":"identifier","text":"EffectTask"}]},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"role":"symbol","title":"Store","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Store"}],"url":"\/documentation\/composablearchitecture\/store"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EffectPublisher":{"role":"symbol","title":"EffectPublisher","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EffectPublisher"}],"abstract":[{"type":"text","text":"A type that encapsulates a unit of work that can be run in the outside world, and can feed"},{"type":"text","text":" "},{"type":"text","text":"actions back to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":"."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EffectPublisher"}],"url":"\/documentation\/composablearchitecture\/effectpublisher"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EffectTask":{"role":"symbol","title":"EffectTask","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"EffectTask"}],"abstract":[{"type":"text","text":"A convenience type alias for referring to an effect that can never fail, like the kind of"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher"},{"type":"text","text":" returned by a reducer after processing an action."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EffectTask"}],"url":"\/documentation\/composablearchitecture\/effecttask"}}}