{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/presentationstate"]}],"abstract":[{"type":"text","text":"A property wrapper for state that can be presented."}],"topicSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/init(wrappedValue:)"],"generated":true,"title":"Initializers","anchor":"Initializers"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/projectedValue","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/wrappedValue"],"generated":true,"title":"Instance Properties","anchor":"Instance-Properties"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/subscript(case:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/subscript(case:_:_:_:_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/subscript(dynamicMember:)-4tcjz","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/subscript(dynamicMember:)-8qv25"],"generated":true,"title":"Subscripts","anchor":"Subscripts"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/CustomReflectable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/Decodable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/Encodable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/Equatable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/Hashable-Implementations"],"generated":true,"title":"Default Implementations","anchor":"Default-Implementations"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@dynamicMemberLookup"},{"kind":"text","text":" "},{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PresentationState"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"State"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"inlineContent":[{"type":"text","text":"Use this property wrapper for modeling a feature’s domain that needs to present a child feature"},{"type":"text","text":" "},{"type":"text","text":"using "},{"type":"codeVoice","code":"Reducer\/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example, if you have a "},{"type":"codeVoice","code":"ChildFeature"},{"type":"text","text":" reducer that encapsulates the logic and behavior for a"},{"type":"text","text":" "},{"type":"text","text":"feature, then any feature that wants to present that feature will hold onto "},{"type":"codeVoice","code":"ChildFeature.State"},{"type":"text","text":" "},{"type":"text","text":"like so:"}],"type":"paragraph"},{"syntax":"swift","code":["@Reducer","struct ParentFeature {","  struct State {","    @PresentationState var child: ChildFeature.State?","     \/\/ ...","  }","  \/\/ ...","}"],"type":"codeListing"},{"inlineContent":[{"text":"For the most part your feature’s logic can deal with ","type":"text"},{"code":"child","type":"codeVoice"},{"text":" as a plain optional value, but","type":"text"},{"text":" ","type":"text"},{"text":"there are times you need to know that you are secretly dealing with ","type":"text"},{"code":"PresentationState","type":"codeVoice"},{"text":". For","type":"text"},{"text":" ","type":"text"},{"text":"example, when using the ","type":"text"},{"code":"Reducer\/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q","type":"codeVoice"},{"text":" reducer operator to","type":"text"},{"text":" ","type":"text"},{"text":"integrate the parent and child features together, you will construct a key path to the projected","type":"text"},{"text":" ","type":"text"},{"text":"value ","type":"text"},{"code":"\\.$child","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["@Reducer","struct ParentFeature {","  \/\/ ...","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      \/\/ Core logic for parent feature","    }","    .ifLet(\\.$child, action: \\.child) {","      ChildFeature()","    }","  }","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"See the dedicated article on "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"},{"type":"text","text":" for more information on the library’s navigation"},{"type":"text","text":" "},{"type":"text","text":"tools, and in particular see "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation"},{"type":"text","text":" for information on modeling navigation"},{"type":"text","text":" "},{"type":"text","text":"using optionals and enums."}],"type":"paragraph"}]}],"metadata":{"roleHeading":"Structure","symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"PresentationState"}],"title":"PresentationState","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PresentationState","kind":"identifier"}],"externalID":"s:22ComposableArchitecture17PresentationStateV","modules":[{"name":"ComposableArchitecture"}]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/s8CopyableP","doc:\/\/ComposableArchitecture\/s17CustomReflectableP","doc:\/\/ComposableArchitecture\/Se","doc:\/\/ComposableArchitecture\/SE","doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/SH","doc:\/\/ComposableArchitecture\/s8SendableP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Presents()"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Presents()"]]},"references":{"doc://ComposableArchitecture/s8CopyableP":{"title":"Swift.Copyable","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8CopyableP"},"doc://ComposableArchitecture/SQ":{"identifier":"doc:\/\/ComposableArchitecture\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","url":"\/documentation\/composablearchitecture\/reducer","type":"topic","title":"Reducer","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"text":"s should be executed later by the store, if any.","type":"text"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"role":"symbol"},"doc://ComposableArchitecture/SH":{"title":"Swift.Hashable","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/SH"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState":{"abstract":[{"type":"text","text":"A property wrapper for state that can be presented."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","title":"PresentationState","url":"\/documentation\/composablearchitecture\/presentationstate","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PresentationState"}],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PresentationState"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Presents()":{"role":"symbol","title":"Presents()","kind":"symbol","abstract":[{"type":"text","text":"Wraps a property with "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState"},{"type":"text","text":" and observes it."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Presents()","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Presents"},{"kind":"text","text":"()"}],"url":"\/documentation\/composablearchitecture\/presents()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","type":"topic","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture"},"doc://ComposableArchitecture/SE":{"identifier":"doc:\/\/ComposableArchitecture\/SE","title":"Swift.Encodable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/Encodable-Implementations":{"url":"\/documentation\/composablearchitecture\/presentationstate\/encodable-implementations","title":"Encodable Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/Encodable-Implementations","type":"topic","kind":"article","abstract":[],"role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/Decodable-Implementations":{"kind":"article","type":"topic","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/Decodable-Implementations","role":"collectionGroup","title":"Decodable Implementations","url":"\/documentation\/composablearchitecture\/presentationstate\/decodable-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","abstract":[{"text":"Learn how to use the navigation tools in the library, including how to best model your domains, how","type":"text"},{"text":" ","type":"text"},{"text":"to integrate features in the reducer and view layers, and how to write tests.","type":"text"}],"title":"Navigation","url":"\/documentation\/composablearchitecture\/navigation","role":"collectionGroup","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/init(wrappedValue:)":{"title":"init(wrappedValue:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"url":"\/documentation\/composablearchitecture\/presentationstate\/init(wrappedvalue:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/init(wrappedValue:)","abstract":[],"kind":"symbol","role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/Hashable-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/Hashable-Implementations","kind":"article","url":"\/documentation\/composablearchitecture\/presentationstate\/hashable-implementations","abstract":[],"type":"topic","title":"Hashable Implementations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TreeBasedNavigation":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","title":"Tree-based navigation","kind":"article","type":"topic","role":"article","url":"\/documentation\/composablearchitecture\/treebasednavigation","abstract":[{"text":"Learn about tree-based navigation, that is navigation modeled with optionals and enums, including","type":"text"},{"text":" ","type":"text"},{"text":"how to model your domains, how to integrate features, how to test your features, and more.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/subscript(dynamicMember:)-8qv25":{"kind":"symbol","fragments":[{"text":"subscript","kind":"keyword"},{"text":"<","kind":"text"},{"text":"Member","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"dynamicMember","kind":"externalParam"},{"text":" _: ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Member","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","text":"PresentationState","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Member","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","role":"symbol","abstract":[],"title":"subscript(dynamicMember:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/subscript(dynamicMember:)-8qv25","url":"\/documentation\/composablearchitecture\/presentationstate\/subscript(dynamicmember:)-8qv25"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/CustomReflectable-Implementations":{"url":"\/documentation\/composablearchitecture\/presentationstate\/customreflectable-implementations","type":"topic","kind":"article","title":"CustomReflectable Implementations","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/CustomReflectable-Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/Equatable-Implementations":{"kind":"article","type":"topic","title":"Equatable Implementations","role":"collectionGroup","abstract":[],"url":"\/documentation\/composablearchitecture\/presentationstate\/equatable-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/Equatable-Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/subscript(case:_:_:_:_:)":{"abstract":[],"kind":"symbol","type":"topic","title":"subscript(case:_:_:_:_:)","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Case"},{"kind":"text","text":">("},{"kind":"externalParam","text":"case"},{"kind":"text","text":" _: "},{"kind":"typeIdentifier","preciseIdentifier":"s:13CasePathsCore03AnyA4PathV","text":"AnyCasePath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Case"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Case"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/subscript(case:_:_:_:_:)","role":"symbol","deprecated":true,"url":"\/documentation\/composablearchitecture\/presentationstate\/subscript(case:_:_:_:_:)"},"doc://ComposableArchitecture/s17CustomReflectableP":{"identifier":"doc:\/\/ComposableArchitecture\/s17CustomReflectableP","title":"Swift.CustomReflectable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/subscript(dynamicMember:)-4tcjz":{"abstract":[],"kind":"symbol","fragments":[{"text":"subscript","kind":"keyword"},{"text":"<","kind":"text"},{"text":"Case","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"dynamicMember","kind":"externalParam"},{"text":" _: ","kind":"text"},{"text":"CaseKeyPath","preciseIdentifier":"s:13CasePathsCore0A7KeyPatha","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Case","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"PresentationState","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Case"},{"kind":"text","text":">"}],"title":"subscript(dynamicMember:)","url":"\/documentation\/composablearchitecture\/presentationstate\/subscript(dynamicmember:)-4tcjz","type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/subscript(dynamicMember:)-4tcjz"},"doc://ComposableArchitecture/Se":{"title":"Swift.Decodable","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/Se"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/subscript(case:)":{"type":"topic","abstract":[{"text":"Accesses the value associated with the given case for reading and writing.","type":"text"}],"title":"subscript(case:)","kind":"symbol","url":"\/documentation\/composablearchitecture\/presentationstate\/subscript(case:)","role":"symbol","fragments":[{"text":"subscript","kind":"keyword"},{"text":"<","kind":"text"},{"text":"Case","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"case","kind":"externalParam"},{"text":" _: ","kind":"text"},{"preciseIdentifier":"s:13CasePathsCore0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Case","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Case","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/subscript(case:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/projectedValue":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/projectedValue","role":"symbol","title":"projectedValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"projectedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PresentationState","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":">"}],"abstract":[],"type":"topic","url":"\/documentation\/composablearchitecture\/presentationstate\/projectedvalue","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"role":"symbol","type":"topic","title":"Effect","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","url":"\/documentation\/composablearchitecture\/effect","abstract":[],"kind":"symbol"},"doc://ComposableArchitecture/s8SendableP":{"identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/wrappedValue":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/wrappedValue","abstract":[],"role":"symbol","url":"\/documentation\/composablearchitecture\/presentationstate\/wrappedvalue","title":"wrappedValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":"?"}],"type":"topic"}}}