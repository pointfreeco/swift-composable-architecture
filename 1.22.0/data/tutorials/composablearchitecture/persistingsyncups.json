{"variants":[{"paths":["\/tutorials\/composablearchitecture\/persistingsyncups"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"modules":[{"projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#A-tour-of-SyncUps","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#Create-the-SyncUps-project","kind":"task"}]}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/What-is-SyncUps-"},{"projects":[{"sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#Domain-models"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#SyncUpsList-feature"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#A-handy-debugging-tool"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps"},{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps#Writing-your-first-test","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Lists-of-sync-ups"},{"projects":[{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Sync-up-form-basics","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-an-approach","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-a-better-approach","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm"},{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Removing-attendees","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Adding-attendees","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/New-sync-up-form"},{"projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-domains-together"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-views-together"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Adding-a-sync-up"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Non-exhaustive-testing"}]}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Presenting-the-sync-up-form"},{"projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Persisting-data-to-disk"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Testing-persistence"}]}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Persisting-sync-ups-to-disk"},{"projects":[{"sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail#Create-the-sync-up-detail"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail"},{"sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Editing-the-sync-up"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Deleting-the-sync-up"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#More-concise-domain-modeling"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp"},{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail#Testing-the-edit-flow","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Sync-up-detail"},{"projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-feature"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-view"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Navigating-to-the-detail"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#The-meeting-screen","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#Navigate-to-a-meeting","kind":"task"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation#Deleting-a-sync-up","kind":"task"}]}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Navigating-to-sync-up-detail"},{"projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Create-a-new-feature","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Navigating-to-the-record-meeting-feature","kind":"task"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#A-basic-timer"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Controlling-dependencies-early"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Ending-the-meeting-early"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Testing-the-timer"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission","kind":"task"}]}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Record-meeting"}],"paths":[["doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/$volume","doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Persisting-sync-ups-to-disk"]],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps"},"kind":"project","metadata":{"role":"project","categoryPathComponent":"BuildingSyncUps","category":"Building SyncUps","title":"Persisting sync-ups"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[{"kind":"hero","title":"Persisting sync-ups","chapter":"Persisting sync-ups to disk","estimatedTimeInMinutes":5,"content":[{"type":"paragraph","inlineContent":[{"text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some","type":"text"},{"text":" ","type":"text"},{"text":"persistence. This will involve using the “shared state” tools from the library, such as","type":"text"},{"text":" ","type":"text"},{"code":"@Shared","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"fileStorage","type":"codeVoice"},{"text":".","type":"text"}]}]},{"kind":"tasks","tasks":[{"contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","content":[{"inlineContent":[{"text":"To persist state to an external system you must make use of the ","type":"text"},{"type":"codeVoice","code":"@Shared"},{"text":" property wrapper","type":"text"},{"text":" ","type":"text"},{"text":"with a persistence strategy.","type":"text"}],"type":"paragraph"}]}],"title":"Persisting data to disk","anchor":"Persisting-data-to-disk","stepsSection":[{"media":null,"caption":[{"type":"aside","style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Our changes will not compile right now, but they will soon."}]}]}],"code":"PersistingSyncUps-01-code-0001.swift","runtimePreview":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Go back to the SyncUpsList.swift file, and start by applying the "},{"type":"codeVoice","code":"@Shared"},{"type":"text","text":" property wrapper"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"type":"codeVoice","code":"syncUps"},{"type":"text","text":" field."}]}]},{"inlineContent":[{"type":"text","text":"This signifies that this value will be shared with other parts of the application. There are"},{"type":"text","text":" "},{"type":"text","text":"many ways to share state, such as explicitly passing it in from a parent feature, or"},{"type":"text","text":" "},{"type":"text","text":"persisting it to an external system. See the dedicated article "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"},{"type":"text","text":" for more"},{"type":"text","text":" "},{"type":"text","text":"information on all of the various strategies."}],"type":"paragraph"},{"media":null,"caption":[],"code":"PersistingSyncUps-01-code-0002.swift","runtimePreview":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Further customize the ","type":"text"},{"code":"@Shared","type":"codeVoice"},{"text":" property wrapper with a persistence strategy. The library","type":"text"},{"text":" ","type":"text"},{"text":"comes with a few strategies you can use, but the most appropriate here is ","type":"text"},{"code":"fileStorage","type":"codeVoice"},{"text":" ","type":"text"},{"text":"since we are trying to save a complex data structure.","type":"text"}]}]},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"fileStorage"},{"type":"text","text":" persistence strategy saves data to disk anytime the value in "},{"type":"codeVoice","code":"@Shared"},{"type":"text","text":" "},{"type":"text","text":"changes, but it spaces the saves out a bit so as to not thrash the file system with every"},{"type":"text","text":" "},{"type":"text","text":"single change."}],"type":"paragraph"},{"media":null,"caption":[],"code":"PersistingSyncUps-01-code-0003.swift","runtimePreview":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"fileStorage","type":"codeVoice"},{"text":" persistence strategy","type":"text"},{"text":" ","type":"text"},{"text":"needs to be provided a URL for where to save the data. Add an extension to ","type":"text"},{"code":"URL","type":"codeVoice"},{"text":" at the","type":"text"},{"text":" ","type":"text"},{"text":"bottom of the file to define such a URL, and then provide it to the ","type":"text"},{"code":".fileStorage","type":"codeVoice"},{"text":" value.","type":"text"}]}]},{"inlineContent":[{"text":"While the property is now compiling, there are several compiler errors where we were","type":"text"},{"text":" ","type":"text"},{"text":"previously mutating the ","type":"text"},{"type":"codeVoice","code":"syncUps"},{"text":" property, each with a diagnostic that tells us the changes","type":"text"},{"text":" ","type":"text"},{"text":"we must make, which is to mutate through the projected value’s ","type":"text"},{"type":"codeVoice","code":"withLock"},{"text":" method.","type":"text"}],"type":"paragraph"},{"media":null,"caption":[{"content":[{"inlineContent":[{"text":"For more information on why ","type":"text"},{"code":"withLock","type":"codeVoice"},{"text":" is required, see","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/swiftpackageindex.com\/pointfreeco\/swift-sharing\/main\/documentation\/sharing\/mutatingsharedstate","type":"reference"},{"text":".","type":"text"}],"type":"paragraph"}],"type":"aside","style":"note","name":"Note"}],"code":"PersistingSyncUps-01-code-0004.swift","runtimePreview":null,"type":"step","content":[{"inlineContent":[{"type":"text","text":"Update each direct mutation to use "},{"type":"codeVoice","code":"withLock"},{"type":"text","text":" on the projected value of the "},{"type":"codeVoice","code":"syncUps"},{"type":"text","text":" "},{"type":"text","text":"property, instead."}],"type":"paragraph"}]},{"inlineContent":[{"type":"text","text":"It is worth noting that "},{"type":"codeVoice","code":"fileStorage"},{"type":"text","text":" only"},{"type":"text","text":" "},{"type":"text","text":"works with "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" data types, and earlier in the tutorial when we added models to"},{"type":"text","text":" "},{"type":"text","text":"Models.swift we made them codable from the beginning."}],"type":"paragraph"},{"media":null,"caption":[],"code":"PersistingSyncUps-01-code-0005.swift","runtimePreview":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Before moving on, we can still make this better."},{"type":"text","text":" "},{"type":"text","text":"It is possible to provide some type safety between the URL provided and the expected"},{"type":"text","text":" "},{"type":"text","text":"type of data to be stored on disk, and make usage more concise. See"},{"type":"text","text":" "},{"type":"reference","overridingTitleInlineContent":[{"type":"text","text":"type-safe keys"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState#Type-safe-keys","overridingTitle":"type-safe keys","isActive":true},{"type":"text","text":" for more information."}]}]},{"media":null,"caption":[],"code":"PersistingSyncUps-01-code-0006.swift","runtimePreview":null,"type":"step","content":[{"inlineContent":[{"type":"text","text":"We have one more error in the preview of the "},{"type":"codeVoice","code":"SyncUpsListView"},{"type":"text","text":". To prepare its list of"},{"type":"text","text":" "},{"type":"text","text":"sync-ups we can initialize a "},{"type":"codeVoice","code":"@Shared"},{"type":"text","text":" property to the "},{"type":"codeVoice","code":".syncUps"},{"type":"text","text":" persistence strategy and"},{"type":"text","text":" "},{"type":"text","text":"provide a mock."}],"type":"paragraph"}]},{"inlineContent":[{"text":"With that last change the project should be compiling. To confirm that persistence works","type":"text"},{"text":" ","type":"text"},{"text":"we need to run the app in the simulator, but we haven’t done that yet in this tutorial.","type":"text"},{"text":" ","type":"text"},{"text":"To do that we need to update the entry point of the app to use the ","type":"text"},{"type":"codeVoice","code":"SyncUpsListView"},{"text":".","type":"text"}],"type":"paragraph"},{"media":null,"caption":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We construct the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true},{"type":"text","text":" as a static so that it is"},{"type":"text","text":" "},{"type":"text","text":"initialized only one time, and so that it is not created while running Xcode previews."}]}],"name":"Note","style":"note","type":"aside"}],"code":"PersistingSyncUps-01-code-0007.swift","runtimePreview":null,"type":"step","content":[{"inlineContent":[{"type":"text","text":"Go to SyncUpsApp.swift and update the root view to be a "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" wrapping a"},{"type":"text","text":" "},{"type":"codeVoice","code":"SyncUpsListView"},{"type":"text","text":"."}],"type":"paragraph"}]},{"media":"PersistingSyncUps-01-video-0008.mov","caption":[],"code":null,"runtimePreview":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Run the app in the simulator, add a sync-up, and then relaunch the application to see that","type":"text"},{"text":" ","type":"text"},{"text":"it restores the previously created sync-up. This shows that data is persisting.","type":"text"}]}]}]},{"contentSection":[{"content":[{"inlineContent":[{"text":"Testing state that is held in ","type":"text"},{"code":"@Shared","type":"codeVoice"},{"text":" with ","type":"text"},{"code":".fileStorage","type":"codeVoice"},{"text":" persistence works","type":"text"},{"text":" ","type":"text"},{"text":"exactly like regular state without ","type":"text"},{"code":"@Shared","type":"codeVoice"},{"text":". The","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","type":"reference"},{"text":" forces you to exhaustively prove how all state changes.","type":"text"}],"type":"paragraph"}],"mediaPosition":"trailing","kind":"contentAndMedia"}],"title":"Testing persistence","anchor":"Testing-persistence","stepsSection":[{"inlineContent":[{"text":"Before anything, we need to fix a few compiler errors. We’ll start with the initialization","type":"text"},{"text":" ","type":"text"},{"text":"of the sync-ups in the ","type":"text"},{"code":"deletion()","type":"codeVoice"},{"text":" test.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"To provide a specific shared value to a test, we can do the same as we did in the preview,","type":"text"},{"text":" ","type":"text"},{"text":"where we pointed the ","type":"text"},{"code":"@Shared","type":"codeVoice"},{"text":" property wrapper to the ","type":"text"},{"code":".syncUps","type":"codeVoice"},{"text":" persistence strategy and","type":"text"},{"text":" ","type":"text"},{"text":"provided a default.","type":"text"}],"type":"paragraph"},{"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Go to "},{"code":"SyncUpsListTests.swift","type":"codeVoice"},{"type":"text","text":" and provide a default sync-ups value to the "},{"code":"@Shared","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"property wrapper that includes the sync-up we will delete."}]}],"media":null,"code":"PersistingSyncUps-02-code-0001.swift","type":"step","caption":[{"name":"Note","type":"aside","style":"note","content":[{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"fileStorage"},{"text":" persistence strategy uses an internal dependency for changing how","type":"text"},{"text":" ","type":"text"},{"text":"files are written to the disk and loaded from disk. In tests the dependency will forgo any","type":"text"},{"text":" ","type":"text"},{"text":"interaction with the file system and instead write data to a ","type":"text"},{"type":"codeVoice","code":"[URL: Data]"},{"text":" dictionary, and","type":"text"},{"text":" ","type":"text"},{"text":"load data from that dictionary. That emulates how the file system works, but without","type":"text"},{"text":" ","type":"text"},{"text":"persisting any data to the global file system.","type":"text"}],"type":"paragraph"}]}]},{"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Next, we need to update the way we mutate the sync-ups by using the ","type":"text"},{"code":"withLock","type":"codeVoice"},{"text":" method on its","type":"text"},{"text":" ","type":"text"},{"text":"projected value.","type":"text"}]}],"media":null,"code":"PersistingSyncUps-02-code-0002.swift","type":"step","caption":[]},{"inlineContent":[{"text":"With that, we should be in compiling order.","type":"text"}],"type":"paragraph"},{"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Run the test suite to see that everything still passes."}]}],"media":null,"code":null,"type":"step","caption":[]},{"runtimePreview":null,"content":[{"inlineContent":[{"text":"Make a change to the ","type":"text"},{"code":"addSyncUp","type":"codeVoice"},{"text":" test to make an incorrect assertion.","type":"text"}],"type":"paragraph"}],"media":null,"code":"PersistingSyncUps-02-code-0003.swift","type":"step","caption":[]},{"runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Run the test suite again to see that you get a test failure with a message that tells you"},{"type":"text","text":" "},{"type":"text","text":"exactly what went wrong."}],"type":"paragraph"}],"media":null,"code":null,"type":"step","caption":[]},{"inlineContent":[{"type":"text","text":"This shows that the exhaustive testing tools of the Composable Architecture continue to work"},{"type":"text","text":" "},{"type":"text","text":"exactly the same, even when dealing with globally shared state that is persisted to disk. Be"},{"type":"text","text":" "},{"type":"text","text":"sure to read the full article "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"},{"type":"text","text":" for more information about shared state and"},{"type":"text","text":" "},{"type":"text","text":"persistence."}],"type":"paragraph"}]}]},{"kind":"callToAction","title":"Sync-up detail","abstract":[{"text":"The “sync-up detail” screen shows all the information of a sync-up, and has many actions that","type":"text"},{"text":" ","type":"text"},{"text":"can take place in the screen. The user can edit the sync-up, or start a new meeting in the sync","type":"text"},{"text":" ","type":"text"},{"text":"up, or drill-down to a past meeting, or even delete the meeting.","type":"text"}],"action":{"isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"overridingTitle":"Get started","type":"reference","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail"},"featuredEyebrow":"Tutorial"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps","interfaceLanguage":"swift"},"references":{"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission":{"url":"\/tutorials\/composablearchitecture\/implementingspeechrecognizer#Asking-for-speech-recognition-permission","title":"Asking for speech recognition permission","type":"section","abstract":[{"text":"We have just one feature left to implement, and it’s one of the most complicated ones. We need","type":"text"},{"text":" ","type":"text"},{"text":"to use Apple’s ","type":"text"},{"code":"SFSpeechRecognizer","type":"codeVoice"},{"text":" API to ask the user for permission to transcribe their","type":"text"},{"text":" ","type":"text"},{"text":"audio, and then start a speech recognition task to live transcribe the meeting while it is","type":"text"},{"text":" ","type":"text"},{"text":"in progress.","type":"text"}],"role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm#Removing-attendees":{"abstract":[{"text":"We now have a moderately complex feature for editing the details of a sync-up, the ","type":"text"},{"code":"SyncUpForm","type":"codeVoice"},{"text":" ","type":"text"},{"text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come","type":"text"},{"text":" ","type":"text"},{"text":"face-to-face with dependencies for the first time in this tutorial.","type":"text"}],"type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Removing-attendees","kind":"section","role":"pseudoSymbol","title":"Removing attendees","url":"\/tutorials\/composablearchitecture\/testingsyncupform#Removing-attendees"},"PersistingSyncUps-02-code-0003.swift":{"identifier":"PersistingSyncUps-02-code-0003.swift","fileName":"SyncUpsListTests.swift","fileType":"swift","content":["import ComposableArchitecture","import Testing","","@testable import SyncUps","","@MainActor","struct SyncUpsListTests {","  @Test","  func addSyncUp() async {","    let store = TestStore(initialState: SyncUpsList.State()) {","      SyncUpsList()","    } withDependencies: {","      $0.uuid = .incrementing","    }","","    await store.send(.addSyncUpButtonTapped) {","      $0.addSyncUp = SyncUpForm.State(","        syncUp: SyncUp(id: SyncUp.ID(0))","      )","    }","","    let editedSyncUp = SyncUp(","      id: SyncUp.ID(0),","      attendees: [","        Attendee(id: Attendee.ID(), name: \"Blob\"),","        Attendee(id: Attendee.ID(), name: \"Blob Jr.\"),","      ],","      title: \"Point-Free morning sync\"","    )","    await store.send(.addSyncUp(.presented(.set(\\.syncUp, editedSyncUp)))) {","      $0.addSyncUp?.syncUp = editedSyncUp","    }","","    await store.send(.confirmAddButtonTapped) {","      $0.addSyncUp = nil","      \/\/ $0.$syncUps.withLock { $0 = [editedSyncUp] }","    }","  }","","  @Test","  func deletion() async {","    @Shared(.syncUps) var syncUps = [","      SyncUp(","        id: SyncUp.ID(),","        title: \"Point-Free Morning Sync\"","      )","    ]","    let store = TestStore(","      initialState: SyncUpsList.State()","    ) {","      SyncUpsList()","    }","","    await store.send(.onDelete([0])) {","      $0.$syncUps.withLock { $0 = [] }","    }","  }","}"],"syntax":"swift","highlights":[{"line":36}],"type":"file"},"PersistingSyncUps-01-code-0002.swift":{"identifier":"PersistingSyncUps-01-code-0002.swift","fileName":"SyncUpsList.swift","fileType":"swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  @ObservableState","  struct State: Equatable {","    @Presents var addSyncUp: SyncUpForm.State?","    @Shared(.fileStorage()) var syncUps: IdentifiedArrayOf<SyncUp> = []","  }","  enum Action {","    case addSyncUpButtonTapped","    case addSyncUp(PresentationAction<SyncUpForm.Action>)","    case confirmAddButtonTapped","    case discardButtonTapped","    case onDelete(IndexSet)","    case syncUpTapped(id: SyncUp.ID)","  }","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .addSyncUpButtonTapped:","        state.addSyncUp = SyncUpForm.State(syncUp: SyncUp(id: SyncUp.ID()))","        return .none","","      case .addSyncUp:","        return .none","","      case .confirmAddButtonTapped:","        guard let newSyncUp = state.addSyncUp?.syncUp","        else { return .none }","        state.addSyncUp = nil","        state.syncUps.append(newSyncUp)","        return .none","","      case .discardButtonTapped:","        state.addSyncUp = nil","        return .none","","      case let .onDelete(indexSet):","        state.syncUps.remove(atOffsets: indexSet)","        return .none","","      case .syncUpTapped:","        return .none","      }","    }","    .ifLet(\\.$addSyncUp, action: \\.addSyncUp) {","      SyncUpForm()","    }","  }","}"],"syntax":"swift","highlights":[{"line":9}],"type":"file"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Lists-of-sync-ups":{"title":"Lists of sync-ups","type":"topic","role":"article","kind":"article","abstract":[],"url":"\/tutorials\/buildingsyncups\/lists-of-sync-ups","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Lists-of-sync-ups"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps#A-tour-of-SyncUps":{"title":"A tour of SyncUps","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#A-tour-of-SyncUps","abstract":[{"text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a","type":"text"},{"text":" ","type":"text"},{"text":"recreation of Apple’s Scrumdinger demo application.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/whatissyncups#A-tour-of-SyncUps","role":"pseudoSymbol","kind":"section","type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list","url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Adding-a-new-sync-up-to-the-list","title":"Adding a new sync-up to the list","type":"section","abstract":[{"text":"We now have two features built: the sync-ups list and the sync-up form. These features do not","type":"text"},{"text":" ","type":"text"},{"text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to","type":"text"},{"text":" ","type":"text"},{"text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then","type":"text"},{"text":" ","type":"text"},{"text":"add that sync-up to the root list.","type":"text"}],"role":"pseudoSymbol","kind":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#Domain-models":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#Domain-models","abstract":[{"type":"text","text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the"},{"type":"text","text":" "},{"type":"text","text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as"},{"type":"text","text":" "},{"type":"text","text":"the app evolves."}],"type":"section","url":"\/tutorials\/composablearchitecture\/listsofsyncups#Domain-models","role":"pseudoSymbol","title":"Domain models"},"PersistingSyncUps-01-code-0001.swift":{"identifier":"PersistingSyncUps-01-code-0001.swift","fileName":"SyncUpsList.swift","fileType":"swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  @ObservableState","  struct State: Equatable {","    @Presents var addSyncUp: SyncUpForm.State?","    @Shared var syncUps: IdentifiedArrayOf<SyncUp> = []","  }","  enum Action {","    case addSyncUpButtonTapped","    case addSyncUp(PresentationAction<SyncUpForm.Action>)","    case confirmAddButtonTapped","    case discardButtonTapped","    case onDelete(IndexSet)","    case syncUpTapped(id: SyncUp.ID)","  }","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .addSyncUpButtonTapped:","        state.addSyncUp = SyncUpForm.State(syncUp: SyncUp(id: SyncUp.ID()))","        return .none","","      case .addSyncUp:","        return .none","","      case .confirmAddButtonTapped:","        guard let newSyncUp = state.addSyncUp?.syncUp","        else { return .none }","        state.addSyncUp = nil","        state.syncUps.append(newSyncUp)","        return .none","","      case .discardButtonTapped:","        state.addSyncUp = nil","        return .none","","      case let .onDelete(indexSet):","        state.syncUps.remove(atOffsets: indexSet)","        return .none","","      case .syncUpTapped:","        return .none","      }","    }","    .ifLet(\\.$addSyncUp, action: \\.addSyncUp) {","      SyncUpForm()","    }","  }","}"],"syntax":"swift","highlights":[{"line":9}],"type":"file"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/What-is-SyncUps-":{"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/What-is-SyncUps-","role":"article","kind":"article","url":"\/tutorials\/buildingsyncups\/what-is-syncups-","title":"What is SyncUps?","type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation":{"url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation","title":"Testing the add sync-up flow","abstract":[{"type":"text","text":"We have now integrated two moderately complex features, the "},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" and "},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":", and"},{"type":"text","text":" "},{"type":"text","text":"so its time to write some tests. This will give us the opportunity to prove that the features"},{"type":"text","text":" "},{"type":"text","text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less"},{"type":"text","text":" "},{"type":"text","text":"fragile."}],"kind":"project","role":"project","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation","estimatedTime":"10min"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingListOfSyncUps":{"type":"topic","role":"project","title":"Testing the list of sync-ups","url":"\/tutorials\/composablearchitecture\/testinglistofsyncups","abstract":[{"text":"The SyncUpsList feature we have built so far isn’t very complex. In fact, it only has one","type":"text"},{"text":" ","type":"text"},{"text":"primary action, that of deleting sync-ups from its collection. However, it can be good practice","type":"text"},{"text":" ","type":"text"},{"text":"to test new features as you add them, and in the future we will have much more complicated","type":"text"},{"text":" ","type":"text"},{"text":"behavior to test.","type":"text"}],"kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps","estimatedTime":"5min"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingListOfSyncUps#Writing-your-first-test":{"title":"Writing your first test","abstract":[{"text":"The SyncUpsList feature we have built so far isn’t very complex. In fact, it only has one","type":"text"},{"text":" ","type":"text"},{"text":"primary action, that of deleting sync-ups from its collection. However, it can be good practice","type":"text"},{"text":" ","type":"text"},{"text":"to test new features as you add them, and in the future we will have much more complicated","type":"text"},{"text":" ","type":"text"},{"text":"behavior to test.","type":"text"}],"type":"section","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps#Writing-your-first-test","role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/testinglistofsyncups#Writing-your-first-test"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation":{"role":"project","url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation","kind":"project","estimatedTime":"20min","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation","abstract":[{"text":"We will wrap the application built so far in a ","type":"text"},{"code":"NavigationStack","type":"codeVoice"},{"text":" so that we can navigate to","type":"text"},{"text":" ","type":"text"},{"text":"the detail screen. To do this we will create a new root-level feature that will be responsible","type":"text"},{"text":" ","type":"text"},{"text":"for implementing the logic of the stack and integrating all of the features together.","type":"text"}],"title":"Navigating to a sync-up detail","type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm#Adding-attendees":{"url":"\/tutorials\/composablearchitecture\/testingsyncupform#Adding-attendees","kind":"section","type":"section","title":"Adding attendees","abstract":[{"text":"We now have a moderately complex feature for editing the details of a sync-up, the ","type":"text"},{"code":"SyncUpForm","type":"codeVoice"},{"text":" ","type":"text"},{"text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come","type":"text"},{"text":" ","type":"text"},{"text":"face-to-face with dependencies for the first time in this tutorial.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Adding-attendees","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Creating-the-app-feature":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-feature","title":"Creating the app feature","url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Creating-the-app-feature","type":"section","abstract":[{"type":"text","text":"We will wrap the application built so far in a "},{"code":"NavigationStack","type":"codeVoice"},{"type":"text","text":" so that we can navigate to"},{"type":"text","text":" "},{"type":"text","text":"the detail screen. To do this we will create a new root-level feature that will be responsible"},{"type":"text","text":" "},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"role":"pseudoSymbol","kind":"section"},"PersistingSyncUps-01-code-0005.swift":{"fileType":"swift","syntax":"swift","highlights":[{"line":9},{"line":54},{"line":55},{"line":56},{"line":57}],"content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  @ObservableState","  struct State: Equatable {","    @Presents var addSyncUp: SyncUpForm.State?","    @Shared(.syncUps) var syncUps","  }","  enum Action {","    case addSyncUpButtonTapped","    case addSyncUp(PresentationAction<SyncUpForm.Action>)","    case confirmAddButtonTapped","    case discardButtonTapped","    case onDelete(IndexSet)","    case syncUpTapped(id: SyncUp.ID)","  }","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .addSyncUpButtonTapped:","        state.addSyncUp = SyncUpForm.State(syncUp: SyncUp(id: SyncUp.ID()))","        return .none","","      case .addSyncUp:","        return .none","","      case .confirmAddButtonTapped:","        guard let newSyncUp = state.addSyncUp?.syncUp","        else { return .none }","        state.addSyncUp = nil","        state.$syncUps.withLock { _ = $0.append(syncUp) }","        return .none","","      case .discardButtonTapped:","        state.addSyncUp = nil","        return .none","","      case let .onDelete(indexSet):","        state.$syncUps.withLock { $0.remove(atOffsets: indexSet) }","        return .none","","      case .syncUpTapped:","        return .none","      }","    }","    .ifLet(\\.$addSyncUp, action: \\.addSyncUp) {","      SyncUpForm()","    }","  }","}","","extension SharedKey where Self == FileStorageKey<IdentifiedArrayOf<SyncUp>>.Default {","  static var syncUps: Self {","    Self[.fileStorage(.documentsDirectory.appending(component: \"sync-ups.json\")), default: []]","  }","}"],"type":"file","identifier":"PersistingSyncUps-01-code-0005.swift","fileName":"SyncUpsList.swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm":{"title":"Testing the sync-up form","abstract":[{"text":"We now have a moderately complex feature for editing the details of a sync-up, the ","type":"text"},{"type":"codeVoice","code":"SyncUpForm"},{"text":" ","type":"text"},{"text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come","type":"text"},{"text":" ","type":"text"},{"text":"face-to-face with dependencies for the first time in this tutorial.","type":"text"}],"kind":"project","estimatedTime":"10min","url":"\/tutorials\/composablearchitecture\/testingsyncupform","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm","type":"topic","role":"project"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Persisting-sync-ups-to-disk":{"role":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Persisting-sync-ups-to-disk","kind":"article","title":"Persisting sync-ups to disk","abstract":[],"url":"\/tutorials\/buildingsyncups\/persisting-sync-ups-to-disk","type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Integrating-the-feature-views-together":{"url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Integrating-the-feature-views-together","abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"type":"text","text":" "},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"type":"text","text":" "},{"type":"text","text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}],"role":"pseudoSymbol","type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-views-together","title":"Integrating the feature views together","kind":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps":{"role":"project","estimatedTime":"5min","type":"topic","title":"What is SyncUps?","url":"\/tutorials\/composablearchitecture\/whatissyncups","kind":"project","abstract":[{"text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a","type":"text"},{"text":" ","type":"text"},{"text":"recreation of Apple’s Scrumdinger demo application.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"abstract":[{"type":"text","text":"Learn techniques for sharing state throughout many parts of your application, and how to persist"},{"type":"text","text":" "},{"type":"text","text":"data to user defaults, the file system, and other external mediums."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","type":"topic","title":"Sharing state","kind":"article","role":"article","url":"\/documentation\/composablearchitecture\/sharingstate"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState#Type-safe-keys":{"url":"\/documentation\/composablearchitecture\/sharingstate#Type-safe-keys","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState#Type-safe-keys","abstract":[],"type":"topic","title":"Type-safe keys","kind":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature#Create-a-new-feature":{"role":"pseudoSymbol","title":"Create a new feature","url":"\/tutorials\/composablearchitecture\/recordmeetingfeature#Create-a-new-feature","type":"section","abstract":[{"text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will","type":"text"},{"text":" ","type":"text"},{"text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Create-a-new-feature","kind":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#A-basic-timer":{"kind":"section","url":"\/tutorials\/composablearchitecture\/implementingtimer#A-basic-timer","title":"A basic timer","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#A-basic-timer","type":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Controlling-dependencies-early":{"title":"Controlling dependencies early","abstract":[{"text":"The first major piece of logic and behavior we will introduce to the record meeting feature is","type":"text"},{"text":" ","type":"text"},{"text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and","type":"text"},{"text":" ","type":"text"},{"text":"we need to implement nuanced logic to figure out when to proceed to the next speaker.","type":"text"}],"type":"section","kind":"section","role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/implementingtimer#Controlling-dependencies-early","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Controlling-dependencies-early"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp":{"url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup","role":"project","estimatedTime":"30min","kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp","type":"topic","title":"Editing and deleting a sync-up","abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"type":"text","text":" "},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"type":"text","text":" "},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"url":"\/documentation\/composablearchitecture\/store","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","navigatorTitle":[{"kind":"identifier","text":"Store"}],"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"kind":"symbol","title":"Store","type":"topic","role":"symbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature#Navigating-to-the-record-meeting-feature":{"role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/recordmeetingfeature#Navigating-to-the-record-meeting-feature","title":"Navigating to the record meeting feature","type":"section","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Navigating-to-the-record-meeting-feature","abstract":[{"type":"text","text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will"},{"type":"text","text":" "},{"type":"text","text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer."}]},"PersistingSyncUps-01-code-0004.swift":{"fileName":"SyncUpsList.swift","highlights":[{"line":33},{"line":41}],"syntax":"swift","fileType":"swift","identifier":"PersistingSyncUps-01-code-0004.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  @ObservableState","  struct State: Equatable {","    @Presents var addSyncUp: SyncUpForm.State?","    @Shared(.fileStorage(.syncUps)) var syncUps: IdentifiedArrayOf<SyncUp> = []","  }","  enum Action {","    case addSyncUpButtonTapped","    case addSyncUp(PresentationAction<SyncUpForm.Action>)","    case confirmAddButtonTapped","    case discardButtonTapped","    case onDelete(IndexSet)","    case syncUpTapped(id: SyncUp.ID)","  }","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .addSyncUpButtonTapped:","        state.addSyncUp = SyncUpForm.State(syncUp: SyncUp(id: SyncUp.ID()))","        return .none","","      case .addSyncUp:","        return .none","","      case .confirmAddButtonTapped:","        guard let newSyncUp = state.addSyncUp?.syncUp","        else { return .none }","        state.addSyncUp = nil","        state.$syncUps.withLock { _ = $0.append(syncUp) }","        return .none","","      case .discardButtonTapped:","        state.addSyncUp = nil","        return .none","","      case let .onDelete(indexSet):","        state.$syncUps.withLock { $0.remove(atOffsets: indexSet) }","        return .none","","      case .syncUpTapped:","        return .none","      }","    }","    .ifLet(\\.$addSyncUp, action: \\.addSyncUp) {","      SyncUpForm()","    }","  }","}","","extension URL {","  static let syncUps = Self.documentsDirectory.appending(component: \"sync-ups.json\")","}"],"type":"file"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation#The-meeting-screen":{"kind":"section","abstract":[{"text":"Now that we have a navigation stack in place we can start navigating to other features in the","type":"text"},{"text":" ","type":"text"},{"text":"application. The simplest is the meeting screen, which allows you to see the details of a","type":"text"},{"text":" ","type":"text"},{"text":"previous recorded meeting.","type":"text"}],"role":"pseudoSymbol","type":"section","title":"The meeting screen","url":"\/tutorials\/composablearchitecture\/meetingnavigation#The-meeting-screen","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#The-meeting-screen"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/New-sync-up-form":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/New-sync-up-form","type":"topic","url":"\/tutorials\/buildingsyncups\/new-sync-up-form","abstract":[],"title":"New sync-up form","kind":"article","role":"article"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetail#Create-the-sync-up-detail":{"kind":"section","title":"Create the sync-up detail","type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail#Create-the-sync-up-detail","url":"\/tutorials\/composablearchitecture\/syncupdetail#Create-the-sync-up-detail","role":"pseudoSymbol","abstract":[{"type":"text","text":"The “sync-up detail” screen shows all the information of a sync-up, and has many actions that"},{"type":"text","text":" "},{"type":"text","text":"can take place in the screen. The user can edit the sync-up, or start a new meeting in the sync"},{"type":"text","text":" "},{"type":"text","text":"up, or drill-down to a past meeting, or even delete the meeting."}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#Deleting-the-sync-up":{"abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"type":"text","text":" "},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"type":"text","text":" "},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}],"url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#Deleting-the-sync-up","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Deleting-the-sync-up","type":"section","role":"pseudoSymbol","title":"Deleting the sync-up","kind":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#More-concise-domain-modeling":{"abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"type":"text","text":" "},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"type":"text","text":" "},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}],"url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#More-concise-domain-modeling","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#More-concise-domain-modeling","title":"More concise domain modeling","type":"section","kind":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Testing-the-timer":{"url":"\/tutorials\/composablearchitecture\/implementingtimer#Testing-the-timer","abstract":[{"text":"The first major piece of logic and behavior we will introduce to the record meeting feature is","type":"text"},{"text":" ","type":"text"},{"text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and","type":"text"},{"text":" ","type":"text"},{"text":"we need to implement nuanced logic to figure out when to proceed to the next speaker.","type":"text"}],"title":"Testing the timer","type":"section","role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Testing-the-timer"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Creating-the-app-view":{"abstract":[{"text":"We will wrap the application built so far in a ","type":"text"},{"code":"NavigationStack","type":"codeVoice"},{"text":" so that we can navigate to","type":"text"},{"text":" ","type":"text"},{"text":"the detail screen. To do this we will create a new root-level feature that will be responsible","type":"text"},{"text":" ","type":"text"},{"text":"for implementing the logic of the stack and integrating all of the features together.","type":"text"}],"title":"Creating the app view","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-view","kind":"section","role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Creating-the-app-view","type":"section"},"PersistingSyncUps-01-code-0007.swift":{"type":"file","fileType":"swift","syntax":"swift","content":["import ComposableArchitecture","import SwiftUI","","@main","struct SyncUpsApp: App {","  @MainActor","  static let store = Store(initialState: SyncUpsList.State()) {","    SyncUpsList()","  }","","  var body: some Scene {","    WindowGroup {","      NavigationStack {","        SyncUpsListView(store: Self.store)","      }","    }","  }","}"],"identifier":"PersistingSyncUps-01-code-0007.swift","highlights":[],"fileName":"SyncUpsApp.swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#SyncUpsList-feature":{"kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/listsofsyncups#SyncUpsList-feature","role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#SyncUpsList-feature","abstract":[{"text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the","type":"text"},{"text":" ","type":"text"},{"text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as","type":"text"},{"text":" ","type":"text"},{"text":"the app evolves.","type":"text"}],"title":"SyncUpsList feature"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Sync-up-form-basics":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Sync-up-form-basics","kind":"section","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"type":"text","text":" "},{"type":"text","text":"feature to make things a little more interesting."}],"url":"\/tutorials\/composablearchitecture\/syncupform#Sync-up-form-basics","title":"Sync-up form basics","role":"pseudoSymbol","type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingNavigation#Deleting-a-sync-up":{"url":"\/tutorials\/composablearchitecture\/testingnavigation#Deleting-a-sync-up","title":"Deleting a sync-up","type":"section","abstract":[{"text":"We have now implemented a navigation stack at the root of our application, and integrated","type":"text"},{"text":" ","type":"text"},{"text":"3 features into the stack: the ","type":"text"},{"type":"codeVoice","code":"SyncUpsList"},{"text":" feature, the ","type":"text"},{"type":"codeVoice","code":"SyncUpDetail"},{"text":" feature, and the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"MeetingView"},{"text":". Some of these features have quite complex logic binding them together, such as","type":"text"},{"text":" ","type":"text"},{"text":"when one deletes a sync-up from the detail screen it should pop the screen off the stack.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation#Deleting-a-sync-up","role":"pseudoSymbol","kind":"section"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Sync-up-detail":{"title":"Sync-up detail","url":"\/tutorials\/buildingsyncups\/sync-up-detail","abstract":[],"type":"topic","kind":"article","role":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Sync-up-detail"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation#Navigate-to-a-meeting":{"type":"section","title":"Navigate to a meeting","kind":"section","abstract":[{"type":"text","text":"Now that we have a navigation stack in place we can start navigating to other features in the"},{"type":"text","text":" "},{"type":"text","text":"application. The simplest is the meeting screen, which allows you to see the details of a"},{"type":"text","text":" "},{"type":"text","text":"previous recorded meeting."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#Navigate-to-a-meeting","url":"\/tutorials\/composablearchitecture\/meetingnavigation#Navigate-to-a-meeting","role":"pseudoSymbol"},"PersistingSyncUps-02-code-0002.swift":{"fileName":"SyncUpsListTests.swift","highlights":[{"line":36},{"line":55}],"syntax":"swift","fileType":"swift","identifier":"PersistingSyncUps-02-code-0002.swift","content":["import ComposableArchitecture","import Testing","","@testable import SyncUps","","@MainActor","struct SyncUpsListTests {","  @Test","  func addSyncUp() async {","    let store = TestStore(initialState: SyncUpsList.State()) {","      SyncUpsList()","    } withDependencies: {","      $0.uuid = .incrementing","    }","","    await store.send(.addSyncUpButtonTapped) {","      $0.addSyncUp = SyncUpForm.State(","        syncUp: SyncUp(id: SyncUp.ID(0))","      )","    }","","    let editedSyncUp = SyncUp(","      id: SyncUp.ID(0),","      attendees: [","        Attendee(id: Attendee.ID(), name: \"Blob\"),","        Attendee(id: Attendee.ID(), name: \"Blob Jr.\"),","      ],","      title: \"Point-Free morning sync\"","    )","    await store.send(.addSyncUp(.presented(.set(\\.syncUp, editedSyncUp)))) {","      $0.addSyncUp?.syncUp = editedSyncUp","    }","","    await store.send(.confirmAddButtonTapped) {","      $0.addSyncUp = nil","      $0.$syncUps.withLock { $0 = [editedSyncUp] }","    }","  }","","  @Test","  func deletion() async {","    @Shared(.syncUps) var syncUps = [","      SyncUp(","        id: SyncUp.ID(),","        title: \"Point-Free Morning Sync\"","      )","    ]","    let store = TestStore(","      initialState: SyncUpsList.State()","    ) {","      SyncUpsList()","    }","","    await store.send(.onDelete([0])) {","      $0.$syncUps.withLock { $0 = [] }","    }","  }","}"],"type":"file"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Record-meeting":{"abstract":[],"url":"\/tutorials\/buildingsyncups\/record-meeting","kind":"article","role":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Record-meeting","type":"topic","title":"Record meeting"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Navigating-to-the-detail":{"kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Navigating-to-the-detail","url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Navigating-to-the-detail","abstract":[{"type":"text","text":"We will wrap the application built so far in a "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" so that we can navigate to"},{"type":"text","text":" "},{"type":"text","text":"the detail screen. To do this we will create a new root-level feature that will be responsible"},{"type":"text","text":" "},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"type":"section","title":"Navigating to the detail"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"type":"topic","title":"TestStore","navigatorTitle":[{"kind":"identifier","text":"TestStore"}],"abstract":[{"text":"A testable runtime for a reducer.","type":"text"}],"url":"\/documentation\/composablearchitecture\/teststore","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestStore"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingNavigation":{"estimatedTime":"10min","abstract":[{"text":"We have now implemented a navigation stack at the root of our application, and integrated","type":"text"},{"text":" ","type":"text"},{"text":"3 features into the stack: the ","type":"text"},{"code":"SyncUpsList","type":"codeVoice"},{"text":" feature, the ","type":"text"},{"code":"SyncUpDetail","type":"codeVoice"},{"text":" feature, and the","type":"text"},{"text":" ","type":"text"},{"code":"MeetingView","type":"codeVoice"},{"text":". Some of these features have quite complex logic binding them together, such as","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"when one deletes a sync-up from the detail screen it should pop the screen off the stack."}],"role":"project","type":"topic","kind":"project","title":"Testing navigation","url":"\/tutorials\/composablearchitecture\/testingnavigation","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer":{"title":"Adding a meeting timer","url":"\/tutorials\/composablearchitecture\/implementingtimer","kind":"project","role":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer","abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}],"type":"topic","estimatedTime":"25min"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Form-focus-an-approach":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-an-approach","title":"Form focus: an approach","url":"\/tutorials\/composablearchitecture\/syncupform#Form-focus-an-approach","type":"section","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"type":"text","text":" "},{"type":"text","text":"feature to make things a little more interesting."}],"role":"pseudoSymbol","kind":"section"},"PersistingSyncUps-01-video-0008.mov":{"identifier":"PersistingSyncUps-01-video-0008.mov","type":"video","variants":[{"url":"\/videos\/ComposableArchitecture\/PersistingSyncUps-01-video-0008.mov","traits":["1x","light"]}],"poster":null,"alt":null},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps#Create-the-SyncUps-project":{"type":"section","title":"Create the SyncUps project","abstract":[{"type":"text","text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a"},{"type":"text","text":" "},{"type":"text","text":"recreation of Apple’s Scrumdinger demo application."}],"role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/whatissyncups#Create-the-SyncUps-project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#Create-the-SyncUps-project","kind":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpDetail":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail","abstract":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"SyncUpDetail"},{"text":" feature has slowly become quite complex. It now handles two forms of","type":"text"},{"text":" ","type":"text"},{"text":"navigation (an alert and sheet), it models navigation state with a single enum, and it","type":"text"},{"text":" ","type":"text"},{"text":"updates the parent feature via a shared property. It’s about time we got some test","type":"text"},{"text":" ","type":"text"},{"text":"coverage on this feature so we can be sure it works as we expect, and so that we can make future","type":"text"},{"text":" ","type":"text"},{"text":"changes with confidence.","type":"text"}],"type":"topic","role":"project","kind":"project","url":"\/tutorials\/composablearchitecture\/testingsyncupdetail","estimatedTime":"10min","title":"Testing the sync-up detail"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation#Adding-a-sync-up":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Adding-a-sync-up","type":"section","kind":"section","url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation#Adding-a-sync-up","abstract":[{"text":"We have now integrated two moderately complex features, the ","type":"text"},{"code":"SyncUpsList","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"SyncUpForm","type":"codeVoice"},{"text":", and","type":"text"},{"text":" ","type":"text"},{"text":"so its time to write some tests. This will give us the opportunity to prove that the features","type":"text"},{"text":" ","type":"text"},{"text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less","type":"text"},{"text":" ","type":"text"},{"text":"fragile.","type":"text"}],"role":"pseudoSymbol","title":"Adding a sync-up"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature":{"url":"\/tutorials\/composablearchitecture\/recordmeetingfeature","abstract":[{"text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will","type":"text"},{"text":" ","type":"text"},{"text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer.","type":"text"}],"role":"project","title":"The RecordMeeting feature","estimatedTime":"5min","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature","type":"topic","kind":"project"},"https://swiftpackageindex.com/pointfreeco/swift-sharing/main/documentation/sharing/mutatingsharedstate":{"identifier":"https:\/\/swiftpackageindex.com\/pointfreeco\/swift-sharing\/main\/documentation\/sharing\/mutatingsharedstate","titleInlineContent":[{"type":"text","text":"Mutating shared state"}],"url":"https:\/\/swiftpackageindex.com\/pointfreeco\/swift-sharing\/main\/documentation\/sharing\/mutatingsharedstate","title":"Mutating shared state","type":"link"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#A-handy-debugging-tool":{"kind":"section","abstract":[{"type":"text","text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the"},{"type":"text","text":" "},{"type":"text","text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as"},{"type":"text","text":" "},{"type":"text","text":"the app evolves."}],"role":"pseudoSymbol","type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#A-handy-debugging-tool","url":"\/tutorials\/composablearchitecture\/listsofsyncups#A-handy-debugging-tool","title":"A handy debugging tool"},"PersistingSyncUps-01-code-0006.swift":{"type":"file","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  \/\/ ...","}","","struct SyncUpsListView: View {","  \/\/ ...","}","","#Preview {","  @Shared(.syncUps) var syncUps = [.mock]","  NavigationStack {","    SyncUpsListView(","      store: Store(","        initialState: SyncUpsList.State()","      ) {","        SyncUpsList()","          ._printChanges()","      }","    )","  }","}"],"syntax":"swift","fileName":"SyncUpsList.swift","identifier":"PersistingSyncUps-01-code-0006.swift","highlights":[{"line":14},{"line":18}],"fileType":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm":{"abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"type":"text","text":" "},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"type":"text","text":" "},{"type":"text","text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm","estimatedTime":"10min","kind":"project","url":"\/tutorials\/composablearchitecture\/presentingsyncupform","type":"topic","title":"Presenting the sync-up form","role":"project"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps":{"role":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps","kind":"project","estimatedTime":"5min","abstract":[{"text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some","type":"text"},{"text":" ","type":"text"},{"text":"persistence. This will involve using the “shared state” tools from the library, such as","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"@Shared"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"fileStorage"},{"text":".","type":"text"}],"type":"topic","url":"\/tutorials\/composablearchitecture\/persistingsyncups","title":"Persisting sync-ups"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingSpeechRecognizer":{"type":"topic","abstract":[{"type":"text","text":"We have just one feature left to implement, and it’s one of the most complicated ones. We need"},{"type":"text","text":" "},{"type":"text","text":"to use Apple’s "},{"code":"SFSpeechRecognizer","type":"codeVoice"},{"type":"text","text":" API to ask the user for permission to transcribe their"},{"type":"text","text":" "},{"type":"text","text":"audio, and then start a speech recognition task to live transcribe the meeting while it is"},{"type":"text","text":" "},{"type":"text","text":"in progress."}],"title":"Adding a speech recognizer","url":"\/tutorials\/composablearchitecture\/implementingspeechrecognizer","kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer","role":"project","estimatedTime":"10min"},"PersistingSyncUps-01-code-0003.swift":{"syntax":"swift","fileType":"swift","highlights":[{"line":9},{"line":53},{"line":54},{"line":55},{"line":56}],"type":"file","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  @ObservableState","  struct State: Equatable {","    @Presents var addSyncUp: SyncUpForm.State?","    @Shared(.fileStorage(.syncUps)) var syncUps: IdentifiedArrayOf<SyncUp> = []","  }","  enum Action {","    case addSyncUpButtonTapped","    case addSyncUp(PresentationAction<SyncUpForm.Action>)","    case confirmAddButtonTapped","    case discardButtonTapped","    case onDelete(IndexSet)","    case syncUpTapped(id: SyncUp.ID)","  }","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .addSyncUpButtonTapped:","        state.addSyncUp = SyncUpForm.State(syncUp: SyncUp(id: SyncUp.ID()))","        return .none","","      case .addSyncUp:","        return .none","","      case .confirmAddButtonTapped:","        guard let newSyncUp = state.addSyncUp?.syncUp","        else { return .none }","        state.addSyncUp = nil","        state.syncUps.append(newSyncUp)","        return .none","","      case .discardButtonTapped:","        state.addSyncUp = nil","        return .none","","      case let .onDelete(indexSet):","        state.syncUps.remove(atOffsets: indexSet)","        return .none","","      case .syncUpTapped:","        return .none","      }","    }","    .ifLet(\\.$addSyncUp, action: \\.addSyncUp) {","      SyncUpForm()","    }","  }","}","","extension URL {","  static let syncUps = Self.documentsDirectory.appending(component: \"sync-ups.json\")","}"],"identifier":"PersistingSyncUps-01-code-0003.swift","fileName":"SyncUpsList.swift"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Navigating-to-sync-up-detail":{"title":"Navigating to sync-up detail","kind":"article","type":"topic","role":"article","abstract":[],"url":"\/tutorials\/buildingsyncups\/navigating-to-sync-up-detail","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Navigating-to-sync-up-detail"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm":{"url":"\/tutorials\/composablearchitecture\/syncupform","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"type":"text","text":" "},{"type":"text","text":"feature to make things a little more interesting."}],"estimatedTime":"15min","kind":"project","title":"Sync-up form","type":"topic","role":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpDetail#Testing-the-edit-flow":{"title":"Testing the edit flow","kind":"section","type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail#Testing-the-edit-flow","url":"\/tutorials\/composablearchitecture\/testingsyncupdetail#Testing-the-edit-flow","role":"pseudoSymbol","abstract":[{"text":"The ","type":"text"},{"code":"SyncUpDetail","type":"codeVoice"},{"text":" feature has slowly become quite complex. It now handles two forms of","type":"text"},{"text":" ","type":"text"},{"text":"navigation (an alert and sheet), it models navigation state with a single enum, and it","type":"text"},{"text":" ","type":"text"},{"text":"updates the parent feature via a shared property. It’s about time we got some test","type":"text"},{"text":" ","type":"text"},{"text":"coverage on this feature so we can be sure it works as we expect, and so that we can make future","type":"text"},{"text":" ","type":"text"},{"text":"changes with confidence.","type":"text"}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps#Testing-persistence":{"abstract":[{"text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some","type":"text"},{"text":" ","type":"text"},{"text":"persistence. This will involve using the “shared state” tools from the library, such as","type":"text"},{"text":" ","type":"text"},{"code":"@Shared","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"fileStorage","type":"codeVoice"},{"text":".","type":"text"}],"type":"section","title":"Testing persistence","kind":"section","url":"\/tutorials\/composablearchitecture\/persistingsyncups#Testing-persistence","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Testing-persistence","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Ending-the-meeting-early":{"url":"\/tutorials\/composablearchitecture\/implementingtimer#Ending-the-meeting-early","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Ending-the-meeting-early","type":"section","role":"pseudoSymbol","kind":"section","title":"Ending the meeting early","abstract":[{"text":"The first major piece of logic and behavior we will introduce to the record meeting feature is","type":"text"},{"text":" ","type":"text"},{"text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and","type":"text"},{"text":" ","type":"text"},{"text":"we need to implement nuanced logic to figure out when to proceed to the next speaker.","type":"text"}]},"PersistingSyncUps-02-code-0001.swift":{"type":"file","highlights":[{"line":42},{"line":43},{"line":44},{"line":45},{"line":47},{"line":48},{"line":49}],"syntax":"swift","fileName":"SyncUpsListTests.swift","identifier":"PersistingSyncUps-02-code-0001.swift","content":["import ComposableArchitecture","import Testing","","@testable import SyncUps","","@MainActor","struct SyncUpsListTests {","  @Test","  func addSyncUp() async {","    let store = TestStore(initialState: SyncUpsList.State()) {","      SyncUpsList()","    } withDependencies: {","      $0.uuid = .incrementing","    }","","    await store.send(.addSyncUpButtonTapped) {","      $0.addSyncUp = SyncUpForm.State(","        syncUp: SyncUp(id: SyncUp.ID(0))","      )","    }","","    let editedSyncUp = SyncUp(","      id: SyncUp.ID(0),","      attendees: [","        Attendee(id: Attendee.ID(), name: \"Blob\"),","        Attendee(id: Attendee.ID(), name: \"Blob Jr.\"),","      ],","      title: \"Point-Free morning sync\"","    )","    await store.send(.addSyncUp(.presented(.set(\\.syncUp, editedSyncUp)))) {","      $0.addSyncUp?.syncUp = editedSyncUp","    }","","    await store.send(.confirmAddButtonTapped) {","      $0.addSyncUp = nil","      $0.syncUps = [editedSyncUp]","    }","  }","","  @Test","  func deletion() async {","    @Shared(.syncUps) var syncUps = [","      SyncUp(","        id: SyncUp.ID(),","        title: \"Point-Free Morning Sync\"","      )","    ]","    let store = TestStore(","      initialState: SyncUpsList.State()","    ) {","      SyncUpsList()","    }","","    await store.send(.onDelete([0])) {","      $0.syncUps = []","    }","  }","}"],"fileType":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetail":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail","title":"Sync-up detail","estimatedTime":"5min","kind":"project","type":"topic","url":"\/tutorials\/composablearchitecture\/syncupdetail","abstract":[{"type":"text","text":"The “sync-up detail” screen shows all the information of a sync-up, and has many actions that"},{"type":"text","text":" "},{"type":"text","text":"can take place in the screen. The user can edit the sync-up, or start a new meeting in the sync"},{"type":"text","text":" "},{"type":"text","text":"up, or drill-down to a past meeting, or even delete the meeting."}],"role":"project"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#Editing-the-sync-up":{"title":"Editing the sync-up","abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"type":"text","text":" "},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"type":"text","text":" "},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}],"kind":"section","type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Editing-the-sync-up","url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#Editing-the-sync-up","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation":{"role":"project","estimatedTime":"5min","url":"\/tutorials\/composablearchitecture\/meetingnavigation","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation","abstract":[{"type":"text","text":"Now that we have a navigation stack in place we can start navigating to other features in the"},{"type":"text","text":" "},{"type":"text","text":"application. The simplest is the meeting screen, which allows you to see the details of a"},{"type":"text","text":" "},{"type":"text","text":"previous recorded meeting."}],"type":"topic","kind":"project","title":"Navigating to a meeting"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation#Non-exhaustive-testing":{"abstract":[{"type":"text","text":"We have now integrated two moderately complex features, the "},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" and "},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":", and"},{"type":"text","text":" "},{"type":"text","text":"so its time to write some tests. This will give us the opportunity to prove that the features"},{"type":"text","text":" "},{"type":"text","text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less"},{"type":"text","text":" "},{"type":"text","text":"fragile."}],"type":"section","title":"Non-exhaustive testing","role":"pseudoSymbol","kind":"section","url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation#Non-exhaustive-testing","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Non-exhaustive-testing"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Presenting-the-sync-up-form":{"abstract":[],"title":"Presenting the sync-up form","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Presenting-the-sync-up-form","kind":"article","type":"topic","role":"article","url":"\/tutorials\/buildingsyncups\/presenting-the-sync-up-form"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps":{"type":"topic","title":"Building SyncUps","url":"\/tutorials\/buildingsyncups","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","abstract":[{"type":"text","text":"The SyncUps application is a recreation of one of Apple’s more interesting demo applications,"},{"type":"text","text":" "},{"type":"text","text":"Scrumdinger. We recreate it from scratch using the Composable Architecture, with a focus on"},{"type":"text","text":" "},{"type":"text","text":"domain modeling, controlling dependencies, and testability."}],"role":"overview","kind":"overview"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps#Persisting-data-to-disk":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Persisting-data-to-disk","url":"\/tutorials\/composablearchitecture\/persistingsyncups#Persisting-data-to-disk","title":"Persisting data to disk","role":"pseudoSymbol","kind":"section","type":"section","abstract":[{"text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some","type":"text"},{"text":" ","type":"text"},{"text":"persistence. This will involve using the “shared state” tools from the library, such as","type":"text"},{"text":" ","type":"text"},{"code":"@Shared","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"fileStorage","type":"codeVoice"},{"text":".","type":"text"}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Integrating-the-feature-domains-together":{"url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Integrating-the-feature-domains-together","type":"section","title":"Integrating the feature domains together","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-domains-together","abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"type":"text","text":" "},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"type":"text","text":" "},{"type":"text","text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}],"kind":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Form-focus-a-better-approach":{"title":"Form focus: a better approach","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-a-better-approach","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"type":"text","text":" "},{"type":"text","text":"feature to make things a little more interesting."}],"kind":"section","role":"pseudoSymbol","type":"section","url":"\/tutorials\/composablearchitecture\/syncupform#Form-focus-a-better-approach"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps":{"kind":"project","role":"project","url":"\/tutorials\/composablearchitecture\/listsofsyncups","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps","abstract":[{"text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the","type":"text"},{"text":" ","type":"text"},{"text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as","type":"text"},{"text":" ","type":"text"},{"text":"the app evolves.","type":"text"}],"estimatedTime":"10min","title":"Lists of sync-ups"}}}