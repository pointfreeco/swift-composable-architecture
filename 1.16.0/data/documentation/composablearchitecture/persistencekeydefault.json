{"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/init(_:_:)"],"anchor":"Initializers","generated":true,"title":"Initializers"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/id"],"title":"Instance Properties","anchor":"Instance-Properties","generated":true},{"title":"Instance Methods","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/load(initialValue:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/subscribe(initialValue:didSet:)"],"generated":true,"anchor":"Instance-Methods"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/PersistenceKey-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/PersistenceReaderKey-Implementations"],"generated":true,"title":"Default Implementations","anchor":"Default-Implementations"}],"sections":[],"kind":"symbol","abstract":[{"text":"A persistence key that provides a default value to an existing persistence key.","type":"text"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/persistencekeydefault"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"PersistenceKeyDefault","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Base","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Base"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey","text":"PersistenceReaderKey","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP"}]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"text":"Use this persistence key when constructing type-safe keys (see","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState#Type-safe-keys"},{"text":" for more info) to provide a default that is used instead of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"providing one at the call site of using "},{"type":"reference","overridingTitle":"@Shared","overridingTitleInlineContent":[{"type":"codeVoice","code":"@Shared"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","isActive":true},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example, if an "},{"type":"codeVoice","code":"isOn"},{"type":"text","text":" value is backed by user defaults and it should default to "},{"type":"codeVoice","code":"false"},{"type":"text","text":" when"},{"text":" ","type":"text"},{"text":"there is no value in user defaults, then you can define a persistence key like so:","type":"text"}],"type":"paragraph"},{"code":["extension PersistenceReaderKey where Self == PersistenceKeyDefault<AppStorageKey<Bool>> {","  static var isOn: Self {","    PersistenceKeyDefault(.appStorage(\"isOn\"), false)","  }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"And then use it like so:"}],"type":"paragraph"},{"code":["struct State {","  @Shared(.isOn) var isOn","}"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"relationshipsSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey","doc:\/\/ComposableArchitecture\/s8CopyableP","doc:\/\/ComposableArchitecture\/s8SendableP"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"metadata":{"externalID":"s:22ComposableArchitecture21PersistenceKeyDefaultV","navigatorTitle":[{"text":"PersistenceKeyDefault","kind":"identifier"}],"roleHeading":"Structure","modules":[{"name":"ComposableArchitecture"}],"symbolKind":"struct","title":"PersistenceKeyDefault","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"PersistenceKeyDefault","kind":"identifier"}],"role":"symbol"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState#Type-safe-keys":{"kind":"section","title":"Type-safe keys","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState#Type-safe-keys","url":"\/documentation\/composablearchitecture\/sharingstate#Type-safe-keys","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKeyDefault/subscribe(initialValue:didSet:)":{"title":"subscribe(initialValue:didSet:)","abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/persistencekeydefault\/subscribe(initialvalue:didset:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"subscribe","kind":"identifier"},{"text":"(","kind":"text"},{"text":"initialValue","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Base","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa","text":"Value","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"didSet","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa"},{"kind":"text","text":"?) -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture6SharedV","kind":"typeIdentifier","text":"Shared"},{"text":"<","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa","text":"Value"},{"kind":"text","text":">."},{"preciseIdentifier":"s:22ComposableArchitecture6SharedV12SubscriptionC","text":"Subscription","kind":"typeIdentifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/subscribe(initialValue:didSet:)","role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKeyDefault/PersistenceKey-Implementations":{"role":"collectionGroup","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/PersistenceKey-Implementations","title":"PersistenceKey Implementations","url":"\/documentation\/composablearchitecture\/persistencekeydefault\/persistencekey-implementations","type":"topic","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKeyDefault/PersistenceReaderKey-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/PersistenceReaderKey-Implementations","role":"collectionGroup","title":"PersistenceReaderKey Implementations","kind":"article","url":"\/documentation\/composablearchitecture\/persistencekeydefault\/persistencereaderkey-implementations","abstract":[],"type":"topic"},"doc://ComposableArchitecture/s8CopyableP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8CopyableP","title":"Swift.Copyable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"type":"topic","url":"\/documentation\/composablearchitecture\/sharingstate","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","role":"collectionGroup","abstract":[{"type":"text","text":"Learn techniques for sharing state throughout many parts of your application, and how to persist"},{"type":"text","text":" "},{"type":"text","text":"data to user defaults, the file system, and other external mediums."}],"title":"Sharing state"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PersistenceReaderKey"}],"url":"\/documentation\/composablearchitecture\/persistencereaderkey","abstract":[{"type":"text","text":"A type that can load and subscribe to state in an external system."}],"conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"code":"PersistenceKey","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"title":"PersistenceReaderKey","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"PersistenceReaderKey","kind":"identifier"}],"type":"topic","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Shared":{"role":"symbol","title":"Shared","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Shared","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","navigatorTitle":[{"text":"Shared","kind":"identifier"}],"abstract":[{"type":"text","text":"A property wrapper type that shares a value with multiple parts of an application."}],"url":"\/documentation\/composablearchitecture\/shared"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKeyDefault":{"abstract":[{"type":"text","text":"A persistence key that provides a default value to an existing persistence key."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"PersistenceKeyDefault"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PersistenceKeyDefault"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/persistencekeydefault","title":"PersistenceKeyDefault","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","role":"symbol","title":"Effect","navigatorTitle":[{"text":"Effect","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Effect","kind":"identifier"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKeyDefault/load(initialValue:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"load","kind":"identifier"},{"kind":"text","text":"("},{"text":"initialValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa","text":"Value","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa"},{"kind":"text","text":"?"}],"abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/persistencekeydefault\/load(initialvalue:)","role":"symbol","title":"load(initialValue:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/load(initialValue:)"},"doc://ComposableArchitecture/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKey":{"role":"symbol","navigatorTitle":[{"text":"PersistenceKey","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/persistencekey","abstract":[{"text":"A type that can persist shared state to an external storage.","type":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"PersistenceKey"},{"type":"text","text":"."}]},"title":"PersistenceKey","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKey","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"PersistenceKey","kind":"identifier"}],"type":"topic","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKeyDefault/id":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/id","role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"id"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Base"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"ID","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP2IDQa"}],"abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/persistencekeydefault\/id","title":"id"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKeyDefault/init(_:_:)":{"role":"symbol","url":"\/documentation\/composablearchitecture\/persistencekeydefault\/init(_:_:)","abstract":[],"title":"init(_:_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/init(_:_:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Base"},{"text":", ","kind":"text"},{"kind":"attribute","text":"@autoclosure "},{"text":"() -> ","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa","kind":"typeIdentifier"},{"kind":"text","text":")"}],"type":"topic","kind":"symbol"}}}