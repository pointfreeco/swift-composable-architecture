{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/combinereducers\/init(_:)"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","metadata":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"(() -> "},{"text":"Reducers","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(_:)","roleHeading":"Initializer","symbolKind":"init","role":"symbol","externalID":"s:22ComposableArchitecture15CombineReducersVyACyxq_q0_Gq0_yXEcfc","modules":[{"name":"ComposableArchitecture"}]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers\/init(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Initializes a reducer that combines all of the reducers in the given build block."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"("},{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:22ComposableArchitecture14ReducerBuilderO","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","text":"ReducerBuilder","kind":"attribute"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"text":">","kind":"text"},{"text":" ","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"build","kind":"internalParam"},{"kind":"text","text":": () -> "},{"text":"Reducers","kind":"typeIdentifier"},{"kind":"text","text":")"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A reducer builder."}]}],"name":"build"}],"kind":"parameters"}],"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerBuilder":{"abstract":[{"type":"text","text":"A result builder for combining reducers into a single reducer by running each, one after the"},{"text":" ","type":"text"},{"text":"other, and merging their effects.","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReducerBuilder","kind":"identifier"}],"kind":"symbol","title":"ReducerBuilder","type":"topic","url":"\/documentation\/composablearchitecture\/reducerbuilder","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","navigatorTitle":[{"text":"ReducerBuilder","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CombineReducers/init(_:)":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"(() -> "},{"text":"Reducers","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Initializes a reducer that combines all of the reducers in the given build block."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers\/init(_:)","url":"\/documentation\/composablearchitecture\/combinereducers\/init(_:)","title":"init(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"kind":"symbol","title":"Effect","type":"topic","url":"\/documentation\/composablearchitecture\/effect","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","navigatorTitle":[{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CombineReducers":{"navigatorTitle":[{"text":"CombineReducers","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers","role":"symbol","kind":"symbol","abstract":[{"text":"Combines multiple reducers into a single reducer.","type":"text"}],"title":"CombineReducers","url":"\/documentation\/composablearchitecture\/combinereducers","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CombineReducers","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"kind":"symbol","title":"ComposableArchitecture","type":"topic","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true,"type":"reference"},{"text":"s should be executed later by the store, if any.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","role":"symbol","kind":"symbol","title":"Reducer"}}}