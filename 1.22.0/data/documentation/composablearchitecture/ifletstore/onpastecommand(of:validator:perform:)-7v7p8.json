{"kind":"symbol","metadata":{"platforms":[{"beta":false,"introducedAt":"11.0","deprecated":false,"name":"macOS","unavailable":false}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onPasteCommand"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Payload"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:22UniformTypeIdentifiers6UTTypeV","kind":"typeIdentifier","text":"UTType"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"validator"},{"kind":"text","text":": (["},{"preciseIdentifier":"c:objc(cs)NSItemProvider","kind":"typeIdentifier","text":"NSItemProvider"},{"kind":"text","text":"]) -> "},{"kind":"typeIdentifier","text":"Payload"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"perform"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Payload"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"externalID":"s:7SwiftUI4ViewPAAE14onPasteCommand2of9validator7performQrSay22UniformTypeIdentifiers6UTTypeVG_qd__SgSaySo14NSItemProviderCGcyqd__ctlF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","roleHeading":"Instance Method","title":"onPasteCommand(of:validator:perform:)","extendedModule":"SwiftUICore","symbolKind":"method","role":"symbol"},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.onPasteCommand(of:validator:perform:)"},{"type":"text","text":"."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/onPasteCommand(of:validator:perform:)-7v7p8"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onPasteCommand","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Payload","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"supportedContentTypes","kind":"internalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:22UniformTypeIdentifiers6UTTypeV","text":"UTType","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"validator","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" ([","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSItemProvider","text":"NSItemProvider","kind":"typeIdentifier"},{"text":"]) -> ","kind":"text"},{"text":"Payload","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"perform","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"payloadAction","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Payload","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"text":"\n","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/onpastecommand(of:validator:perform:)-7v7p8"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"type":"topic","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"url":"\/documentation\/composablearchitecture\/swiftuideprecations","role":"collectionGroup","kind":"article","title":"Deprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"kind":"symbol","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","title":"IfLetStore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IfLetStore","kind":"identifier"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore","abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/onPasteCommand(of:validator:perform:)-7v7p8":{"type":"topic","title":"onPasteCommand(of:validator:perform:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/onPasteCommand(of:validator:perform:)-7v7p8","kind":"symbol","abstract":[],"url":"\/documentation\/composablearchitecture\/ifletstore\/onpastecommand(of:validator:perform:)-7v7p8","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onPasteCommand","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Payload","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"UTType","kind":"typeIdentifier","preciseIdentifier":"s:22UniformTypeIdentifiers6UTTypeV"},{"text":"], ","kind":"text"},{"text":"validator","kind":"externalParam"},{"text":": ([","kind":"text"},{"text":"NSItemProvider","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSItemProvider"},{"text":"]) -> ","kind":"text"},{"text":"Payload","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"perform","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Payload","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"kind":"article","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","role":"collectionGroup","title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","abstract":[],"type":"topic","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","kind":"article","title":"View Implementations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","role":"collection","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"}}}