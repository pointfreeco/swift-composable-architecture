{"variants":[{"paths":["\/documentation\/composablearchitecture\/effect\/throttle(id:for:scheduler:latest:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"]]},"metadata":{"symbolKind":"method","roleHeading":"Instance Method","externalID":"s:22ComposableArchitecture6EffectVAAs8SendableRzlE8throttle2id3for9scheduler6latestACyxGqd_0__17SchedulerTimeType_6StrideQYd__qd__Sbt7Combine0J0Rd__sADRd__SHRd_0_sADRd_0_sAdMRQr0_lF","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Action"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"throttle"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"id"},{"text":": some ","kind":"text"},{"text":"Hashable","preciseIdentifier":"s:SH","kind":"typeIdentifier"},{"kind":"text","text":" & "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"SchedulerTimeType","kind":"typeIdentifier","preciseIdentifier":"s:7Combine9SchedulerP0B8TimeTypeQa"},{"text":".","kind":"text"},{"text":"Stride","kind":"typeIdentifier","preciseIdentifier":"s:Sx6StrideQa"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"scheduler"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"latest","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Effect","preciseIdentifier":"s:22ComposableArchitecture6EffectV"},{"kind":"text","text":"<"},{"text":"Action","kind":"typeIdentifier"},{"text":">","kind":"text"}],"modules":[{"name":"ComposableArchitecture"}],"role":"symbol","title":"throttle(id:for:scheduler:latest:)","extendedModule":"ComposableArchitecture"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/throttle(id:for:scheduler:latest:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"throttle","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"id","kind":"externalParam"},{"kind":"text","text":": some "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":" & "},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"for"},{"kind":"text","text":" "},{"text":"interval","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"SchedulerTimeType","kind":"typeIdentifier","preciseIdentifier":"s:7Combine9SchedulerP0B8TimeTypeQa"},{"kind":"text","text":"."},{"text":"Stride","kind":"typeIdentifier","preciseIdentifier":"s:Sx6StrideQa"},{"kind":"text","text":", "},{"text":"scheduler","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"latest","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Effect","preciseIdentifier":"s:22ComposableArchitecture6EffectV","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Combine9SchedulerP","text":"Scheduler"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"S"},{"text":" : ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"S","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"SchedulerTimeType","preciseIdentifier":"s:7Combine9SchedulerP0B8TimeTypeQa"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sx6StrideQa","text":"Stride"},{"kind":"text","text":" : "},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"id","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The effectâ€™s identifier."}]}]},{"name":"interval","content":[{"type":"paragraph","inlineContent":[{"text":"The interval at which to find and emit the most recent element, expressed in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the time system of the scheduler."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"The scheduler you want to deliver the throttled output to."}],"type":"paragraph"}],"name":"scheduler"},{"content":[{"inlineContent":[{"type":"text","text":"A boolean value that indicates whether to publish the most recent element. If"},{"type":"text","text":" "},{"type":"codeVoice","code":"false"},{"type":"text","text":", the publisher emits the first element received during the interval."}],"type":"paragraph"}],"name":"latest"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An effect that emits either the most-recent or first element received during the"},{"type":"text","text":" "},{"type":"text","text":"specified interval."}]}]},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The throttling of an effect is with respect to actions being sent into the store. So, if","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"you return a throttled effect from an action that is sent with high frequency, the effect"},{"text":" ","type":"text"},{"text":"will be executed at most once per interval specified.","type":"text"}]},{"type":"aside","name":"Note","content":[{"inlineContent":[{"type":"text","text":"It is usually better to perform throttling logic in the "},{"inlineContent":[{"text":"view","type":"text"}],"type":"emphasis"},{"text":" in order to limit","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the number of actions sent into the system. Only use this operator if your reducer needs to"},{"type":"text","text":" "},{"text":"layer on specialized logic for throttling. See ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance","type":"reference","isActive":true},{"type":"text","text":" for more information of why"},{"text":" ","type":"text"},{"type":"text","text":"sending high-frequency actions into a store is typically not what you want to do."}],"type":"paragraph"}],"style":"note"}],"kind":"content"}],"kind":"symbol","abstract":[{"type":"text","text":"Throttles an effect so that it only publishes one output per given interval."}],"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/publisher(_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/debounce(id:for:scheduler:options:)"],"generated":true,"title":"Combine integration","anchor":"Combine-integration"}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","title":"Effect","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","kind":"symbol","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect/publisher(_:)":{"type":"topic","url":"\/documentation\/composablearchitecture\/effect\/publisher(_:)","abstract":[{"text":"Creates an effect from a Combine publisher.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/publisher(_:)","kind":"symbol","role":"symbol","title":"publisher(_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"publisher"},{"kind":"text","text":"(() -> some "},{"preciseIdentifier":"s:7Combine9PublisherP","text":"Publisher","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Never","preciseIdentifier":"s:s5NeverO","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Effect","preciseIdentifier":"s:22ComposableArchitecture6EffectV"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect/throttle(id:for:scheduler:latest:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"throttle"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"kind":"text","text":": some "},{"preciseIdentifier":"s:SH","text":"Hashable","kind":"typeIdentifier"},{"kind":"text","text":" & "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"text":"S","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Combine9SchedulerP0B8TimeTypeQa","text":"SchedulerTimeType","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Stride","kind":"typeIdentifier","preciseIdentifier":"s:Sx6StrideQa"},{"kind":"text","text":", "},{"text":"scheduler","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":", "},{"text":"latest","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"text":"Effect","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture6EffectV"},{"kind":"text","text":"<"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Action"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}]},"role":"symbol","url":"\/documentation\/composablearchitecture\/effect\/throttle(id:for:scheduler:latest:)","abstract":[{"text":"Throttles an effect so that it only publishes one output per given interval.","type":"text"}],"title":"throttle(id:for:scheduler:latest:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/throttle(id:for:scheduler:latest:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"text":" ","type":"text"},{"type":"text","text":"given an action, and describes what "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference"},{"text":"s should be executed later by the store, if any.","type":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Performance":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance","role":"article","abstract":[{"type":"text","text":"Learn how to improve the performance of features built in the Composable Architecture."}],"type":"topic","url":"\/documentation\/composablearchitecture\/performance","title":"Performance","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect/debounce(id:for:scheduler:options:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/debounce(id:for:scheduler:options:)","url":"\/documentation\/composablearchitecture\/effect\/debounce(id:for:scheduler:options:)","title":"debounce(id:for:scheduler:options:)","kind":"symbol","abstract":[{"text":"Turns an effect into one that can be debounced.","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"debounce"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"id","kind":"externalParam"},{"kind":"text","text":": some "},{"preciseIdentifier":"s:SH","text":"Hashable","kind":"typeIdentifier"},{"kind":"text","text":" & "},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"},{"kind":"text","text":", "},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Combine9SchedulerP0B8TimeTypeQa","text":"SchedulerTimeType"},{"kind":"text","text":"."},{"text":"Stride","kind":"typeIdentifier","preciseIdentifier":"s:Sx6StrideQa"},{"kind":"text","text":", "},{"text":"scheduler","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"options","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SchedulerOptions","preciseIdentifier":"s:7Combine9SchedulerP0B7OptionsQa"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:22ComposableArchitecture6EffectV","text":"Effect","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Action","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol"}}}