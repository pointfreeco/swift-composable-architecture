{"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/exhaustivity","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/timeout","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/useMainSerialExecutor"],"generated":true,"anchor":"Configuring-a-test-store","title":"Configuring a test store"}],"topicSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/withDependencies(_:operation:)-988rh","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/withDependencies(_:operation:)-61in2"],"title":"Configuring exhaustivity","anchor":"Configuring-exhaustivity"}],"abstract":[{"type":"text","text":"The current dependencies of the test store."}],"variants":[{"paths":["\/documentation\/composablearchitecture\/teststore\/dependencies"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"text":"MainActor","preciseIdentifier":"s:ScM","kind":"attribute"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dependencies"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues","kind":"typeIdentifier"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"text":"set","kind":"keyword"},{"kind":"text","text":" }"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"The dependencies define the execution context that your feature runs in. They can be modified","type":"text"},{"type":"text","text":" "},{"text":"throughout the test store’s lifecycle in order to influence how your feature produces effects.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Typically you will override certain dependencies immediately after constructing the test"},{"type":"text","text":" "},{"type":"text","text":"store. For example, if your feature need access to the current date and an API client to do"},{"text":" ","type":"text"},{"text":"its job, you can override those dependencies like so:","type":"text"}]},{"code":["let store = TestStore(\/* ... *\/) {","  $0.apiClient = .mock","  $0.date = .constant(Date(timeIntervalSinceReferenceDate: 1234567890))","}","","\/\/ Store assertions here"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"You can also override dependencies in the middle of the test in order to simulate how the"},{"text":" ","type":"text"},{"type":"text","text":"dependency changes as the user performs action. For example, to test the flow of an API"},{"text":" ","type":"text"},{"type":"text","text":"request failing at first but then later succeeding, you can do the following:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["store.dependencies.apiClient = .failing","","store.send(.buttonTapped) { \/* ... *\/ }","store.receive(\\.searchResponse.failure) { \/* ... *\/ }","","store.dependencies.apiClient = .mock","","store.send(.buttonTapped) { \/* ... *\/ }","store.receive(\\.searchResponse.success) { \/* ... *\/ }"]}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"]]},"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/dependencies","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Instance Property","title":"dependencies","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"dependencies","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV","kind":"typeIdentifier","text":"DependencyValues"}],"externalID":"s:22ComposableArchitecture9TestStoreC12dependencies12Dependencies16DependencyValuesVvp","role":"symbol","symbolKind":"property","modules":[{"name":"ComposableArchitecture"}]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/timeout":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"timeout","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V","text":"UInt64"}],"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/teststore\/timeout","title":"timeout","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/timeout","abstract":[{"type":"text","text":"The default timeout used in all methods that take an optional timeout."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/withDependencies(_:operation:)-61in2":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/withDependencies(_:operation:)-61in2","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"withDependencies","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"text":">((","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"DependencyValues","preciseIdentifier":"s:12Dependencies16DependencyValuesV","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"operation","kind":"externalParam"},{"kind":"text","text":": () "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"}],"abstract":[{"type":"text","text":"Overrides the store’s dependencies for a given operation."}],"url":"\/documentation\/composablearchitecture\/teststore\/withdependencies(_:operation:)-61in2","type":"topic","title":"withDependencies(_:operation:)","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/exhaustivity":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/exhaustivity","role":"symbol","kind":"symbol","abstract":[{"text":"The current exhaustivity level of the test store.","type":"text"}],"title":"exhaustivity","url":"\/documentation\/composablearchitecture\/teststore\/exhaustivity","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"exhaustivity","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture12ExhaustivityO","text":"Exhaustivity"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/dependencies":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/dependencies","abstract":[{"type":"text","text":"The current dependencies of the test store."}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"dependencies","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DependencyValues","preciseIdentifier":"s:12Dependencies16DependencyValuesV"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/teststore\/dependencies","title":"dependencies","type":"topic","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TestStore"}],"type":"topic","url":"\/documentation\/composablearchitecture\/teststore","kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","title":"TestStore","navigatorTitle":[{"text":"TestStore","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/withDependencies(_:operation:)-988rh":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/withDependencies(_:operation:)-988rh","role":"symbol","url":"\/documentation\/composablearchitecture\/teststore\/withdependencies(_:operation:)-988rh","abstract":[{"type":"text","text":"Overrides the store’s dependencies for a given operation."}],"type":"topic","kind":"symbol","title":"withDependencies(_:operation:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"withDependencies","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">(("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"DependencyValues","kind":"typeIdentifier","preciseIdentifier":"s:12Dependencies16DependencyValuesV"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":", ","kind":"text"},{"text":"operation","kind":"externalParam"},{"kind":"text","text":": () "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"keyword","text":"sending "},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"kind":"symbol","title":"ComposableArchitecture","type":"topic","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/useMainSerialExecutor":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"useMainSerialExecutor","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/teststore\/usemainserialexecutor","title":"useMainSerialExecutor","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/useMainSerialExecutor","abstract":[{"text":"Serializes all async work to the main thread for the lifetime of the test store.","type":"text"}]}}}