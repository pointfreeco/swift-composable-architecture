{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"debug"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"_PrintChangesReducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/bindingreducer\/debug()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/debug()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"ReducerProtocol.debug()"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"modules":[{"name":"ComposableArchitecture"}],"role":"symbol","title":"debug()","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"debug"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"_PrintChangesReducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"symbolKind":"method","externalID":"s:22ComposableArchitecture15ReducerProtocolPAAE5debugAA013_PrintChangesC0VyxGyF::SYNTHESIZED::s:22ComposableArchitecture14BindingReducerV","extendedModule":"ComposableArchitecture","platforms":[]},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/ReducerProtocol-Implementations"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/ReducerProtocol-Implementations"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer/debug()":{"role":"symbol","title":"debug()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"debug"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"_PrintChangesReducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/debug()","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/composablearchitecture\/bindingreducer\/debug()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer/ReducerProtocol-Implementations":{"role":"collectionGroup","title":"ReducerProtocol Implementations","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/ReducerProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/bindingreducer\/reducerprotocol-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUI":{"role":"collectionGroup","title":"SwiftUI Integration","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/swiftui"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EffectTask":{"role":"symbol","title":"EffectTask","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"EffectTask"}],"abstract":[{"type":"text","text":"A convenience type alias for referring to an effect that can never fail, like the kind of"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher"},{"type":"text","text":" returned by a reducer after processing an action."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EffectTask"}],"url":"\/documentation\/composablearchitecture\/effecttask"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerProtocol":{"role":"symbol","title":"ReducerProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReducerProtocol"}],"abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask"},{"type":"text","text":"s should be executed later by the store, if"},{"type":"text","text":" "},{"type":"text","text":"any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReducerProtocol"}],"url":"\/documentation\/composablearchitecture\/reducerprotocol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer":{"role":"symbol","title":"BindingReducer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindingReducer"}],"abstract":[{"type":"text","text":"A reducer that updates bindable state when it receives binding actions."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BindingReducer"}],"url":"\/documentation\/composablearchitecture\/bindingreducer"}}}