{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pullback"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ParentState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ParentAction"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ParentEnvironment"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":" "},{"kind":"internalParam","text":"toChildState"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"action"},{"kind":"text","text":" "},{"kind":"internalParam","text":"toChildAction"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentAction"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"environment"},{"kind":"text","text":" "},{"kind":"internalParam","text":"toChildEnvironment"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"ParentEnvironment"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Environment"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyReducer","preciseIdentifier":"s:22ComposableArchitecture10AnyReducerV","text":"AnyReducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ParentAction"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ParentEnvironment"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A reducer that works on "},{"type":"codeVoice","code":"ParentState"},{"type":"text","text":", "},{"type":"codeVoice","code":"ParentAction"},{"type":"text","text":", "},{"type":"codeVoice","code":"ParentEnvironment"},{"type":"text","text":"."}]}]},{"kind":"parameters","parameters":[{"name":"toChildState","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A key path that can get\/set "},{"type":"codeVoice","code":"State"},{"type":"text","text":" inside "},{"type":"codeVoice","code":"ParentState"},{"type":"text","text":"."}]}]},{"name":"toChildAction","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A case path that can extract\/embed "},{"type":"codeVoice","code":"Action"},{"type":"text","text":" from "},{"type":"codeVoice","code":"ParentAction"},{"type":"text","text":"."}]}]},{"name":"toChildEnvironment","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A function that transforms "},{"type":"codeVoice","code":"ParentEnvironment"},{"type":"text","text":" into "},{"type":"codeVoice","code":"Environment"},{"type":"text","text":"."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Transforms a reducer that works on child state, action, and environment into one that works on"},{"type":"text","text":" "},{"type":"text","text":"parent state, action and environment. It accomplishes this by providing 3 transformations to"},{"type":"text","text":" "},{"type":"text","text":"the method:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A writable key path that can get\/set a piece of child state from the parent state."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A case path that can extract\/embed a child action into a parent action."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A function that can transform the parent environment into a child environment."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This operation is important for breaking down large reducers into small ones. When used with"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyReducer\/combine(_:)-y8ee"},{"type":"text","text":" operator you can define many reducers that work on small pieces of"},{"type":"text","text":" "},{"type":"text","text":"domain, and then "},{"type":"emphasis","inlineContent":[{"type":"text","text":"pull them back"}]},{"type":"text","text":" and "},{"type":"emphasis","inlineContent":[{"type":"text","text":"combine"}]},{"type":"text","text":" them into one big reducer that works on a"},{"type":"text","text":" "},{"type":"text","text":"large domain."}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Global domain that holds a child domain:","struct AppState { var settings: SettingsState, \/* rest of state *\/ }","enum AppAction { case settings(SettingsAction), \/* other actions *\/ }","struct AppEnvironment { var settings: SettingsEnvironment, \/* rest of dependencies *\/ }","","\/\/ A reducer that works on the child domain:","let settingsReducer = AnyReducer<SettingsState, SettingsAction, SettingsEnvironment> { ... }","","\/\/ Pullback the settings reducer so that it works on all of the app domain:","let appReducer = AnyReducer<AppState, AppAction, AppEnvironment>.combine(","  settingsReducer.pullback(","    state: \\.settings,","    action: \/AppAction.settings,","    environment: { $0.settings }","  ),","","  \/* other reducers *\/",")"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/anyreducer\/pullback(state:action:environment:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyReducer\/pullback(state:action:environment:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This API has been soft-deprecated in favor of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope"},{"type":"text","text":". Read"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingToTheReducerProtocol"},{"type":"text","text":" for more information."}],"kind":"symbol","metadata":{"role":"symbol","title":"pullback(state:action:environment:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pullback"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ParentState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ParentAction"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ParentEnvironment"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentAction"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"environment"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ParentEnvironment"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Environment"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AnyReducer","preciseIdentifier":"s:22ComposableArchitecture10AnyReducerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ParentAction"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ParentEnvironment"},{"kind":"text","text":">"}],"symbolKind":"method","externalID":"s:22ComposableArchitecture10AnyReducerV8pullback5state6action11environmentACyqd__qd_0_qd_1_Gs15WritableKeyPathCyqd__xG_9CasePaths0lK0Vyqd_0_q_Gq0_qd_1_ctr1_lF","modules":[{"name":"ComposableArchitecture"}],"platforms":[]},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyReducer"]]},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"\n      This API has been soft-deprecated in favor of 'Scope'. Read the migration guide for more information: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/reducerprotocol\n      "}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyReducer":{"deprecated":true,"role":"symbol","title":"AnyReducer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyReducer"}],"abstract":[{"type":"text","text":"This API has been soft-deprecated in favor of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Read "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingToTheReducerProtocol"},{"type":"text","text":" for more information."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyReducer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyReducer"}],"url":"\/documentation\/composablearchitecture\/anyreducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope":{"role":"symbol","title":"Scope","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scope"}],"abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Scope"}],"url":"\/documentation\/composablearchitecture\/scope"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerProtocol":{"role":"symbol","title":"ReducerProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReducerProtocol"}],"abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask"},{"type":"text","text":"s should be executed later by the store, if"},{"type":"text","text":" "},{"type":"text","text":"any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReducerProtocol"}],"url":"\/documentation\/composablearchitecture\/reducerprotocol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingToTheReducerProtocol":{"role":"article","title":"Migrating to the reducer protocol","abstract":[{"type":"text","text":"Learn how to migrate existing applications to use the new "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol"},{"type":"text","text":", in both Swift 5.7 and"},{"type":"text","text":" "},{"type":"text","text":"Swift 5.6."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingToTheReducerProtocol","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/migratingtothereducerprotocol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyReducer/pullback(state:action:environment:)":{"role":"symbol","title":"pullback(state:action:environment:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pullback"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ParentState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ParentAction"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ParentEnvironment"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentAction"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"environment"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ParentEnvironment"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Environment"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AnyReducer","preciseIdentifier":"s:22ComposableArchitecture10AnyReducerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ParentAction"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ParentEnvironment"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"This API has been soft-deprecated in favor of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope"},{"type":"text","text":". Read"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingToTheReducerProtocol"},{"type":"text","text":" for more information."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyReducer\/pullback(state:action:environment:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/composablearchitecture\/anyreducer\/pullback(state:action:environment:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerBuilder":{"role":"symbol","title":"ReducerBuilder","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReducerBuilder"}],"abstract":[{"type":"text","text":"A result builder for combining reducers into a single reducer by running each, one after the"},{"type":"text","text":" "},{"type":"text","text":"other, and returning their merged effects."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReducerBuilder"}],"url":"\/documentation\/composablearchitecture\/reducerbuilder"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EffectTask":{"role":"symbol","title":"EffectTask","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"EffectTask"}],"abstract":[{"type":"text","text":"A type that encapsulates a unit of work that can be run in the outside world, and can feed"},{"type":"text","text":" "},{"type":"text","text":"actions back to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":"."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EffectTask"}],"url":"\/documentation\/composablearchitecture\/effecttask"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyReducer/combine(_:)-y8ee":{"role":"symbol","title":"combine(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"combine"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"AnyReducer","preciseIdentifier":"s:22ComposableArchitecture10AnyReducerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Environment"},{"kind":"text","text":">...) -> "},{"kind":"typeIdentifier","text":"AnyReducer","preciseIdentifier":"s:22ComposableArchitecture10AnyReducerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Environment"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"This API has been soft-deprecated in favor of combining reducers in a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder"},{"type":"text","text":". Read"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingToTheReducerProtocol"},{"type":"text","text":" for more information."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyReducer\/combine(_:)-y8ee","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/composablearchitecture\/anyreducer\/combine(_:)-y8ee"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerDeprecations":{"role":"collectionGroup","title":"Deprecations","abstract":[{"type":"text","text":"Review unsupported reducer APIs and their replacements."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerDeprecations","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/reducerdeprecations"}}}