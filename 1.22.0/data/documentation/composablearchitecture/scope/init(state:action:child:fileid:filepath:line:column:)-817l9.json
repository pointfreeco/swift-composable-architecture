{"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/init(state:action:child:fileID:filePath:line:column:)-817l9","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/composablearchitecture\/scope\/init(state:action:child:fileid:filepath:line:column:)-817l9"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope"]]},"sections":[],"metadata":{"roleHeading":"Initializer","symbolKind":"init","title":"init(state:action:child:fileID:filePath:line:column:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ChildState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ChildAction"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CaseKeyPath","preciseIdentifier":"s:13CasePathsCore0A7KeyPatha"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildState"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CaseKeyPath","preciseIdentifier":"s:13CasePathsCore0A7KeyPatha"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentAction"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildAction"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"child"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Child"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"filePath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"role":"symbol","externalID":"s:22ComposableArchitecture5ScopeV5state6action5child6fileID0G4Path4line6columnACyxq_q0_Gs03KeyI0Cy13CasePathsCore0M0VyxGAPyqd__GG_AMyAPyq_GAPyqd_0_GGq0_yXEs12StaticStringVAXS2utc5StateQy0_Rsd__6ActionQy0_Rsd_0_r0_lufc","modules":[{"name":"ComposableArchitecture"}]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ChildState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ChildAction"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":" "},{"kind":"internalParam","text":"toChildState"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:13CasePathsCore0A7KeyPatha","text":"CaseKeyPath"},{"text":"<","kind":"text"},{"text":"ParentState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChildState","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"toChildAction","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:13CasePathsCore0A7KeyPatha"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentAction"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildAction"},{"kind":"text","text":">, "},{"kind":"attribute","text":"@"},{"kind":"attribute","text":"ReducerBuilder","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","preciseIdentifier":"s:22ComposableArchitecture14ReducerBuilderO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ChildState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildAction"},{"kind":"text","text":">"},{"kind":"text","text":" "},{"kind":"externalParam","text":"child"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Child"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#fileID"},{"kind":"text","text":", "},{"kind":"externalParam","text":"filePath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#filePath"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#line"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#column"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"ChildState"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Child"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"State","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildAction"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Child"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Action","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A case path from parent state to a case containing child state."}]}],"name":"toChildState"},{"content":[{"type":"paragraph","inlineContent":[{"text":"A case path from parent action to a case containing child actions.","type":"text"}]}],"name":"toChildAction"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A reducer that will be invoked with child actions against child state."}]}],"name":"child"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The fileID.","type":"text"}]}],"name":"fileID"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The filePath."}]}],"name":"filePath"},{"content":[{"inlineContent":[{"type":"text","text":"The line."}],"type":"paragraph"}],"name":"line"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The column.","type":"text"}]}],"name":"column"}],"kind":"parameters"},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Useful for combining reducers of mutually-exclusive enum state."}]},{"syntax":"swift","code":["var body: some Reducer<State, Action> {","  Scope(state: \\.loggedIn, action: \\.loggedIn) {","    LoggedIn()","  }","  Scope(state: \\.loggedOut, action: \\.loggedOut) {","    LoggedOut()","  }","}"],"type":"codeListing"},{"content":[{"inlineContent":[{"type":"text","text":"Be careful when assembling reducers that are scoped to cases of enum state. If a"},{"type":"text","text":" "},{"type":"text","text":"scoped reducer receives a child action when its state is set to an unrelated case, it will"},{"type":"text","text":" "},{"type":"text","text":"not be able to process the action, which is considered an application logic error and will"},{"type":"text","text":" "},{"type":"text","text":"emit runtime warnings."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This can happen if another reducer in the parent domain changes the child state to an"},{"type":"text","text":" "},{"type":"text","text":"unrelated case when it handles the action "},{"inlineContent":[{"text":"before","type":"text"}],"type":"emphasis"},{"type":"text","text":" the scoped reducer runs. For example, a"},{"type":"text","text":" "},{"type":"text","text":"parent may receive a dismissal action from the child domain:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["Reduce { state, action in","  switch action {","  case .loggedIn(.quitButtonTapped):","    state = .loggedOut(LoggedOut.State())","  \/\/ ...","  }","}","Scope(state: \\.loggedIn, action: \\.loggedIn) {","  LoggedIn()  \/\/ ⚠️ Logged-in domain can't handle `quitButtonTapped`","}"]},{"inlineContent":[{"text":"If the parent domain contains additional logic for switching between cases of child state,","type":"text"},{"text":" ","type":"text"},{"text":"prefer ","type":"text"},{"code":"Reducer\/ifCaseLet(_:action:then:fileID:filePath:line:column:)-7sg8d","type":"codeVoice"},{"text":", which better ensures that","type":"text"},{"text":" ","type":"text"},{"text":"child logic runs ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"before","type":"text"}]},{"text":" any parent logic can replace child state:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["Reduce { state, action in","  switch action {","  case .loggedIn(.quitButtonTapped):","    state = .loggedOut(LoggedOut.State())","  \/\/ ...","  }","}",".ifCaseLet(\\.loggedIn, action: \\.loggedIn) {","  LoggedIn()  \/\/ ✅ Receives actions before its case can change","}"]}],"type":"aside","name":"Warning","style":"warning"}],"kind":"content"}],"abstract":[{"type":"text","text":"Initializes a reducer that runs the given child reducer against a slice of parent state and"},{"type":"text","text":" "},{"type":"text","text":"actions."}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerBuilder":{"url":"\/documentation\/composablearchitecture\/reducerbuilder","navigatorTitle":[{"text":"ReducerBuilder","kind":"identifier"}],"kind":"symbol","title":"ReducerBuilder","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReducerBuilder","kind":"identifier"}],"abstract":[{"type":"text","text":"A result builder for combining reducers into a single reducer by running each, one after the"},{"type":"text","text":" "},{"type":"text","text":"other, and merging their effects."}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope/init(state:action:child:fileID:filePath:line:column:)-817l9":{"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/init(state:action:child:fileID:filePath:line:column:)-817l9","url":"\/documentation\/composablearchitecture\/scope\/init(state:action:child:fileid:filepath:line:column:)-817l9","title":"init(state:action:child:fileID:filePath:line:column:)","abstract":[{"type":"text","text":"Initializes a reducer that runs the given child reducer against a slice of parent state and"},{"type":"text","text":" "},{"type":"text","text":"actions."}],"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ChildState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ChildAction"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CaseKeyPath","preciseIdentifier":"s:13CasePathsCore0A7KeyPatha"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildState"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CaseKeyPath","preciseIdentifier":"s:13CasePathsCore0A7KeyPatha"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentAction"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildAction"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"child"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Child"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"filePath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope":{"url":"\/documentation\/composablearchitecture\/scope","navigatorTitle":[{"kind":"identifier","text":"Scope"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scope"}],"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","title":"Scope"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"kind":"symbol","title":"Effect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","url":"\/documentation\/composablearchitecture\/effect","role":"symbol","navigatorTitle":[{"text":"Effect","kind":"identifier"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/reducer\/state","title":"State","required":true,"kind":"symbol","type":"topic","abstract":[{"text":"A type that holds the current state of the reducer.","type":"text"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","role":"collection","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/Action":{"title":"Action","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","url":"\/documentation\/composablearchitecture\/reducer\/action","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Action"}],"type":"topic","required":true,"abstract":[{"type":"text","text":"A type that holds all possible actions that cause the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State"},{"type":"text","text":" of the reducer to change"},{"type":"text","text":" "},{"type":"text","text":"and\/or kick off a side "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":" that can communicate with the outside world."}]}}}