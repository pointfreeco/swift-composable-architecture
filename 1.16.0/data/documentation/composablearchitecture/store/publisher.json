{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UIKit"]]},"sections":[],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/publisher","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","preciseIdentifier":"s:ScM","kind":"attribute"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"publisher","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StorePublisher","text":"StorePublisher","preciseIdentifier":"s:22ComposableArchitecture14StorePublisherV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":"> { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This publisher supports dynamic member lookup so that you can pluck out a specific field in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the state:"}]},{"syntax":"swift","code":["store.publisher.alert","  .sink { ... }"],"type":"codeListing"}],"kind":"content"}],"metadata":{"roleHeading":"Instance Property","title":"publisher","symbolKind":"property","role":"symbol","modules":[{"name":"ComposableArchitecture"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"publisher","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:22ComposableArchitecture14StorePublisherV","text":"StorePublisher","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":">"}],"externalID":"s:22ComposableArchitecture5StoreC9publisherAA0C9PublisherVyxGvp"},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/store\/publisher"]}],"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/ifLet(then:else:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/publisher"],"generated":true,"anchor":"Combine-integration","title":"Combine integration"}],"abstract":[{"type":"text","text":"A publisher that emits when state changes."}],"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/ifLet(then:else:)":{"title":"ifLet(then:else:)","deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/ifLet(then:else:)","type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture\/store\/iflet(then:else:)","abstract":[{"text":"Calls one of two closures depending on whether a storeâ€™s optional state is ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" or not, and"},{"text":" ","type":"text"},{"type":"text","text":"whenever this condition changes for as long as the cancellable lives."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"ifLet","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Wrapped"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"then"},{"text":": (","kind":"text"},{"text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">) -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"else"},{"kind":"text","text":": () -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") -> any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Combine11CancellableP","text":"Cancellable"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StorePublisher":{"navigatorTitle":[{"kind":"identifier","text":"StorePublisher"}],"kind":"symbol","title":"StorePublisher","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StorePublisher","role":"symbol","type":"topic","abstract":[{"text":"A publisher of store state.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"StorePublisher","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/storepublisher"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/publisher":{"type":"topic","url":"\/documentation\/composablearchitecture\/viewstore\/publisher","title":"publisher","kind":"symbol","deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/publisher","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"publisher"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture14StorePublisherV","text":"StorePublisher"},{"text":"<","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"A publisher that emits when state changes.","type":"text"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/publisher":{"title":"publisher","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/publisher","kind":"symbol","url":"\/documentation\/composablearchitecture\/store\/publisher","abstract":[{"text":"A publisher that emits when state changes.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"publisher"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StorePublisher","preciseIdentifier":"s:22ComposableArchitecture14StorePublisherV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":">","kind":"text"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UIKit":{"role":"collectionGroup","title":"UIKit Integration","url":"\/documentation\/composablearchitecture\/uikit","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UIKit","abstract":[{"text":"Integrating the Composable Architecture into a UIKit application.","type":"text"}],"type":"topic","kind":"article"}}}