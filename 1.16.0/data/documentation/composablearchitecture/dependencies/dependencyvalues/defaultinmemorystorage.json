{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey"]]},"seeAlsoSections":[{"generated":true,"anchor":"Overriding-storage","title":"Overriding storage","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryStorage"]}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies\/DependencyValues\/defaultInMemoryStorage"},"metadata":{"roleHeading":"Instance Property","modules":[{"name":"ComposableArchitecture","relatedModules":["Dependencies"]}],"symbolKind":"property","extendedModule":"Dependencies","externalID":"s:12Dependencies16DependencyValuesV22ComposableArchitectureE22defaultInMemoryStorageAD0ghI0Vvp","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"defaultInMemoryStorage"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture15InMemoryStorageV","text":"InMemoryStorage"}],"role":"symbol","title":"defaultInMemoryStorage"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"defaultInMemoryStorage","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:22ComposableArchitecture15InMemoryStorageV","text":"InMemoryStorage","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryStorage"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"keyword"},{"kind":"text","text":" }"}]}]}],"variants":[{"paths":["\/documentation\/composablearchitecture\/dependencies\/dependencyvalues\/defaultinmemorystorage"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"type":"topic","url":"\/documentation\/composablearchitecture\/sharingstate","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","role":"collectionGroup","abstract":[{"type":"text","text":"Learn techniques for sharing state throughout many parts of your application, and how to persist"},{"type":"text","text":" "},{"type":"text","text":"data to user defaults, the file system, and other external mediums."}],"title":"Sharing state"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","role":"symbol","title":"Effect","navigatorTitle":[{"text":"Effect","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Effect","kind":"identifier"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/InMemoryStorage":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryStorage","kind":"symbol","abstract":[],"navigatorTitle":[{"text":"InMemoryStorage","kind":"identifier"}],"title":"InMemoryStorage","url":"\/documentation\/composablearchitecture\/inmemorystorage","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InMemoryStorage","kind":"identifier"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/InMemoryKey":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey","title":"InMemoryKey","role":"symbol","navigatorTitle":[{"text":"InMemoryKey","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/inmemorykey","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InMemoryKey","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A type defining an in-memory persistence strategy"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Dependencies/DependencyValues/defaultInMemoryStorage":{"title":"defaultInMemoryStorage","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"defaultInMemoryStorage","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture15InMemoryStorageV","kind":"typeIdentifier","text":"InMemoryStorage"}],"url":"\/documentation\/composablearchitecture\/dependencies\/dependencyvalues\/defaultinmemorystorage","abstract":[],"type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies\/DependencyValues\/defaultInMemoryStorage"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"title":"Reducer"}}}