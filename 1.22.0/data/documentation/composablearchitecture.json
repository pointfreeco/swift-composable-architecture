{"primaryContentSections":[{"content":[{"text":"Additional Resources","type":"heading","level":2,"anchor":"Additional-Resources"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture","type":"reference","isActive":true}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions","isActive":true}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/www.pointfree.co\/collections\/composable-architecture"}]}]}]},{"text":"Overview","type":"heading","level":2,"anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"This library provides a few core tools that can be used to build applications of varying purpose and","type":"text"},{"text":" ","type":"text"},{"text":"complexity. It provides compelling stories that you can follow to solve many problems you encounter","type":"text"},{"text":" ","type":"text"},{"text":"day-to-day when building applications, such as:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"State management","type":"text"}],"type":"strong"}]},{"type":"paragraph","inlineContent":[{"text":"How to manage the state of your application using simple value types, and share state across","type":"text"},{"text":" ","type":"text"},{"text":"many screens so that mutations in one screen can be immediately observed in another screen.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Composition"}],"type":"strong"}]},{"type":"paragraph","inlineContent":[{"text":"How to break down large features into smaller components that can be extracted to their own,","type":"text"},{"text":" ","type":"text"},{"text":"isolated modules and be easily glued back together to form the feature.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Side effects","type":"text"}],"type":"strong"}]},{"type":"paragraph","inlineContent":[{"text":"How to let certain parts of the application talk to the outside world in the most testable and","type":"text"},{"text":" ","type":"text"},{"text":"understandable way possible.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Testing","type":"text"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"How to not only test a feature built in the architecture, but also write integration tests for"},{"type":"text","text":" "},{"type":"text","text":"features that have been composed of many parts, and write end-to-end tests to understand how"},{"type":"text","text":" "},{"type":"text","text":"side effects influence your application. This allows you to make strong guarantees that your"},{"type":"text","text":" "},{"type":"text","text":"business logic is running in the way you expect."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Ergonomics"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"How to accomplish all of the above in a simple API with as few concepts and moving parts as"},{"type":"text","text":" "},{"type":"text","text":"possible."}]}]}]}],"kind":"content"}],"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"variants":[{"paths":["\/documentation\/composablearchitecture"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"metadata":{"modules":[{"name":"ComposableArchitecture"}],"title":"ComposableArchitecture","role":"collection","externalID":"ComposableArchitecture","symbolKind":"module","roleHeading":"Framework"},"hierarchy":{"paths":[[]]},"seeAlsoSections":[{"abstract":[{"type":"text","text":"The collection of videos from "},{"identifier":"https:\/\/www.pointfree.co","isActive":true,"type":"reference"},{"type":"text","text":" that dive deep into the"},{"type":"text","text":" "},{"type":"text","text":"development of the library."}],"identifiers":["https:\/\/www.pointfree.co\/collections\/composable-architecture"],"title":"Related Documentation","anchor":"Related-Documentation"}],"sections":[],"topicSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/GettingStarted","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestingTCA","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FAQ"],"title":"Essentials","anchor":"Essentials"},{"identifiers":["doc:\/\/ComposableArchitecture\/tutorials\/MeetComposableArchitecture","doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps"],"title":"Tutorials","anchor":"Tutorials"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"],"title":"State management","anchor":"State-management"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestingTCA"],"title":"Testing","anchor":"Testing"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftConcurrency","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationBackport","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UIKit"],"title":"Integrations","anchor":"Integrations"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides"],"title":"Migration guides","anchor":"Migration-guides"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey"],"title":"Structures","anchor":"Structures","generated":true},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryFileStorage()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/LiveFileStorage()"],"title":"Functions","anchor":"Functions","generated":true},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction"],"title":"Enumerations","anchor":"Enumerations","generated":true},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PerceptionCore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Sharing","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftNavigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUICore"],"title":"Extended Modules","anchor":"Extended-Modules","generated":true}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/DependencyManagement":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement","role":"article","type":"topic","url":"\/documentation\/composablearchitecture\/dependencymanagement","abstract":[{"type":"text","text":"Learn how to register dependencies with the library so that they can be immediately accessible from"},{"type":"text","text":" "},{"type":"text","text":"any reducer."}],"title":"Dependencies"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/LiveFileStorage()":{"url":"\/documentation\/composablearchitecture\/livefilestorage()","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/LiveFileStorage()","title":"LiveFileStorage()","role":"symbol","kind":"symbol","deprecated":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"LiveFileStorage"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"FileStorage","preciseIdentifier":"s:7Sharing11FileStorageV"}],"abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUICore":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUICore","abstract":[],"url":"\/documentation\/composablearchitecture\/swiftuicore","kind":"symbol","role":"collection","type":"topic","title":"SwiftUICore"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps":{"type":"topic","title":"Building SyncUps","url":"\/tutorials\/buildingsyncups","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","abstract":[{"type":"text","text":"The SyncUps application is a recreation of one of Appleâ€™s more interesting demo applications,"},{"type":"text","text":" "},{"type":"text","text":"Scrumdinger. We recreate it from scratch using the Composable Architecture, with a focus on"},{"type":"text","text":" "},{"type":"text","text":"domain modeling, controlling dependencies, and testability."}],"role":"overview","kind":"overview"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationBackport":{"role":"article","type":"topic","title":"Observation backport","abstract":[{"type":"text","text":"Learn how the Observation framework from Swift 5.9 was backported to support iOS 16 and earlier,"},{"type":"text","text":" "},{"type":"text","text":"as well as the caveats of using the backported tools."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationBackport","url":"\/documentation\/composablearchitecture\/observationbackport","kind":"article"},"https://github.com/pointfreeco/swift-composable-architecture":{"type":"link","identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture","title":"GitHub Repo","url":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture","titleInlineContent":[{"type":"text","text":"GitHub Repo"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"kind":"article","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","role":"collectionGroup","title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Sharing":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Sharing","url":"\/documentation\/composablearchitecture\/sharing","kind":"symbol","role":"collection","type":"topic","abstract":[],"title":"Sharing"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKeyPathKey":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AppStorageKeyPathKey","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey","role":"symbol","navigatorTitle":[{"text":"AppStorageKeyPathKey","kind":"identifier"}],"abstract":[{"type":"text","text":"A type defining a user defaults persistence strategy via key path."}],"type":"topic","kind":"symbol","title":"AppStorageKeyPathKey","deprecated":true,"url":"\/documentation\/composablearchitecture\/appstoragekeypathkey"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftConcurrency":{"kind":"article","abstract":[{"type":"text","text":"Learn how to write safe, concurrent effects using Swiftâ€™s structured concurrency."}],"type":"topic","url":"\/documentation\/composablearchitecture\/swiftconcurrency","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftConcurrency","title":"Adopting Swift concurrency","role":"article"},"doc://ComposableArchitecture/tutorials/MeetComposableArchitecture":{"type":"topic","kind":"overview","url":"\/tutorials\/meetcomposablearchitecture","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/MeetComposableArchitecture","role":"overview","title":"Meet the Composable Architecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a"},{"type":"text","text":" "},{"type":"text","text":"consistent and understandable way, with composition, testing, and ergonomics in mind. It can be"},{"type":"text","text":" "},{"type":"text","text":"used in SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UIKit":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UIKit","type":"topic","title":"UIKit Integration","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/uikit","abstract":[{"text":"Integrating the Composable Architecture into a UIKit application.","type":"text"}],"kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PerceptionCore":{"title":"PerceptionCore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PerceptionCore","url":"\/documentation\/composablearchitecture\/perceptioncore","role":"collection","type":"topic","abstract":[],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Performance":{"type":"topic","role":"article","title":"Performance","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance","kind":"article","url":"\/documentation\/composablearchitecture\/performance","abstract":[{"type":"text","text":"Learn how to improve the performance of features built in the Composable Architecture."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FAQ":{"kind":"article","abstract":[{"type":"text","text":"A collection of some of the most common questions and comments people have concerning the library."}],"role":"article","url":"\/documentation\/composablearchitecture\/faq","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FAQ","title":"Frequently asked questions","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestingTCA":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestingTCA","kind":"article","title":"Testing","role":"article","type":"topic","url":"\/documentation\/composablearchitecture\/testingtca","abstract":[{"text":"Learn how to write comprehensive and exhaustive tests for your features built in the Composable","type":"text"},{"text":" ","type":"text"},{"text":"Architecture.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/GettingStarted":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/GettingStarted","kind":"article","title":"Getting started","role":"article","type":"topic","url":"\/documentation\/composablearchitecture\/gettingstarted","abstract":[{"type":"text","text":"Learn how to integrate the Composable Architecture into your project and write your first"},{"type":"text","text":" "},{"type":"text","text":"application."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"url":"\/documentation\/composablearchitecture\/store","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","navigatorTitle":[{"kind":"identifier","text":"Store"}],"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"kind":"symbol","title":"Store","type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"role":"collectionGroup","type":"topic","kind":"article","url":"\/documentation\/composablearchitecture\/navigation","abstract":[{"type":"text","text":"Learn how to use the navigation tools in the library, including how to best model your domains, how"},{"type":"text","text":" "},{"type":"text","text":"to integrate features in the reducer and view layers, and how to write tests."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","title":"Navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"abstract":[{"type":"text","text":"Learn techniques for sharing state throughout many parts of your application, and how to persist"},{"type":"text","text":" "},{"type":"text","text":"data to user defaults, the file system, and other external mediums."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","type":"topic","title":"Sharing state","kind":"article","role":"article","url":"\/documentation\/composablearchitecture\/sharingstate"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedAction":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction","type":"topic","navigatorTitle":[{"text":"IdentifiedAction","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/identifiedaction","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IdentifiedAction","kind":"identifier"}],"role":"symbol","title":"IdentifiedAction","abstract":[{"type":"text","text":"A wrapper type for actions that can be presented in a list."}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/InMemoryFileStorage()":{"type":"topic","abstract":[],"title":"InMemoryFileStorage()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InMemoryFileStorage","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"FileStorage","preciseIdentifier":"s:7Sharing11FileStorageV","kind":"typeIdentifier"}],"kind":"symbol","deprecated":true,"role":"symbol","url":"\/documentation\/composablearchitecture\/inmemoryfilestorage()","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryFileStorage()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigrationGuides":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides","url":"\/documentation\/composablearchitecture\/migrationguides","role":"collectionGroup","abstract":[{"type":"text","text":"Learn how to upgrade your application to the newest version of the Composable Architecture."}],"title":"Migration guides","kind":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","role":"collection","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"kind":"symbol","title":"Effect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","url":"\/documentation\/composablearchitecture\/effect","role":"symbol","navigatorTitle":[{"text":"Effect","kind":"identifier"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftNavigation":{"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftNavigation","url":"\/documentation\/composablearchitecture\/swiftnavigation","type":"topic","kind":"symbol","title":"SwiftNavigation","role":"collection"},"https://www.pointfree.co/collections/composable-architecture":{"title":"Point-Free Videos","type":"link","titleInlineContent":[{"type":"text","text":"Point-Free Videos"}],"identifier":"https:\/\/www.pointfree.co\/collections\/composable-architecture","url":"https:\/\/www.pointfree.co\/collections\/composable-architecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"type":"topic","title":"TestStore","navigatorTitle":[{"kind":"identifier","text":"TestStore"}],"abstract":[{"text":"A testable runtime for a reducer.","type":"text"}],"url":"\/documentation\/composablearchitecture\/teststore","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestStore"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"},"https://github.com/pointfreeco/swift-composable-architecture/discussions":{"type":"link","identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions","title":"Discussions","url":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions","titleInlineContent":[{"type":"text","text":"Discussions"}]}}}