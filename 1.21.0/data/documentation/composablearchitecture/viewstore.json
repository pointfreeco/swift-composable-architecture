{"sections":[],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"ViewStore"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewStore"}],"platforms":[],"roleHeading":"Class","modules":[{"name":"ComposableArchitecture"}],"role":"symbol","externalID":"s:22ComposableArchitecture9ViewStoreC","symbolKind":"class","title":"ViewStore"},"topicSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:send:removeDuplicates:)-9mg12","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:removeDuplicates:)-4f9j5","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:send:)-1m32f","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:)-3ak1y","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStoreOf"],"anchor":"Creating-a-view-store","title":"Creating a view store"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/state","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/subscript(dynamicMember:)-kwxk"],"anchor":"Accessing-state","title":"Accessing state"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:while:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/yield(while:)"],"anchor":"Sending-actions","title":"Sending actions"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:animation:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:animation:while:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:transaction:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Bindings","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/objectWillChange","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:send:removeDuplicates:)-9v9l0","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:removeDuplicates:)-81c6d","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:send:)-4hzhi","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:)-96hm5","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/subscript(dynamicMember:)-3q4xh"],"anchor":"SwiftUI-integration","title":"SwiftUI integration"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(get:send:)-65xes"],"generated":true,"anchor":"Instance-Methods","title":"Instance Methods"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/viewstore"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/7Combine16ObservableObjectP","doc:\/\/ComposableArchitecture\/s8SendableP"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@"},{"kind":"attribute","text":"MainActor","preciseIdentifier":"s:ScM"},{"kind":"text","text":" "},{"kind":"attribute","text":"@dynamicMemberLookup"},{"kind":"text","text":" "},{"kind":"attribute","text":"@preconcurrency"},{"kind":"text","text":" "},{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewStore"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ViewState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ViewAction"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In SwiftUI applications, a "},{"type":"codeVoice","code":"ViewStore"},{"type":"text","text":" is accessed most commonly using the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","isActive":true},{"type":"text","text":" "},{"type":"text","text":"view. It can be initialized with a store and a closure that is handed a view store and returns a"},{"type":"text","text":" "},{"type":"text","text":"view:"}]},{"type":"codeListing","code":["var body: some View {","  WithViewStore(self.store, observe: { $0 }) { viewStore in","    VStack {","      Text(\"Current count: \\(viewStore.count)\")","      Button(\"Increment\") { viewStore.send(.incrementButtonTapped) }","    }","  }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"View stores can also be observed directly by views, scenes, commands, and other contexts that"},{"type":"text","text":" "},{"type":"text","text":"support the "},{"type":"codeVoice","code":"@ObservedObject"},{"type":"text","text":" property wrapper:"}]},{"type":"codeListing","code":["@ObservedObject var viewStore: ViewStore<State, Action>"],"syntax":"swift"},{"style":"tip","name":"Tip","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If you experience compile-time issues with views that use "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore"},{"type":"text","text":", try"},{"type":"text","text":" "},{"type":"text","text":"observing the view store directly using the "},{"code":"@ObservedObject","type":"codeVoice"},{"type":"text","text":" property wrapper, instead, which"},{"type":"text","text":" "},{"type":"text","text":"is easier on the compiler."}]}]},{"type":"paragraph","inlineContent":[{"text":"In UIKit applications a ","type":"text"},{"code":"ViewStore","type":"codeVoice"},{"text":" can be created from a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true,"type":"reference"},{"text":" and then subscribed to for","type":"text"},{"text":" ","type":"text"},{"text":"state updates:","type":"text"}]},{"type":"codeListing","code":["let store: Store<State, Action>","let viewStore: ViewStore<State, Action>","private var cancellables: Set<AnyCancellable> = []","","init(store: Store<State, Action>) {","  self.store = store","  self.viewStore = ViewStore(store, observe: { $0 })","}","","func viewDidLoad() {","  super.viewDidLoad()","","  self.viewStore.publisher.count","    .sink { [weak self] in self?.countLabel.text = $0 }","    .store(in: &self.cancellables)","}","","@objc func incrementButtonTapped() {","  self.viewStore.send(.incrementButtonTapped)","}"],"syntax":"swift"}],"kind":"content"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","interfaceLanguage":"swift"},"deprecationSummary":[{"inlineContent":[{"text":"Use '@ObservableState', instead. See the following migration guide for more information: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Using-ObservableState","type":"text"}],"type":"paragraph"}],"abstract":[{"text":"A ","type":"text"},{"code":"ViewStore","type":"codeVoice"},{"text":" is an object that can observe state changes and send actions. They are most","type":"text"},{"text":" ","type":"text"},{"text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used","type":"text"},{"text":" ","type":"text"},{"text":"anywhere it makes sense to observe state or send actions.","type":"text"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/WithViewStore":{"abstract":[{"text":"A view helper that transforms a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true,"type":"reference"},{"text":" into a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","isActive":true,"type":"reference"},{"text":" so that its state can be observed","type":"text"},{"text":" ","type":"text"},{"text":"by a view builder.","type":"text"}],"type":"topic","deprecated":true,"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WithViewStore"}],"url":"\/documentation\/composablearchitecture\/withviewstore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","title":"WithViewStore","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"WithViewStore"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/subscript(dynamicMember:)-3q4xh":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/subscript(dynamicMember:)-3q4xh","title":"subscript(dynamicMember:)","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"externalParam","text":"dynamicMember"},{"kind":"text","text":" _: "},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture12BindingStateV","text":"BindingState"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">>) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"url":"\/documentation\/composablearchitecture\/viewstore\/subscript(dynamicmember:)-3q4xh","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"ViewState","type":"codeVoice"},{"type":"text","text":" is "},{"code":"ViewAction.State","type":"codeVoice"},{"type":"text","text":" and "},{"code":"ViewAction","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"BindableAction","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/send(_:while:)":{"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:while:)","title":"send(_:while:)","deprecated":true,"type":"topic","abstract":[{"text":"Sends an action into the store and then suspends while a piece of state is ","type":"text"},{"type":"codeVoice","code":"true"},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"url":"\/documentation\/composablearchitecture\/viewstore\/send(_:while:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Bindings":{"kind":"article","role":"article","type":"topic","url":"\/documentation\/composablearchitecture\/bindings","abstract":[{"text":"Learn how to connect features written in the Composable Architecture to SwiftUI bindings.","type":"text"}],"title":"Working with SwiftUI bindings","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Bindings"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/init(_:observe:send:removeDuplicates:)-9v9l0":{"type":"topic","abstract":[{"type":"text","text":"Initializes a structure that transforms a "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","type":"reference"},{"type":"text","text":" into an observable "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","type":"reference"},{"type":"text","text":" in order"},{"type":"text","text":" "},{"type":"text","text":"to compute bindings from state."}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:send:removeDuplicates:)-9v9l0","fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"State","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Action","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"observe","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV","kind":"typeIdentifier","text":"BindingViewStore"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":", "},{"kind":"externalParam","text":"send"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"externalParam","text":"removeDuplicates"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")"}],"title":"init(_:observe:send:removeDuplicates:)","url":"\/documentation\/composablearchitecture\/viewstore\/init(_:observe:send:removeduplicates:)-9v9l0","role":"symbol"},"doc://ComposableArchitecture/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/send(_:transaction:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:transaction:)","kind":"symbol","abstract":[{"text":"Sends an action to the store with a given transaction.","type":"text"}],"title":"send(_:transaction:)","deprecated":true,"type":"topic","url":"\/documentation\/composablearchitecture\/viewstore\/send(_:transaction:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":", "},{"kind":"externalParam","text":"transaction"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI11TransactionV","text":"Transaction"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV","text":"StoreTask"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/init(_:observe:send:removeDuplicates:)-9mg12":{"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:send:removeDuplicates:)-9mg12","url":"\/documentation\/composablearchitecture\/viewstore\/init(_:observe:send:removeduplicates:)-9mg12","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"State"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Action"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"observe"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":", "},{"kind":"externalParam","text":"send"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"externalParam","text":"removeDuplicates"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Initializes a view store from a store which observes changes to state."}],"title":"init(_:observe:send:removeDuplicates:)","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStoreOf":{"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ViewStoreOf"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewStoreOf"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStoreOf","url":"\/documentation\/composablearchitecture\/viewstoreof","abstract":[{"type":"text","text":"A convenience type alias for referring to a view store of a given reducer’s domain."}],"title":"ViewStoreOf","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/send(_:)":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV","text":"StoreTask"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Sends an action to the store."}],"url":"\/documentation\/composablearchitecture\/viewstore\/send(_:)","title":"send(_:)","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"navigatorTitle":[{"kind":"identifier","text":"Store"}],"url":"\/documentation\/composablearchitecture\/store","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","kind":"symbol","title":"Store","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/objectWillChange":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"objectWillChange","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ObservableObjectPublisher","preciseIdentifier":"s:7Combine25ObservableObjectPublisherC","kind":"typeIdentifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/objectWillChange","role":"symbol","kind":"symbol","deprecated":true,"abstract":[],"type":"topic","title":"objectWillChange","url":"\/documentation\/composablearchitecture\/viewstore\/objectwillchange"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/yield(while:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"yield"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/yield(while:)","title":"yield(while:)","kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/viewstore\/yield(while:)","type":"topic","abstract":[{"type":"text","text":"Suspends the current task while a predicate on state is "},{"type":"codeVoice","code":"true"},{"type":"text","text":"."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/send(_:animation:while:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:animation:while:)","type":"topic","url":"\/documentation\/composablearchitecture\/viewstore\/send(_:animation:while:)","role":"symbol","kind":"symbol","deprecated":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":", "},{"kind":"externalParam","text":"animation"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI9AnimationV","kind":"typeIdentifier","text":"Animation"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"title":"send(_:animation:while:)","abstract":[{"text":"Sends an action into the store and then suspends while a piece of state is ","type":"text"},{"type":"codeVoice","code":"true"},{"text":".","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewStore"}],"title":"ViewStore","role":"symbol","abstract":[{"text":"A ","type":"text"},{"code":"ViewStore","type":"codeVoice"},{"text":" is an object that can observe state changes and send actions. They are most","type":"text"},{"text":" ","type":"text"},{"text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used","type":"text"},{"text":" ","type":"text"},{"text":"anywhere it makes sense to observe state or send actions.","type":"text"}],"url":"\/documentation\/composablearchitecture\/viewstore","navigatorTitle":[{"kind":"identifier","text":"ViewStore"}],"deprecated":true,"type":"topic","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/subscript(dynamicMember:)-kwxk":{"fragments":[{"text":"subscript","kind":"keyword"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"dynamicMember","kind":"externalParam"},{"text":" _: ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"deprecated":true,"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/subscript(dynamicMember:)-kwxk","abstract":[{"text":"Returns the resulting value of a given key path.","type":"text"}],"url":"\/documentation\/composablearchitecture\/viewstore\/subscript(dynamicmember:)-kwxk","role":"symbol","kind":"symbol","title":"subscript(dynamicMember:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/send(_:animation:)":{"abstract":[{"type":"text","text":"Sends an action to the store with a given animation."}],"type":"topic","role":"symbol","deprecated":true,"url":"\/documentation\/composablearchitecture\/viewstore\/send(_:animation:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:animation:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"animation","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Animation","preciseIdentifier":"s:7SwiftUI9AnimationV","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"StoreTask","preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV","kind":"typeIdentifier"}],"title":"send(_:animation:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/init(_:observe:)-3ak1y":{"kind":"symbol","type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"ViewState","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"State"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"observe"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":")"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:)-3ak1y","url":"\/documentation\/composablearchitecture\/viewstore\/init(_:observe:)-3ak1y","abstract":[{"type":"text","text":"Initializes a view store from a store which observes changes to state."}],"title":"init(_:observe:)","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/init(_:observe:send:)-4hzhi":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"ViewState","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}]},"fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"State"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Action"},{"kind":"text","text":">("},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier","text":"Store"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"observe"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV","kind":"typeIdentifier","text":"BindingViewStore"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":", "},{"kind":"externalParam","text":"send"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Action"},{"text":")","kind":"text"}],"kind":"symbol","role":"symbol","title":"init(_:observe:send:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:send:)-4hzhi","abstract":[{"text":"Initializes a structure that transforms a ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true},{"text":" into an observable ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","isActive":true},{"text":" in order","type":"text"},{"text":" ","type":"text"},{"text":"to compute bindings from state.","type":"text"}],"type":"topic","url":"\/documentation\/composablearchitecture\/viewstore\/init(_:observe:send:)-4hzhi"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","type":"topic","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/binding(get:send:)-65xes":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binding","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"get","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"send","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","deprecated":true,"type":"topic","url":"\/documentation\/composablearchitecture\/viewstore\/binding(get:send:)-65xes","title":"binding(get:send:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(get:send:)-65xes","abstract":[{"text":"Derives a binding from the store that prevents direct writes to state and instead sends","type":"text"},{"text":" ","type":"text"},{"text":"actions to the store.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/init(_:observe:removeDuplicates:)-4f9j5":{"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"State"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"observe"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":", "},{"kind":"externalParam","text":"removeDuplicates"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:removeDuplicates:)-4f9j5","title":"init(_:observe:removeDuplicates:)","abstract":[{"type":"text","text":"Initializes a view store from a store which observes changes to state."}],"url":"\/documentation\/composablearchitecture\/viewstore\/init(_:observe:removeduplicates:)-4f9j5","deprecated":true,"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","type":"topic","title":"Deprecations","kind":"article","url":"\/documentation\/composablearchitecture\/swiftuideprecations","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"kind":"article","title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/init(_:observe:)-96hm5":{"kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"ViewState"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"init(_:observe:)","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"State"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewAction"},{"text":">, ","kind":"text"},{"text":"observe","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"BindingViewStore","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/composablearchitecture\/viewstore\/init(_:observe:)-96hm5","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:)-96hm5","abstract":[{"text":"Initializes a structure that transforms a ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true},{"text":" into an observable ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","isActive":true},{"text":" in order","type":"text"},{"text":" ","type":"text"},{"text":"to compute bindings from state.","type":"text"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/init(_:observe:removeDuplicates:)-81c6d":{"abstract":[{"text":"Initializes a structure that transforms a ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true},{"text":" into an observable ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","isActive":true},{"text":" in order","type":"text"},{"text":" ","type":"text"},{"text":"to compute bindings from state.","type":"text"}],"fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"State"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"observe"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV","text":"BindingViewStore"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":", "},{"kind":"externalParam","text":"removeDuplicates"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:removeDuplicates:)-81c6d","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/viewstore\/init(_:observe:removeduplicates:)-81c6d","role":"symbol","title":"init(_:observe:removeDuplicates:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/init(_:observe:send:)-1m32f":{"abstract":[{"type":"text","text":"Initializes a view store from a store which observes changes to state."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:send:)-1m32f","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"ViewState"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]},"kind":"symbol","url":"\/documentation\/composablearchitecture\/viewstore\/init(_:observe:send:)-1m32f","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"State"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Action"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"observe","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"send","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(_:observe:send:)"},"doc://ComposableArchitecture/7Combine16ObservableObjectP":{"type":"unresolvable","title":"Combine.ObservableObject","identifier":"doc:\/\/ComposableArchitecture\/7Combine16ObservableObjectP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/state":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"state","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/viewstore\/state","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/state","title":"state","deprecated":true,"abstract":[{"text":"The current state.","type":"text"}],"type":"topic"}}}