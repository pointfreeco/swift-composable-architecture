{"metadata":{"modules":[{"name":"ComposableArchitecture","relatedModules":["CasePathsCore"]}],"symbolKind":"subscript","role":"symbol","extendedModule":"CasePathsCore","externalID":"s:13CasePathsCore0A8PathablePAAE4caseypSgs14PartialKeyPathCyAA0A0VyxGG_tcip::SYNTHESIZED::s:22ComposableArchitecture16IdentifiedActionO","fragments":[{"text":"subscript","kind":"keyword"},{"text":"(","kind":"text"},{"text":"case","kind":"externalParam"},{"text":" _: ","kind":"text"},{"text":"PartialCaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:13CasePathsCore07PartialA7KeyPatha"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?","kind":"text"}],"title":"subscript(case:)","roleHeading":"Instance Subscript"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"subscript","kind":"keyword"},{"text":"(","kind":"text"},{"text":"case","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"keyPath","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:13CasePathsCore07PartialA7KeyPatha","text":"PartialCaseKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"? { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction\/CasePathable-Implementations"]]},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"CasePathable.subscript(case:)"},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction\/subscript(case:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/composablearchitecture\/identifiedaction\/subscript(case:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedAction/subscript(case:)":{"role":"symbol","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction\/subscript(case:)","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"("},{"kind":"externalParam","text":"case"},{"kind":"text","text":" _: "},{"kind":"typeIdentifier","text":"PartialCaseKeyPath","preciseIdentifier":"s:13CasePathsCore07PartialA7KeyPatha"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">) -> "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?"}],"url":"\/documentation\/composablearchitecture\/identifiedaction\/subscript(case:)","kind":"symbol","title":"subscript(case:)","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedAction":{"abstract":[{"type":"text","text":"A wrapper type for actions that can be presented in a list."}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IdentifiedAction","kind":"identifier"}],"title":"IdentifiedAction","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction","url":"\/documentation\/composablearchitecture\/identifiedaction","kind":"symbol","navigatorTitle":[{"text":"IdentifiedAction","kind":"identifier"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","type":"topic","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedAction/CasePathable-Implementations":{"type":"topic","url":"\/documentation\/composablearchitecture\/identifiedaction\/casepathable-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction\/CasePathable-Implementations","kind":"article","title":"CasePathable Implementations","abstract":[],"role":"collectionGroup"}}}