{"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/accessibilityRotor(_:entries:)-1jax8","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"nonisolated"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"accessibilityRotor","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Content","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"systemRotor","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI24AccessibilitySystemRotorV","text":"AccessibilitySystemRotor"},{"text":", ","kind":"text"},{"text":"@","kind":"attribute"},{"text":"AccessibilityRotorContentBuilder","kind":"attribute","preciseIdentifier":"s:7SwiftUI32AccessibilityRotorContentBuilderV"},{"kind":"text","text":" "},{"text":"entries","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" () -> "},{"kind":"typeIdentifier","text":"Content"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Content","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"AccessibilityRotorContent","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI25AccessibilityRotorContentP"},{"kind":"text","text":"\n"}],"languages":["swift"]}]}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","metadata":{"roleHeading":"Instance Method","modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"title":"accessibilityRotor(_:entries:)","extendedModule":"SwiftUICore","symbolKind":"method","externalID":"s:7SwiftUI4ViewPAAE18accessibilityRotor_7entriesQrAA019AccessibilitySystemE0V_qd__yctAA0gE7ContentRd__lF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV","role":"symbol","platforms":[{"beta":false,"name":"iOS","deprecated":false,"unavailable":false,"introducedAt":"15.0"},{"name":"macOS","introducedAt":"12.0","deprecated":false,"unavailable":false,"beta":false},{"introducedAt":"15.0","deprecated":false,"beta":false,"unavailable":false,"name":"tvOS"},{"introducedAt":"8.0","beta":false,"deprecated":false,"name":"watchOS","unavailable":false}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"accessibilityRotor"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Content"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:7SwiftUI24AccessibilitySystemRotorV","kind":"typeIdentifier","text":"AccessibilitySystemRotor"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"entries"},{"text":": () -> ","kind":"text"},{"text":"Content","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}]},"variants":[{"paths":["\/documentation\/composablearchitecture\/caselet\/accessibilityrotor(_:entries:)-1jax8"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Inherited from ","type":"text"},{"code":"View.accessibilityRotor(_:entries:)","type":"codeVoice"},{"type":"text","text":"."}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","title":"SwiftUI Integration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"role":"collectionGroup","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/accessibilityRotor(_:entries:)-1jax8":{"abstract":[],"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"accessibilityRotor"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Content"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:7SwiftUI24AccessibilitySystemRotorV","text":"AccessibilitySystemRotor","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"entries","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Content","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"title":"accessibilityRotor(_:entries:)","url":"\/documentation\/composablearchitecture\/caselet\/accessibilityrotor(_:entries:)-1jax8","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/accessibilityRotor(_:entries:)-1jax8"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","title":"ComposableArchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"CaseLet","kind":"identifier"}],"role":"symbol","title":"CaseLet","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","deprecated":true,"url":"\/documentation\/composablearchitecture\/caselet","navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"type":"text","text":"."}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"role":"collectionGroup","title":"View Implementations","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","abstract":[],"kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"url":"\/documentation\/composablearchitecture\/switchstore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","type":"topic","abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","isActive":true,"type":"reference"},{"type":"text","text":" views."}],"kind":"symbol","deprecated":true,"navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"role":"symbol","title":"SwitchStore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SwitchStore"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article","title":"Deprecations","url":"\/documentation\/composablearchitecture\/swiftuideprecations","type":"topic","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}]}}}