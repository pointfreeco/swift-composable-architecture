{"abstract":[{"text":"Marks the case of an enum reducer as holding onto “ephemeral” state.","type":"text"}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","seeAlsoSections":[{"anchor":"Enum-reducers","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer(state:action:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerCaseIgnored()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducerState"],"title":"Enum reducers"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"@attached","kind":"attribute"},{"kind":"text","text":"(peer, names: named(`_`)) "},{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"ReducerCaseEphemeral","kind":"identifier"},{"text":"()","kind":"text"}]}],"kind":"declarations"},{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Apply this reducer to any cases of an enum reducer that holds onto state conforming to the"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_EphemeralState","isActive":true,"type":"reference"},{"text":" protocol, such as ","type":"text"},{"type":"codeVoice","code":"AlertState"},{"text":" and","type":"text"},{"text":" ","type":"text"},{"code":"ConfirmationDialogState","type":"codeVoice"},{"text":":","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["@Reducer","enum Destination {","  @ReducerCaseEphemeral","  case alert(AlertState<Alert>)","  \/\/ ...","","  enum Alert {","    case saveButtonTapped","    case discardButtonTapped","  }","}"]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/reducercaseephemeral()"]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerCaseEphemeral()","interfaceLanguage":"swift"},"metadata":{"title":"ReducerCaseEphemeral()","modules":[{"name":"ComposableArchitecture"}],"symbolKind":"macro","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ReducerCaseEphemeral"},{"kind":"text","text":"()"}],"externalID":"s:22ComposableArchitecture20ReducerCaseEphemeralyycfm","role":"symbol","roleHeading":"Macro"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer()":{"kind":"symbol","title":"Reducer()","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","url":"\/documentation\/composablearchitecture\/reducer()","abstract":[{"text":"Helps implement the conformance to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","isActive":true},{"text":" protocol for a type.","type":"text"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseReducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducer","abstract":[{"text":"A reducer represented by multiple enum cases.","type":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/casereducer","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CaseReducer"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"CaseReducer","kind":"identifier"}],"title":"CaseReducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","title":"Effect","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","kind":"symbol","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerCaseEphemeral()":{"url":"\/documentation\/composablearchitecture\/reducercaseephemeral()","abstract":[{"type":"text","text":"Marks the case of an enum reducer as holding onto “ephemeral” state."}],"title":"ReducerCaseEphemeral()","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerCaseEphemeral()","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"ReducerCaseEphemeral","kind":"identifier"},{"kind":"text","text":"()"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/_EphemeralState":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Loosely represents features that are only briefly shown and the first time they are interacted"},{"type":"text","text":" "},{"text":"with they are dismissed. Such features do not manage any behavior on the inside.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_EphemeralState","title":"_EphemeralState","navigatorTitle":[{"kind":"identifier","text":"_EphemeralState"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"_EphemeralState","kind":"identifier"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/_ephemeralstate"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseReducerState":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CaseReducerState"}],"url":"\/documentation\/composablearchitecture\/casereducerstate","type":"topic","title":"CaseReducerState","navigatorTitle":[{"text":"CaseReducerState","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A state type that is associated with a "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducer","isActive":true,"type":"reference"},{"text":".","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducerState"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"text":" ","type":"text"},{"type":"text","text":"given an action, and describes what "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference"},{"text":"s should be executed later by the store, if any.","type":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerCaseIgnored()":{"url":"\/documentation\/composablearchitecture\/reducercaseignored()","title":"ReducerCaseIgnored()","role":"symbol","type":"topic","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"ReducerCaseIgnored","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerCaseIgnored()","abstract":[{"type":"text","text":"Marks the case of an enum reducer as “ignored”, and as such will not compose the case’s domain"},{"text":" ","type":"text"},{"type":"text","text":"into the rest of the reducer besides state."}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer(state:action:)":{"type":"topic","kind":"symbol","deprecated":true,"title":"Reducer(state:action:)","role":"symbol","url":"\/documentation\/composablearchitecture\/reducer(state:action:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer(state:action:)","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"},{"text":"(","kind":"text"},{"text":"state","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"_SynthesizedConformance","preciseIdentifier":"s:22ComposableArchitecture23_SynthesizedConformanceV"},{"text":"..., ","kind":"text"},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"text":"_SynthesizedConformance","preciseIdentifier":"s:22ComposableArchitecture23_SynthesizedConformanceV","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"abstract":[{"type":"text","text":"An overload of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()"},{"text":" that takes a description of protocol conformances to synthesize on","type":"text"},{"type":"text","text":" "},{"text":"the State and Action types","type":"text"}]}}}