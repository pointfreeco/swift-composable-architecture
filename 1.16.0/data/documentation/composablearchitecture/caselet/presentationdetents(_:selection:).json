{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"nonisolated"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"presentationDetents"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"detents","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Set","preciseIdentifier":"s:Sh","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"PresentationDetent","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI18PresentationDetentV"},{"kind":"text","text":">, "},{"text":"selection","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Binding","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7BindingV"},{"kind":"text","text":"<"},{"text":"PresentationDetent","preciseIdentifier":"s:7SwiftUI18PresentationDetentV","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":"\n"}],"languages":["swift"]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/presentationDetents(_:selection:)","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"metadata":{"platforms":[{"name":"iOS","introducedAt":"16.0","beta":false,"deprecated":false,"unavailable":false},{"deprecated":false,"name":"macOS","introducedAt":"13.0","unavailable":false,"beta":false},{"introducedAt":"16.0","name":"tvOS","deprecated":false,"beta":false,"unavailable":false},{"deprecated":false,"beta":false,"name":"watchOS","introducedAt":"9.0","unavailable":false}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"presentationDetents","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:Sh","kind":"typeIdentifier","text":"Set"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI18PresentationDetentV","text":"PresentationDetent"},{"text":">, ","kind":"text"},{"text":"selection","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Binding","preciseIdentifier":"s:7SwiftUI7BindingV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI18PresentationDetentV","text":"PresentationDetent"},{"kind":"text","text":">) -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"extendedModule":"SwiftUICore","title":"presentationDetents(_:selection:)","roleHeading":"Instance Method","externalID":"s:7SwiftUI4ViewPAAE19presentationDetents_9selectionQrShyAA18PresentationDetentVG_AA7BindingVyAGGtF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV","symbolKind":"method"},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"View.presentationDetents(_:selection:)","type":"codeVoice"},{"text":".","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/caselet\/presentationdetents(_:selection:)"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/presentationDetents(_:selection:)":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/presentationDetents(_:selection:)","title":"presentationDetents(_:selection:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"presentationDetents","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:7SwiftUI18PresentationDetentV","text":"PresentationDetent","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"selection","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Binding","preciseIdentifier":"s:7SwiftUI7BindingV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI18PresentationDetentV","text":"PresentationDetent"},{"kind":"text","text":">) -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"url":"\/documentation\/composablearchitecture\/caselet\/presentationdetents(_:selection:)","kind":"symbol","role":"symbol","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","title":"View Implementations","role":"collectionGroup","abstract":[],"kind":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"title":"SwitchStore","abstract":[{"text":"A view that observes when enum state held in a store changes cases, and provides stores to","type":"text"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"type":"text","text":" views."}],"role":"symbol","deprecated":true,"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"SwitchStore","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","url":"\/documentation\/composablearchitecture\/switchstore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"title":"Deprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article","url":"\/documentation\/composablearchitecture\/swiftuideprecations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"type":"topic","title":"SwiftUI Integration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","kind":"article","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CaseLet"}],"url":"\/documentation\/composablearchitecture\/caselet","title":"CaseLet","role":"symbol","abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"text":".","type":"text"}],"kind":"symbol","type":"topic","deprecated":true}}}