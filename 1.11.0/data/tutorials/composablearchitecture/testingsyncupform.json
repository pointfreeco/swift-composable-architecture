{"variants":[{"paths":["\/tutorials\/composablearchitecture\/testingsyncupform"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[{"kind":"hero","title":"Testing the sync-up form","chapter":"New sync-up form","estimatedTimeInMinutes":10,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We now have a moderately complex feature for editing the details of a sync-up, the "},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":" "},{"type":"text","text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come"},{"type":"text","text":" "},{"type":"text","text":"face-to-face with dependencies for the first time in this tutorial."}]}]},{"kind":"tasks","tasks":[{"anchor":"Removing-attendees","title":"Removing attendees","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The first significant logic we added to our feature was that of adding and removing attendees."},{"type":"text","text":" "},{"type":"text","text":"Let’s start by testing the logic for removing attendees since it’s quite similar to what"},{"type":"text","text":" "},{"type":"text","text":"we already did in "},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" feature."}]}],"mediaPosition":"trailing"}],"stepsSection":[{"code":"TestingSyncUpForm-01-code-0001.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a new test file called SyncUpFormTests.swift and paste in some basic scaffolding for"},{"type":"text","text":" "},{"type":"text","text":"a new test case."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"TestingSyncUpForm-01-code-0002.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Construct a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"},{"type":"text","text":" with the initial state that has two"},{"type":"text","text":" "},{"type":"text","text":"attendees so that we can delete one of them."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"TestingSyncUpForm-01-code-0003.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Emulate the user deleting the attendee by sending the "},{"type":"codeVoice","code":"onDeleteAttendees"},{"type":"text","text":" action and assert"},{"type":"text","text":" "},{"type":"text","text":"that the attendee is indeed removed from the array, leaving only the other attendee in the"},{"type":"text","text":" "},{"type":"text","text":"array."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Run the test suite to make sure everything passes."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"That’s all it takes to test the very basic functionality of removing an attendee. But there’s"},{"type":"text","text":" "},{"type":"text","text":"additional logic that we haven’t yet covered in the test, which is how the focus changes."},{"type":"text","text":" "},{"type":"text","text":"Let’s also test that logic."}]},{"code":"TestingSyncUpForm-01-code-0004.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a new test method for testing what happens when we delete a focused attendee. This time"},{"type":"text","text":" "},{"type":"text","text":"the initial state with start with two attendees, which have been pulled out into variables"},{"type":"text","text":" "},{"type":"text","text":"so that we can reference them. The first attendee will also be focused."}]}],"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We have collapsed the "},{"type":"codeVoice","code":"testRemoveAttendee"},{"type":"text","text":" method in the code snippet."}]}],"type":"aside","name":"Note"}],"type":"step","runtimePreview":null,"media":null},{"code":"TestingSyncUpForm-01-code-0005.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Emulate the user deleting the first attendee by sending the "},{"type":"codeVoice","code":"onDeleteAttendees"},{"type":"text","text":" action."},{"type":"text","text":" "},{"type":"text","text":"This time the state will change a little differently. The "},{"type":"codeVoice","code":"attendees"},{"type":"text","text":" array will hold a"},{"type":"text","text":" "},{"type":"text","text":"single element, the 2nd attendee, and further the focus will change to the 2nd attendee."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Run the test suite to make sure everything passes."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"We have now verified that the focus correctly changes when removing an attendee. There is"},{"type":"text","text":" "},{"type":"text","text":"still an edge case we have not tested. What happens when there are two attendees, neither of"},{"type":"text","text":" "},{"type":"text","text":"which is focused, and you delete one? We would expect that the focus does "},{"type":"emphasis","inlineContent":[{"type":"text","text":"not"}]},{"type":"text","text":" change, but"},{"type":"text","text":" "},{"type":"text","text":"the best way to prove that is to write a test. We leave that test as an exercise for the"},{"type":"text","text":" "},{"type":"text","text":"reader."}]}]},{"anchor":"Adding-attendees","title":"Adding attendees","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s move on to the next bit of functionality in the feature: adding an attendee. This turns"},{"type":"text","text":" "},{"type":"text","text":"out to be trickier than you might expect due to an uncontrolled dependency."}]}],"mediaPosition":"trailing"}],"stepsSection":[{"code":"TestingSyncUpForm-02-code-0001.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a new test method for testing the flow of adding a new attendee. We can start in an"},{"type":"text","text":" "},{"type":"text","text":"initial state with no attendees."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"TestingSyncUpForm-02-code-0002.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Emulate the user tapping on “Add attendee” button by sending the "},{"type":"codeVoice","code":"addAttendeeButtonTapped"},{"type":"text","text":" "},{"type":"text","text":"action. When the action is sent we expect the state to be mutated in a way that causes"},{"type":"text","text":" "},{"type":"text","text":"an attendee to be added to the "},{"type":"codeVoice","code":"attendees"},{"type":"text","text":" array, and the focus should also point at that"},{"type":"text","text":" "},{"type":"text","text":"new attendee."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"TestingSyncUpForm-02-code-0003.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Run the test suite to see that it unfortunately fails. The reason it fails is because in the"},{"type":"text","text":" "},{"type":"text","text":"reducer we are reaching out to an uncontrolled dependency for generating attendee IDs, which"},{"type":"text","text":" "},{"type":"text","text":"are UUIDs under the hood."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are two ways one can fix this test. You can use the library’s “non-exhaustive” testing"},{"type":"text","text":" "},{"type":"text","text":"tools (see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Testing#Non-exhaustive-testing"},{"type":"text","text":" for more info), which allows you to assert"},{"type":"text","text":" "},{"type":"text","text":"on only the bits of state you care about. That can be handy, but we don’t feel it is"},{"type":"text","text":" "},{"type":"text","text":"appropriate in such a simple feature like "},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":". We think non-exhaustive testing is"},{"type":"text","text":" "},{"type":"text","text":"best saved for testing the integration of features, and that exhaustive testing is best for"},{"type":"text","text":" "},{"type":"text","text":"testing isolated, leaf features."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The other way to test this feature is to control our feature’s dependence on UUID generation."},{"type":"text","text":" "},{"type":"text","text":"That way we can predict what UUIDs will be generated during the test, and then we will be"},{"type":"text","text":" "},{"type":"text","text":"able to write a passing, fully exhaustive test. And luckily the Composable Architecture comes"},{"type":"text","text":" "},{"type":"text","text":"with a full dependency management system (see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement"},{"type":"text","text":" for more info) that"},{"type":"text","text":" "},{"type":"text","text":"makes it very easy to control and override dependencies."}]},{"code":"TestingSyncUpForm-02-code-0004.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Go back to SyncUpForm.swift, where the reducer is implemented, and add a new property to the"},{"type":"text","text":" "},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":" type. It will use the "},{"type":"codeVoice","code":"@Dependency"},{"type":"text","text":" property wrapper to express that the"},{"type":"text","text":" "},{"type":"text","text":"feature has a dependency, and we will provide the key path "},{"type":"codeVoice","code":"\\.uuid"},{"type":"text","text":" to denote the dependence"},{"type":"text","text":" "},{"type":"text","text":"on UUID generation."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"TestingSyncUpForm-02-code-0005.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Then, in the reducer’s logic, any place we reached out to the uncontrolled UUID generator,"},{"type":"text","text":" "},{"type":"text","text":"for example "},{"type":"codeVoice","code":"Attendee.ID()"},{"type":"text","text":", we will instead use the "},{"type":"codeVoice","code":"uuid"},{"type":"text","text":" dependency."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"With that one change, if you were to run the test suite again you would get the same test"},{"type":"text","text":" "},{"type":"text","text":"failures as before, but there would also be a new one letting you know that the"},{"type":"text","text":" "},{"type":"codeVoice","code":"uuid"},{"type":"text","text":" dependency was used in a testing context without being overridden. That is a great"},{"type":"text","text":" "},{"type":"text","text":"test failure to have because it keeps you from accidentally using live dependencies in a"},{"type":"text","text":" "},{"type":"text","text":"testing context, which can be very problematic for things like API clients, analytics,"},{"type":"text","text":" "},{"type":"text","text":"and more."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To fix this we will override the "},{"type":"codeVoice","code":"uuid"},{"type":"text","text":" dependency when when construct the "},{"type":"codeVoice","code":"TestStore"},{"type":"text","text":" in the"},{"type":"text","text":" "},{"type":"text","text":"test."}]},{"code":"TestingSyncUpForm-02-code-0006.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The initializer on "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"},{"type":"text","text":" has an optional trailing closure"},{"type":"text","text":" "},{"type":"text","text":"that can be provided to override any dependencies for the test. Use it to override the"},{"type":"text","text":" "},{"type":"codeVoice","code":"uuid"},{"type":"text","text":" dependency with an “incrementing” UUID generator. This is a generator that when"},{"type":"text","text":" "},{"type":"text","text":"invoked simply chooses the next UUID starting at 00000000-0000-0000-0000-000000000000."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"TestingSyncUpForm-02-code-0007.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We can now deterministically predict the UUID that will be generated for the new attendee"},{"type":"text","text":" "},{"type":"text","text":"when the button is tapped. It will be 00000000-0000-0000-0000-0000000000000000, but there"},{"type":"text","text":" "},{"type":"text","text":"is also a helper on "},{"type":"codeVoice","code":"UUID"},{"type":"text","text":" provided to generate a UUID from an integer."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Run the test suite to see that it passes. We now have a lot of test coverage on adding"},{"type":"text","text":" "},{"type":"text","text":"and removing attendees, and how the focus changes during those actions. There is one more"},{"type":"text","text":" "},{"type":"text","text":"edge case that we do not have test coverage for: removing the last attendee. We had added"},{"type":"text","text":" "},{"type":"text","text":"extra logic in the reducer so that when you remove the last attendee we insert a new one so"},{"type":"text","text":" "},{"type":"text","text":"that the list is never empty. We leave writing a test for that scenario as an exercise for the"},{"type":"text","text":" "},{"type":"text","text":"reader."}]}]}]},{"action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm","overridingTitle":"Get started"},"featuredEyebrow":"Tutorial","kind":"callToAction","title":"Presenting the sync-up form","abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"type":"text","text":" "},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"type":"text","text":" "},{"type":"text","text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm","interfaceLanguage":"swift"},"kind":"project","metadata":{"title":"Testing the sync-up form","categoryPathComponent":"BuildingSyncUps","role":"project","category":"Building SyncUps"},"hierarchy":{"modules":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/What-is-SyncUps-","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#A-tour-of-SyncUps"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#Create-the-SyncUps-project"}]}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Lists-of-sync-ups","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#Domain-models"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#SyncUpsList-feature"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#A-handy-debugging-tool"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps#Writing-your-first-test"}]}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/New-sync-up-form","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Sync-up-form-basics"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-an-approach"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-a-better-approach"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Removing-attendees"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Adding-attendees"}]}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Presenting-the-sync-up-form","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-domains-together"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-views-together"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Adding-a-sync-up"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Non-exhaustive-testing"}]}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Persisting-sync-ups-to-disk","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Persisting-data-to-disk"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Testing-persistence"}]}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Sync-up-detail","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail#Create-the-sync-up-detail"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Editing-the-sync-up"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Deleting-the-sync-up"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#More-concise-domain-modeling"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail#Testing-the-edit-flow"}]}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Navigating-to-sync-up-detail","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-feature"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-view"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Navigating-to-the-detail"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#The-meeting-screen"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#Navigate-to-a-meeting"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation#Deleting-a-sync-up"}]}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Record-meeting","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Create-a-new-feature"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Navigating-to-the-record-meeting-feature"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#A-basic-timer"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Controlling-dependencies-early"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Ending-the-meeting-early"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Testing-the-timer"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission"}]}]}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","paths":[["doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/$volume","doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/New-sync-up-form"]]},"references":{"TestingSyncUpForm-02-code-0001.swift":{"syntax":"swift","content":["","import ComposableArchitecture","import XCTest","","@testable import SyncUps","","class SyncUpFormTests: XCTestCase {","  @MainActor","  func testAddAttendee() async {","    let store = TestStore(","      initialState: SyncUpForm.State(","        syncUp: SyncUp(id: SyncUp.ID())","      )","    ) {","      SyncUpForm()","    }","  }","","  @MainActor","  func testRemoveFocusedAttendee() async {","    \/\/ ...","  }","","  @MainActor","  func testRemoveAttendee() async {","    \/\/ ...","  }","}"],"fileName":"SyncUpFormTests.swift","identifier":"TestingSyncUpForm-02-code-0001.swift","type":"file","fileType":"swift","highlights":[{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19}]},"TestingSyncUpForm-01-code-0005.swift":{"syntax":"swift","content":["import ComposableArchitecture","import XCTest","","@testable import SyncUps","","class SyncUpFormTests: XCTestCase {","  @MainActor","  func testRemoveFocusedAttendee() async {","    let attendee1 = Attendee(id: Attendee.ID())","    let attendee2 = Attendee(id: Attendee.ID())","    let store = TestStore(","      initialState: SyncUpForm.State(","        focus: .attendee(attendee1.id),","        syncUp: SyncUp(","          id: SyncUp.ID(),","          attendees: [attendee1, attendee2]","        )","      )","    ) {","      SyncUpForm()","    }","","    await store.send(.onDeleteAttendees([0])) {","      $0.focus = .attendee(attendee2.id)","      $0.syncUp.attendees = [attendee2]","    }","  }","","  @MainActor","  func testRemoveAttendee() async {","    \/\/ ...","  }","}"],"fileName":"SyncUpFormTests.swift","identifier":"TestingSyncUpForm-01-code-0005.swift","type":"file","fileType":"swift","highlights":[{"line":22},{"line":23},{"line":24},{"line":25},{"line":26}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation#The-meeting-screen":{"role":"pseudoSymbol","title":"The meeting screen","abstract":[{"type":"text","text":"Now that we have a navigation stack in place we can start navigating to other features in the"},{"type":"text","text":" "},{"type":"text","text":"application. The simplest is the meeting screen, which allows you to see the details of a"},{"type":"text","text":" "},{"type":"text","text":"previous recorded meeting."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#The-meeting-screen","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/meetingnavigation#The-meeting-screen"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Creating-the-app-feature":{"role":"pseudoSymbol","title":"Creating the app feature","abstract":[{"type":"text","text":"We will wrap the application built so far in a "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" so that we can navigate to"},{"type":"text","text":" "},{"type":"text","text":"the detail screen. To do this we will create a new root-level feature that will be responsible"},{"type":"text","text":" "},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-feature","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Creating-the-app-feature"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Ending-the-meeting-early":{"role":"pseudoSymbol","title":"Ending the meeting early","abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Ending-the-meeting-early","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/implementingtimer#Ending-the-meeting-early"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation#Non-exhaustive-testing":{"role":"pseudoSymbol","title":"Non-exhaustive testing","abstract":[{"type":"text","text":"We have now integrated two moderately complex features, the "},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" and "},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":", and"},{"type":"text","text":" "},{"type":"text","text":"so its time to write some tests. This will give us the opportunity to prove that the features"},{"type":"text","text":" "},{"type":"text","text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less"},{"type":"text","text":" "},{"type":"text","text":"fragile."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Non-exhaustive-testing","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation#Non-exhaustive-testing"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingListOfSyncUps":{"role":"project","title":"Testing the list of sync-ups","estimatedTime":"5min","abstract":[{"type":"text","text":"The SyncUpsList feature we have built so far isn’t very complex. In fact, it only has one"},{"type":"text","text":" "},{"type":"text","text":"primary action, that of deleting sync-ups from its collection. However, it can be good practice"},{"type":"text","text":" "},{"type":"text","text":"to test new features as you add them, and in the future we will have much more complicated"},{"type":"text","text":" "},{"type":"text","text":"behavior to test."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps","kind":"project","type":"topic","url":"\/tutorials\/composablearchitecture\/testinglistofsyncups"},"TestingSyncUpForm-01-code-0001.swift":{"syntax":"swift","content":["import ComposableArchitecture","import XCTest","","@testable import SyncUps","","class SyncUpFormTests: XCTestCase {","  @MainActor","  func testRemoveAttendee() async {","","  }","}"],"fileName":"SyncUpFormTests.swift","identifier":"TestingSyncUpForm-01-code-0001.swift","type":"file","fileType":"swift","highlights":[]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#Deleting-the-sync-up":{"role":"pseudoSymbol","title":"Deleting the sync-up","abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"type":"text","text":" "},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"type":"text","text":" "},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Deleting-the-sync-up","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#Deleting-the-sync-up"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation":{"role":"project","title":"Navigating to a sync-up detail","estimatedTime":"20min","abstract":[{"type":"text","text":"We will wrap the application built so far in a "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" so that we can navigate to"},{"type":"text","text":" "},{"type":"text","text":"the detail screen. To do this we will create a new root-level feature that will be responsible"},{"type":"text","text":" "},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation","kind":"project","type":"topic","url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Sync-up-detail":{"role":"article","title":"Sync-up detail","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Sync-up-detail","kind":"article","type":"topic","url":"\/tutorials\/buildingsyncups\/sync-up-detail"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Creating-the-app-view":{"role":"pseudoSymbol","title":"Creating the app view","abstract":[{"type":"text","text":"We will wrap the application built so far in a "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" so that we can navigate to"},{"type":"text","text":" "},{"type":"text","text":"the detail screen. To do this we will create a new root-level feature that will be responsible"},{"type":"text","text":" "},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-view","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Creating-the-app-view"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetail":{"role":"project","title":"Sync-up detail","estimatedTime":"5min","abstract":[{"type":"text","text":"The “sync-up detail” screen shows all the information of a sync-up, and has many actions that"},{"type":"text","text":" "},{"type":"text","text":"can take place in the screen. The user can edit the sync-up, or start a new meeting in the sync"},{"type":"text","text":" "},{"type":"text","text":"up, or drill-down to a past meeting, or even delete the meeting."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail","kind":"project","type":"topic","url":"\/tutorials\/composablearchitecture\/syncupdetail"},"TestingSyncUpForm-02-code-0007.swift":{"syntax":"swift","content":["","import ComposableArchitecture","import XCTest","","@testable import SyncUps","","class SyncUpFormTests: XCTestCase {","  @MainActor","  func testAddAttendee() async {","    let store = TestStore(","      initialState: SyncUpForm.State(","        syncUp: SyncUp(id: SyncUp.ID())","      )","    ) {","      SyncUpForm()","    } withDependencies: {","      $0.uuid = .incrementing","    }","","    await store.send(.addAttendeeButtonTapped) {","      state.focus = .attendee(Attendee.ID(0))","      state.syncUp.attendees.append(Attendee(id: Attendee.ID(0)))","    }","  }","","  @MainActor","  func testRemoveFocusedAttendee() async {","    \/\/ ...","  }","","  @MainActor","  func testRemoveAttendee() async {","    \/\/ ...","  }","}"],"fileName":"SyncUpFormTests.swift","identifier":"TestingSyncUpForm-02-code-0007.swift","type":"file","fileType":"swift","highlights":[{"line":21},{"line":22}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Form-focus-an-approach":{"role":"pseudoSymbol","title":"Form focus: an approach","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"type":"text","text":" "},{"type":"text","text":"feature to make things a little more interesting."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-an-approach","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/syncupform#Form-focus-an-approach"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingNavigation#Deleting-a-sync-up":{"role":"pseudoSymbol","title":"Deleting a sync-up","abstract":[{"type":"text","text":"We have now implemented a navigation stack at the root of our application, and integrated"},{"type":"text","text":" "},{"type":"text","text":"3 features into the stack: the "},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" feature, the "},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":" feature, and the"},{"type":"text","text":" "},{"type":"codeVoice","code":"MeetingView"},{"type":"text","text":". Some of these features have quite complex logic binding them together, such as"},{"type":"text","text":" "},{"type":"text","text":"when one deletes a sync-up from the detail screen it should pop the screen off the stack."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation#Deleting-a-sync-up","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/testingnavigation#Deleting-a-sync-up"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Lists-of-sync-ups":{"role":"article","title":"Lists of sync-ups","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Lists-of-sync-ups","kind":"article","type":"topic","url":"\/tutorials\/buildingsyncups\/lists-of-sync-ups"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingSpeechRecognizer":{"role":"project","title":"Adding a speech recognizer","estimatedTime":"10min","abstract":[{"type":"text","text":"We have just one feature left to implement, and it’s one of the most complicated ones. We need"},{"type":"text","text":" "},{"type":"text","text":"to use Apple’s "},{"type":"codeVoice","code":"SFSpeechRecognizer"},{"type":"text","text":" API to ask the user for permission to transcribe their"},{"type":"text","text":" "},{"type":"text","text":"audio, and then start a speech recognition task to live transcribe the meeting while it is"},{"type":"text","text":" "},{"type":"text","text":"in progress."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer","kind":"project","type":"topic","url":"\/tutorials\/composablearchitecture\/implementingspeechrecognizer"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/What-is-SyncUps-":{"role":"article","title":"What is SyncUps?","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/What-is-SyncUps-","kind":"article","type":"topic","url":"\/tutorials\/buildingsyncups\/what-is-syncups-"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#A-basic-timer":{"role":"pseudoSymbol","title":"A basic timer","abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#A-basic-timer","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/implementingtimer#A-basic-timer"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Integrating-the-feature-views-together":{"role":"pseudoSymbol","title":"Integrating the feature views together","abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"type":"text","text":" "},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"type":"text","text":" "},{"type":"text","text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-views-together","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Integrating-the-feature-views-together"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps#Testing-persistence":{"role":"pseudoSymbol","title":"Testing persistence","abstract":[{"type":"text","text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some"},{"type":"text","text":" "},{"type":"text","text":"persistence. This will involve using the “shared state” tools from the library, such as"},{"type":"text","text":" "},{"overridingTitleInlineContent":[{"type":"codeVoice","code":"@Shared"}],"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","overridingTitle":"@Shared"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:)"},{"type":"text","text":"."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Testing-persistence","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/persistingsyncups#Testing-persistence"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature#Navigating-to-the-record-meeting-feature":{"role":"pseudoSymbol","title":"Navigating to the record meeting feature","abstract":[{"type":"text","text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will"},{"type":"text","text":" "},{"type":"text","text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Navigating-to-the-record-meeting-feature","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/recordmeetingfeature#Navigating-to-the-record-meeting-feature"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Presenting-the-sync-up-form":{"role":"article","title":"Presenting the sync-up form","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Presenting-the-sync-up-form","kind":"article","type":"topic","url":"\/tutorials\/buildingsyncups\/presenting-the-sync-up-form"},"TestingSyncUpForm-02-code-0005.swift":{"syntax":"swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpForm {","  @ObservableState","  struct State: Equatable {","    var focus: Field? = .title","    var syncUp: SyncUp","","    enum Field: Hashable {","      case attendee(Attendee.ID)","      case title","    }","  }","","  enum Action: BindableAction {","    case addAttendeeButtonTapped","    case binding(BindingAction<State>)","    case onDeleteAttendees(IndexSet)","  }","","  @Dependency(\\.uuid) var uuid","","  var body: some ReducerOf<Self> {","    BindingReducer()","","    Reduce { state, action in","      switch action {","      case .addAttendeeButtonTapped:","        let attendee = Attendee(id: uuid())","        state.syncUp.attendees.append(attendee)","        state.focus = .attendee(attendee.id)","        return .none","","      case .binding:","        return .none","","      case let .onDeleteAttendees(indices):","        state.syncUp.attendees.remove(atOffsets: indices)","        guard","          !state.syncUp.attendees.isEmpty,","          let firstIndex = indices.first","        else { return .none }","        let index = min(firstIndex, state.syncUp.attendees.count - 1)","        state.focus = .attendee(state.syncUp.attendees[index].id)","        return .none","      }","    }","  }","}","","struct SyncUpFormView: View {","  \/\/ ...","}"],"fileName":"SyncUpForm.swift","identifier":"TestingSyncUpForm-02-code-0005.swift","type":"file","fileType":"swift","highlights":[{"line":31}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm":{"role":"project","title":"Presenting the sync-up form","estimatedTime":"10min","abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"type":"text","text":" "},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"type":"text","text":" "},{"type":"text","text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm","kind":"project","type":"topic","url":"\/tutorials\/composablearchitecture\/presentingsyncupform"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Navigating-to-the-detail":{"role":"pseudoSymbol","title":"Navigating to the detail","abstract":[{"type":"text","text":"We will wrap the application built so far in a "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" so that we can navigate to"},{"type":"text","text":" "},{"type":"text","text":"the detail screen. To do this we will create a new root-level feature that will be responsible"},{"type":"text","text":" "},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Navigating-to-the-detail","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Navigating-to-the-detail"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpDetail#Testing-the-edit-flow":{"role":"pseudoSymbol","title":"Testing the edit flow","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":" feature has slowly become quite complex. It now handles two forms of"},{"type":"text","text":" "},{"type":"text","text":"navigation (an alert and sheet), it models navigation state with a single enum, and it"},{"type":"text","text":" "},{"type":"text","text":"communicates with a parent feature via delegate actions. It’s about time we got some test"},{"type":"text","text":" "},{"type":"text","text":"coverage on this feature so we can be sure it works as we expect, and so that we can make future"},{"type":"text","text":" "},{"type":"text","text":"changes with confidence."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail#Testing-the-edit-flow","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/testingsyncupdetail#Testing-the-edit-flow"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#A-handy-debugging-tool":{"role":"pseudoSymbol","title":"A handy debugging tool","abstract":[{"type":"text","text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the"},{"type":"text","text":" "},{"type":"text","text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as"},{"type":"text","text":" "},{"type":"text","text":"the app evolves."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#A-handy-debugging-tool","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/listsofsyncups#A-handy-debugging-tool"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature#Create-a-new-feature":{"role":"pseudoSymbol","title":"Create a new feature","abstract":[{"type":"text","text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will"},{"type":"text","text":" "},{"type":"text","text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Create-a-new-feature","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/recordmeetingfeature#Create-a-new-feature"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Testing-the-timer":{"role":"pseudoSymbol","title":"Testing the timer","abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Testing-the-timer","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/implementingtimer#Testing-the-timer"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation#Navigate-to-a-meeting":{"role":"pseudoSymbol","title":"Navigate to a meeting","abstract":[{"type":"text","text":"Now that we have a navigation stack in place we can start navigating to other features in the"},{"type":"text","text":" "},{"type":"text","text":"application. The simplest is the meeting screen, which allows you to see the details of a"},{"type":"text","text":" "},{"type":"text","text":"previous recorded meeting."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#Navigate-to-a-meeting","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/meetingnavigation#Navigate-to-a-meeting"},"TestingSyncUpForm-02-code-0006.swift":{"syntax":"swift","content":["","import ComposableArchitecture","import XCTest","","@testable import SyncUps","","class SyncUpFormTests: XCTestCase {","  @MainActor","  func testAddAttendee() async {","    let store = TestStore(","      initialState: SyncUpForm.State(","        syncUp: SyncUp(id: SyncUp.ID())","      )","    ) {","      SyncUpForm()","    } withDependencies: {","      $0.uuid = .incrementing","    }","","    await store.send(.addAttendeeButtonTapped) {","      let attendee = Attendee(id: Attendee.ID())","      $0.focus = .attendee(attendee.id)","      $0.syncUp.attendees.append(attendee)","    }","  }","","  @MainActor","  func testRemoveFocusedAttendee() async {","    \/\/ ...","  }","","  @MainActor","  func testRemoveAttendee() async {","    \/\/ ...","  }","}"],"fileName":"SyncUpFormTests.swift","identifier":"TestingSyncUpForm-02-code-0006.swift","type":"file","fileType":"swift","highlights":[{"line":16},{"line":17}]},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Persisting-sync-ups-to-disk":{"role":"article","title":"Persisting sync-ups to disk","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Persisting-sync-ups-to-disk","kind":"article","type":"topic","url":"\/tutorials\/buildingsyncups\/persisting-sync-ups-to-disk"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Sync-up-form-basics":{"role":"pseudoSymbol","title":"Sync-up form basics","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"type":"text","text":" "},{"type":"text","text":"feature to make things a little more interesting."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Sync-up-form-basics","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/syncupform#Sync-up-form-basics"},"TestingSyncUpForm-02-code-0004.swift":{"syntax":"swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpForm {","  @ObservableState","  struct State: Equatable {","    var focus: Field? = .title","    var syncUp: SyncUp","","    enum Field: Hashable {","      case attendee(Attendee.ID)","      case title","    }","  }","","  enum Action: BindableAction {","    case addAttendeeButtonTapped","    case binding(BindingAction<State>)","    case onDeleteAttendees(IndexSet)","  }","","  @Dependency(\\.uuid) var uuid","","  var body: some ReducerOf<Self> {","    BindingReducer()","","    Reduce { state, action in","      switch action {","      case .addAttendeeButtonTapped:","        let attendee = Attendee(id: Attendee.ID())","        state.syncUp.attendees.append(attendee)","        state.focus = .attendee(attendee.id)","        return .none","","      case .binding:","        return .none","","      case let .onDeleteAttendees(indices):","        state.syncUp.attendees.remove(atOffsets: indices)","        guard","          !state.syncUp.attendees.isEmpty,","          let firstIndex = indices.first","        else { return .none }","        let index = min(firstIndex, state.syncUp.attendees.count - 1)","        state.focus = .attendee(state.syncUp.attendees[index].id)","        return .none","      }","    }","  }","}","","struct SyncUpFormView: View {","  \/\/ ...","}"],"fileName":"SyncUpForm.swift","identifier":"TestingSyncUpForm-02-code-0004.swift","type":"file","fileType":"swift","highlights":[{"line":23},{"line":24}]},"TestingSyncUpForm-02-code-0002.swift":{"syntax":"swift","content":["","import ComposableArchitecture","import XCTest","","@testable import SyncUps","","class SyncUpFormTests: XCTestCase {","  @MainActor","  func testAddAttendee() async {","    let store = TestStore(","      initialState: SyncUpForm.State(","        syncUp: SyncUp(id: SyncUp.ID())","      )","    ) {","      SyncUpForm()","    }","","    await store.send(.addAttendeeButtonTapped) {","      let attendee = Attendee(id: Attendee.ID())","      $0.focus = .attendee(attendee.id)","      $0.syncUp.attendees.append(attendee)","    }","  }","","  @MainActor","  func testRemoveFocusedAttendee() async {","    \/\/ ...","  }","","  @MainActor","  func testRemoveAttendee() async {","    \/\/ ...","  }","}"],"fileName":"SyncUpFormTests.swift","identifier":"TestingSyncUpForm-02-code-0002.swift","type":"file","fileType":"swift","highlights":[{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation":{"role":"project","title":"Navigating to a meeting","estimatedTime":"5min","abstract":[{"type":"text","text":"Now that we have a navigation stack in place we can start navigating to other features in the"},{"type":"text","text":" "},{"type":"text","text":"application. The simplest is the meeting screen, which allows you to see the details of a"},{"type":"text","text":" "},{"type":"text","text":"previous recorded meeting."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation","kind":"project","type":"topic","url":"\/tutorials\/composablearchitecture\/meetingnavigation"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingListOfSyncUps#Writing-your-first-test":{"role":"pseudoSymbol","title":"Writing your first test","abstract":[{"type":"text","text":"The SyncUpsList feature we have built so far isn’t very complex. In fact, it only has one"},{"type":"text","text":" "},{"type":"text","text":"primary action, that of deleting sync-ups from its collection. However, it can be good practice"},{"type":"text","text":" "},{"type":"text","text":"to test new features as you add them, and in the future we will have much more complicated"},{"type":"text","text":" "},{"type":"text","text":"behavior to test."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps#Writing-your-first-test","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/testinglistofsyncups#Writing-your-first-test"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#SyncUpsList-feature":{"role":"pseudoSymbol","title":"SyncUpsList feature","abstract":[{"type":"text","text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the"},{"type":"text","text":" "},{"type":"text","text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as"},{"type":"text","text":" "},{"type":"text","text":"the app evolves."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#SyncUpsList-feature","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/listsofsyncups#SyncUpsList-feature"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Shared":{"role":"symbol","title":"Shared","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Shared"}],"abstract":[{"type":"text","text":"A property wrapper type that shares a value with multiple parts of an application."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Shared"}],"url":"\/documentation\/composablearchitecture\/shared"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps#A-tour-of-SyncUps":{"role":"pseudoSymbol","title":"A tour of SyncUps","abstract":[{"type":"text","text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a"},{"type":"text","text":" "},{"type":"text","text":"recreation of Apple’s Scrumdinger demo application."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#A-tour-of-SyncUps","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/whatissyncups#A-tour-of-SyncUps"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetail#Create-the-sync-up-detail":{"role":"pseudoSymbol","title":"Create the sync-up detail","abstract":[{"type":"text","text":"The “sync-up detail” screen shows all the information of a sync-up, and has many actions that"},{"type":"text","text":" "},{"type":"text","text":"can take place in the screen. The user can edit the sync-up, or start a new meeting in the sync"},{"type":"text","text":" "},{"type":"text","text":"up, or drill-down to a past meeting, or even delete the meeting."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail#Create-the-sync-up-detail","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/syncupdetail#Create-the-sync-up-detail"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation#Adding-a-sync-up":{"role":"pseudoSymbol","title":"Adding a sync-up","abstract":[{"type":"text","text":"We have now integrated two moderately complex features, the "},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" and "},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":", and"},{"type":"text","text":" "},{"type":"text","text":"so its time to write some tests. This will give us the opportunity to prove that the features"},{"type":"text","text":" "},{"type":"text","text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less"},{"type":"text","text":" "},{"type":"text","text":"fragile."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Adding-a-sync-up","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation#Adding-a-sync-up"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Form-focus-a-better-approach":{"role":"pseudoSymbol","title":"Form focus: a better approach","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"type":"text","text":" "},{"type":"text","text":"feature to make things a little more interesting."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-a-better-approach","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/syncupform#Form-focus-a-better-approach"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation":{"role":"project","title":"Testing the add sync-up flow","estimatedTime":"10min","abstract":[{"type":"text","text":"We have now integrated two moderately complex features, the "},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" and "},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":", and"},{"type":"text","text":" "},{"type":"text","text":"so its time to write some tests. This will give us the opportunity to prove that the features"},{"type":"text","text":" "},{"type":"text","text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less"},{"type":"text","text":" "},{"type":"text","text":"fragile."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation","kind":"project","type":"topic","url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps":{"role":"project","title":"What is SyncUps?","estimatedTime":"5min","abstract":[{"type":"text","text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a"},{"type":"text","text":" "},{"type":"text","text":"recreation of Apple’s Scrumdinger demo application."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps","kind":"project","type":"topic","url":"\/tutorials\/composablearchitecture\/whatissyncups"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps":{"role":"overview","title":"Building SyncUps","abstract":[{"type":"text","text":"The SyncUps application is a recreation of one of Apple’s more interesting demo applications,"},{"type":"text","text":" "},{"type":"text","text":"Scrumdinger. We recreate it from scratch using the Composable Architecture, with a focus on"},{"type":"text","text":" "},{"type":"text","text":"domain modeling, controlling dependencies, and testability."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","kind":"overview","type":"topic","url":"\/tutorials\/buildingsyncups"},"TestingSyncUpForm-01-code-0002.swift":{"syntax":"swift","content":["import ComposableArchitecture","import XCTest","","@testable import SyncUps","","class SyncUpFormTests: XCTestCase {","  @MainActor","  func testRemoveAttendee() async {","    let store = TestStore(","      initialState: SyncUpForm.State(","        syncUp: SyncUp(","          id: SyncUp.ID(),","          attendees: [","            Attendee(id: Attendee.ID()),","            Attendee(id: Attendee.ID())","          ]","        )","      )","    ) {","      SyncUpForm()","    }","  }","}"],"fileName":"SyncUpFormTests.swift","identifier":"TestingSyncUpForm-01-code-0002.swift","type":"file","fileType":"swift","highlights":[{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#Domain-models":{"role":"pseudoSymbol","title":"Domain models","abstract":[{"type":"text","text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the"},{"type":"text","text":" "},{"type":"text","text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as"},{"type":"text","text":" "},{"type":"text","text":"the app evolves."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#Domain-models","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/listsofsyncups#Domain-models"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list":{"role":"pseudoSymbol","title":"Adding a new sync-up to the list","abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"type":"text","text":" "},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"type":"text","text":" "},{"type":"text","text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Adding-a-new-sync-up-to-the-list"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DependencyManagement":{"role":"article","title":"Dependencies","abstract":[{"type":"text","text":"Learn how to register dependencies with the library so that they can be immediately accessible from"},{"type":"text","text":" "},{"type":"text","text":"any reducer."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/dependencymanagement"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer":{"role":"project","title":"Adding a meeting timer","estimatedTime":"25min","abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer","kind":"project","type":"topic","url":"\/tutorials\/composablearchitecture\/implementingtimer"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm#Removing-attendees":{"role":"pseudoSymbol","title":"Removing attendees","abstract":[{"type":"text","text":"We now have a moderately complex feature for editing the details of a sync-up, the "},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":" "},{"type":"text","text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come"},{"type":"text","text":" "},{"type":"text","text":"face-to-face with dependencies for the first time in this tutorial."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Removing-attendees","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/testingsyncupform#Removing-attendees"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Navigating-to-sync-up-detail":{"role":"article","title":"Navigating to sync-up detail","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Navigating-to-sync-up-detail","kind":"article","type":"topic","url":"\/tutorials\/buildingsyncups\/navigating-to-sync-up-detail"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Controlling-dependencies-early":{"role":"pseudoSymbol","title":"Controlling dependencies early","abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Controlling-dependencies-early","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/implementingtimer#Controlling-dependencies-early"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#More-concise-domain-modeling":{"role":"pseudoSymbol","title":"More concise domain modeling","abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"type":"text","text":" "},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"type":"text","text":" "},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#More-concise-domain-modeling","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#More-concise-domain-modeling"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps#Create-the-SyncUps-project":{"role":"pseudoSymbol","title":"Create the SyncUps project","abstract":[{"type":"text","text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a"},{"type":"text","text":" "},{"type":"text","text":"recreation of Apple’s Scrumdinger demo application."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#Create-the-SyncUps-project","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/whatissyncups#Create-the-SyncUps-project"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Record-meeting":{"role":"article","title":"Record meeting","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Record-meeting","kind":"article","type":"topic","url":"\/tutorials\/buildingsyncups\/record-meeting"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps":{"role":"project","title":"Persisting sync-ups","estimatedTime":"5min","abstract":[{"type":"text","text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some"},{"type":"text","text":" "},{"type":"text","text":"persistence. This will involve using the “shared state” tools from the library, such as"},{"type":"text","text":" "},{"overridingTitleInlineContent":[{"type":"codeVoice","code":"@Shared"}],"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","overridingTitle":"@Shared"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:)"},{"type":"text","text":"."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps","kind":"project","type":"topic","url":"\/tutorials\/composablearchitecture\/persistingsyncups"},"TestingSyncUpForm-01-code-0003.swift":{"syntax":"swift","content":["import ComposableArchitecture","import XCTest","","@testable import SyncUps","","class SyncUpFormTests: XCTestCase {","  @MainActor","  func testRemoveAttendee() async {","    let store = TestStore(","      initialState: SyncUpForm.State(","        syncUp: SyncUp(","          id: SyncUp.ID(),","          attendees: [","            Attendee(id: Attendee.ID()),","            Attendee(id: Attendee.ID())","          ]","        )","      )","    ) {","      SyncUpForm()","    }","","    await store.send(.onDeleteAttendees([0])) {","      $0.syncUp.attendees.removeFirst()","    }","  }","}"],"fileName":"SyncUpFormTests.swift","identifier":"TestingSyncUpForm-01-code-0003.swift","type":"file","fileType":"swift","highlights":[{"line":22},{"line":23},{"line":24},{"line":25}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm":{"role":"project","title":"Testing the sync-up form","estimatedTime":"10min","abstract":[{"type":"text","text":"We now have a moderately complex feature for editing the details of a sync-up, the "},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":" "},{"type":"text","text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come"},{"type":"text","text":" "},{"type":"text","text":"face-to-face with dependencies for the first time in this tutorial."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm","kind":"project","type":"topic","url":"\/tutorials\/composablearchitecture\/testingsyncupform"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Testing#Non-exhaustive-testing":{"abstract":[],"title":"Non-exhaustive testing","kind":"section","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Testing#Non-exhaustive-testing","url":"\/documentation\/composablearchitecture\/testing#Non-exhaustive-testing"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps#Persisting-data-to-disk":{"role":"pseudoSymbol","title":"Persisting data to disk","abstract":[{"type":"text","text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some"},{"type":"text","text":" "},{"type":"text","text":"persistence. This will involve using the “shared state” tools from the library, such as"},{"type":"text","text":" "},{"overridingTitleInlineContent":[{"type":"codeVoice","code":"@Shared"}],"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","overridingTitle":"@Shared"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:)"},{"type":"text","text":"."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Persisting-data-to-disk","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/persistingsyncups#Persisting-data-to-disk"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/fileStorage(_:)":{"role":"symbol","title":"fileStorage(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fileStorage"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Creates a persistence key that can read and write to a "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" value to the file system."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/persistencereaderkey\/filestorage(_:)"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#Editing-the-sync-up":{"role":"pseudoSymbol","title":"Editing the sync-up","abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"type":"text","text":" "},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"type":"text","text":" "},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Editing-the-sync-up","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#Editing-the-sync-up"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpDetail":{"role":"project","title":"Testing the sync-up detail","estimatedTime":"10min","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":" feature has slowly become quite complex. It now handles two forms of"},{"type":"text","text":" "},{"type":"text","text":"navigation (an alert and sheet), it models navigation state with a single enum, and it"},{"type":"text","text":" "},{"type":"text","text":"communicates with a parent feature via delegate actions. It’s about time we got some test"},{"type":"text","text":" "},{"type":"text","text":"coverage on this feature so we can be sure it works as we expect, and so that we can make future"},{"type":"text","text":" "},{"type":"text","text":"changes with confidence."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail","kind":"project","type":"topic","url":"\/tutorials\/composablearchitecture\/testingsyncupdetail"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"role":"symbol","title":"TestStore","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestStore"}],"abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TestStore"}],"url":"\/documentation\/composablearchitecture\/teststore"},"TestingSyncUpForm-02-code-0003.swift":{"syntax":"swift","content":["","import ComposableArchitecture","import XCTest","","@testable import SyncUps","","class SyncUpFormTests: XCTestCase {","  @MainActor","  func testAddAttendee() async {","    let store = TestStore(","      initialState: SyncUpForm.State(","        syncUp: SyncUp(id: SyncUp.ID())","      )","    ) {","      SyncUpForm()","    }","","    await store.send(.addAttendeeButtonTapped) {","      let attendee = Attendee(id: Attendee.ID())","      $0.focus = .attendee(attendee.id)","      $0.syncUp.attendees.append(attendee)","    }","    \/\/ ❌ A state change does not match expectation: …","    \/\/","    \/\/       SyncUpForm.State(","    \/\/         _focus: .attendee(","    \/\/     −     Tagged(rawValue: UUID(B7833D85-CFA3-49A8-9B4C-54A4084372F7))","    \/\/     +     Tagged(rawValue: UUID(AEF24FB1-BC0E-438A-85B8-1E045A9D8A88))","    \/\/         ),","    \/\/         _syncUp: SyncUp(","    \/\/           id: Tagged(rawValue: UUID(D8CCE06C-F6BB-4D3D-A61A-59DF5D603B07)),","    \/\/           attendees: [","    \/\/             [0]: Attendee(","    \/\/     −         id: Tagged(rawValue: UUID(B7833D85-CFA3-49A8-9B4C-54A4084372F7))","    \/\/     +         id: Tagged(rawValue: UUID(AEF24FB1-BC0E-438A-85B8-1E045A9D8A88))","    \/\/               name: \"\"","    \/\/             )","    \/\/           ],","    \/\/           duration: 5 minutes,","    \/\/           meetings: [],","    \/\/           theme: .bubblegum,","    \/\/           title: \"Engineering\"","    \/\/         )","    \/\/       )","    \/\/","    \/\/ (Expected: −, Actual: +)","  }","","  @MainActor","  func testRemoveFocusedAttendee() async {","    \/\/ ...","  }","","  @MainActor","  func testRemoveAttendee() async {","    \/\/ ...","  }","}"],"fileName":"SyncUpFormTests.swift","identifier":"TestingSyncUpForm-02-code-0003.swift","type":"file","fileType":"swift","highlights":[{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38},{"line":39},{"line":40},{"line":41},{"line":42},{"line":43},{"line":44},{"line":45},{"line":46}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp":{"role":"project","title":"Editing and deleting a sync-up","estimatedTime":"30min","abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"type":"text","text":" "},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"type":"text","text":" "},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp","kind":"project","type":"topic","url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps":{"role":"project","title":"Lists of sync-ups","estimatedTime":"10min","abstract":[{"type":"text","text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the"},{"type":"text","text":" "},{"type":"text","text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as"},{"type":"text","text":" "},{"type":"text","text":"the app evolves."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps","kind":"project","type":"topic","url":"\/tutorials\/composablearchitecture\/listsofsyncups"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm":{"role":"project","title":"Sync-up form","estimatedTime":"15min","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"type":"text","text":" "},{"type":"text","text":"feature to make things a little more interesting."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm","kind":"project","type":"topic","url":"\/tutorials\/composablearchitecture\/syncupform"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm#Adding-attendees":{"role":"pseudoSymbol","title":"Adding attendees","abstract":[{"type":"text","text":"We now have a moderately complex feature for editing the details of a sync-up, the "},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":" "},{"type":"text","text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come"},{"type":"text","text":" "},{"type":"text","text":"face-to-face with dependencies for the first time in this tutorial."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Adding-attendees","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/testingsyncupform#Adding-attendees"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Integrating-the-feature-domains-together":{"role":"pseudoSymbol","title":"Integrating the feature domains together","abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"type":"text","text":" "},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"type":"text","text":" "},{"type":"text","text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-domains-together","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Integrating-the-feature-domains-together"},"TestingSyncUpForm-01-code-0004.swift":{"syntax":"swift","content":["import ComposableArchitecture","import XCTest","","@testable import SyncUps","","class SyncUpFormTests: XCTestCase {","  @MainActor","  func testRemoveFocusedAttendee() async {","    let attendee1 = Attendee(id: Attendee.ID())","    let attendee2 = Attendee(id: Attendee.ID())","    let store = TestStore(","      initialState: SyncUpForm.State(","        focus: .attendee(attendee1.id),","        syncUp: SyncUp(","          id: SyncUp.ID(),","          attendees: [attendee1, attendee2]","        )","      )","    ) {","      SyncUpForm()","    }","  }","","  @MainActor","  func testRemoveAttendee() async {","    \/\/ ...","  }","}"],"fileName":"SyncUpFormTests.swift","identifier":"TestingSyncUpForm-01-code-0004.swift","type":"file","fileType":"swift","highlights":[{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission":{"role":"pseudoSymbol","title":"Asking for speech recognition permission","abstract":[{"type":"text","text":"We have just one feature left to implement, and it’s one of the most complicated ones. We need"},{"type":"text","text":" "},{"type":"text","text":"to use Apple’s "},{"type":"codeVoice","code":"SFSpeechRecognizer"},{"type":"text","text":" API to ask the user for permission to transcribe their"},{"type":"text","text":" "},{"type":"text","text":"audio, and then start a speech recognition task to live transcribe the meeting while it is"},{"type":"text","text":" "},{"type":"text","text":"in progress."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/implementingspeechrecognizer#Asking-for-speech-recognition-permission"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature":{"role":"project","title":"The RecordMeeting feature","estimatedTime":"5min","abstract":[{"type":"text","text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will"},{"type":"text","text":" "},{"type":"text","text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature","kind":"project","type":"topic","url":"\/tutorials\/composablearchitecture\/recordmeetingfeature"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingNavigation":{"role":"project","title":"Testing navigation","estimatedTime":"10min","abstract":[{"type":"text","text":"We have now implemented a navigation stack at the root of our application, and integrated"},{"type":"text","text":" "},{"type":"text","text":"3 features into the stack: the "},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" feature, the "},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":" feature, and the"},{"type":"text","text":" "},{"type":"codeVoice","code":"MeetingView"},{"type":"text","text":". Some of these features have quite complex logic binding them together, such as"},{"type":"text","text":" "},{"type":"text","text":"when one deletes a sync-up from the detail screen it should pop the screen off the stack."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation","kind":"project","type":"topic","url":"\/tutorials\/composablearchitecture\/testingnavigation"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/New-sync-up-form":{"role":"article","title":"New sync-up form","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/New-sync-up-form","kind":"article","type":"topic","url":"\/tutorials\/buildingsyncups\/new-sync-up-form"}}}