{"metadata":{"modules":[{"name":"ComposableArchitecture"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"FileStorage","kind":"identifier"}],"navigatorTitle":[{"text":"FileStorage","kind":"identifier"}],"title":"FileStorage","externalID":"s:22ComposableArchitecture11FileStorageV","role":"symbol","symbolKind":"struct","roleHeading":"Structure"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileStorage"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey"]]},"topicSections":[{"generated":true,"anchor":"Operators","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorage\/==(_:_:)"],"title":"Operators"},{"title":"Instance Methods","anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorage\/hash(into:)"]},{"title":"Type Properties","anchor":"Type-Properties","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorage\/fileSystem","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorage\/inMemory"],"generated":true},{"anchor":"Default-Implementations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorage\/Equatable-Implementations"],"title":"Default Implementations","generated":true}],"abstract":[{"text":"A type that encapsulates saving and loading data from disk.","type":"text"}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/SH","doc:\/\/ComposableArchitecture\/s8SendableP"],"type":"conformsTo","kind":"relationships"}],"seeAlsoSections":[{"generated":true,"title":"Overriding storage","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies\/DependencyValues\/defaultFileStorage"],"anchor":"Overriding-storage"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorage"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/filestorage"]}],"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/FileStorage/fileSystem":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fileSystem"},{"kind":"text","text":": "},{"preciseIdentifier":"s:22ComposableArchitecture11FileStorageV","text":"FileStorage","kind":"typeIdentifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorage\/fileSystem","abstract":[{"text":"File storage that interacts directly with the file system for saving, loading and listening","type":"text"},{"text":" ","type":"text"},{"text":"for file changes.","type":"text"}],"kind":"symbol","type":"topic","title":"fileSystem","url":"\/documentation\/composablearchitecture\/filestorage\/filesystem","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FileStorage/hash(into:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"kind":"text","text":"("},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Hasher","kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV"},{"kind":"text","text":")"}],"title":"hash(into:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorage\/hash(into:)","abstract":[],"url":"\/documentation\/composablearchitecture\/filestorage\/hash(into:)","kind":"symbol","role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FileStorage/inMemory":{"url":"\/documentation\/composablearchitecture\/filestorage\/inmemory","type":"topic","kind":"symbol","title":"inMemory","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorage\/inMemory","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"inMemory"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture11FileStorageV","text":"FileStorage","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"File storage that emulates a file system without actually writing anything to disk."}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FileStorage":{"role":"symbol","kind":"symbol","url":"\/documentation\/composablearchitecture\/filestorage","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"FileStorage","kind":"identifier"}],"type":"topic","title":"FileStorage","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorage","abstract":[{"text":"A type that encapsulates saving and loading data from disk.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"FileStorage"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FileStorageKey":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey","navigatorTitle":[{"text":"FileStorageKey","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/filestoragekey","role":"symbol","title":"FileStorageKey","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FileStorageKey","kind":"identifier"}],"abstract":[{"type":"text","text":"A type defining a file persistence strategy"}],"type":"topic","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FileStorage/==(_:_:)":{"title":"==(_:_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorage\/==(_:_:)","type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture\/filestorage\/==(_:_:)","abstract":[],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"FileStorage","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture11FileStorageV"},{"text":", ","kind":"text"},{"text":"FileStorage","preciseIdentifier":"s:22ComposableArchitecture11FileStorageV","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol"},"doc://ComposableArchitecture/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/fileStorage(_:decoder:encoder:)":{"type":"topic","abstract":[{"type":"text","text":"Creates a persistence key that can read and write to a "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" value in the file system."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decoder:encoder:)","url":"\/documentation\/composablearchitecture\/persistencereaderkey\/filestorage(_:decoder:encoder:)","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fileStorage"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"text":", ","kind":"text"},{"text":"decoder","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC","text":"JSONDecoder"},{"kind":"text","text":", "},{"text":"encoder","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation11JSONEncoderC","kind":"typeIdentifier","text":"JSONEncoder"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","title":"fileStorage(_:decoder:encoder:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FileStorage/Equatable-Implementations":{"kind":"article","type":"topic","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorage\/Equatable-Implementations","title":"Equatable Implementations","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/filestorage\/equatable-implementations"},"doc://ComposableArchitecture/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/ComposableArchitecture\/SQ","type":"unresolvable"},"doc://ComposableArchitecture/SH":{"title":"Swift.Hashable","identifier":"doc:\/\/ComposableArchitecture\/SH","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","role":"symbol","title":"Effect","navigatorTitle":[{"text":"Effect","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Effect","kind":"identifier"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Dependencies/DependencyValues/defaultFileStorage":{"role":"symbol","title":"defaultFileStorage","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"defaultFileStorage","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture11FileStorageV","kind":"typeIdentifier","text":"FileStorage"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies\/DependencyValues\/defaultFileStorage","abstract":[{"type":"text","text":"Default file storage used by "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decoder:encoder:)","isActive":true,"type":"reference"},{"type":"text","text":"."}],"url":"\/documentation\/composablearchitecture\/dependencies\/dependencyvalues\/defaultfilestorage"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"type":"topic","url":"\/documentation\/composablearchitecture\/sharingstate","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","role":"collectionGroup","abstract":[{"type":"text","text":"Learn techniques for sharing state throughout many parts of your application, and how to persist"},{"type":"text","text":" "},{"type":"text","text":"data to user defaults, the file system, and other external mediums."}],"title":"Sharing state"}}}