{"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"accessibilityLabeledPair","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ID","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"role","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AccessibilityLabeledPairRole","preciseIdentifier":"s:7SwiftUI28AccessibilityLabeledPairRoleO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"text":"ID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"in","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"namespace","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Namespace","preciseIdentifier":"s:7SwiftUI9NamespaceV"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7SwiftUI9NamespaceV2IDV","text":"ID","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"ID","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"text":"\n","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/accessibilitylabeledpair(role:id:in:)"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"roleHeading":"Instance Method","platforms":[{"deprecated":false,"unavailable":false,"beta":false,"introducedAt":"14.0","name":"iOS"},{"introducedAt":"11.0","name":"macOS","deprecated":false,"unavailable":false,"beta":false},{"name":"tvOS","introducedAt":"14.0","deprecated":false,"beta":false,"unavailable":false},{"beta":false,"unavailable":false,"introducedAt":"7.0","name":"watchOS","deprecated":false}],"externalID":"s:7SwiftUI4ViewPAAE24accessibilityLabeledPair4role2id2inQrAA013AccessibilityeF4RoleO_qd__AA9NamespaceV2IDVtSHRd__lF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","role":"symbol","extendedModule":"SwiftUICore","modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"accessibilityLabeledPair","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ID","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"role"},{"text":": ","kind":"text"},{"text":"AccessibilityLabeledPairRole","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI28AccessibilityLabeledPairRoleO"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":", "},{"text":"in","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9NamespaceV","text":"Namespace"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9NamespaceV2IDV","text":"ID"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"title":"accessibilityLabeledPair(role:id:in:)"},"sections":[],"abstract":[{"text":"Inherited from ","type":"text"},{"code":"View.accessibilityLabeledPair(role:id:in:)","type":"codeVoice"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/accessibilityLabeledPair(role:id:in:)","interfaceLanguage":"swift"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/accessibilityLabeledPair(role:id:in:)":{"title":"accessibilityLabeledPair(role:id:in:)","url":"\/documentation\/composablearchitecture\/ifletstore\/accessibilitylabeledpair(role:id:in:)","type":"topic","abstract":[],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"accessibilityLabeledPair"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ID"},{"kind":"text","text":">("},{"text":"role","kind":"externalParam"},{"kind":"text","text":": "},{"text":"AccessibilityLabeledPairRole","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI28AccessibilityLabeledPairRoleO"},{"kind":"text","text":", "},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ID"},{"text":", ","kind":"text"},{"text":"in","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Namespace","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9NamespaceV"},{"kind":"text","text":"."},{"text":"ID","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9NamespaceV2IDV"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/accessibilityLabeledPair(role:id:in:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"type":"topic","title":"SwiftUI Integration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","kind":"article","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","title":"View Implementations","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","kind":"article","role":"collectionGroup","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"title":"Deprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article","url":"\/documentation\/composablearchitecture\/swiftuideprecations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"IfLetStore","kind":"identifier"}],"title":"IfLetStore","kind":"symbol","deprecated":true,"url":"\/documentation\/composablearchitecture\/ifletstore","role":"symbol","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}]}}}