{"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"CasePathable.AllCasePaths"},{"text":".","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AllCasePaths","kind":"identifier"}],"platforms":["macOS"]}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/AllCasePaths-swift.struct","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/CasePathable-Implementations"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/CasePathable-Implementations"]]},"metadata":{"externalID":"s:22ComposableArchitecture10TaskResultO12AllCasePathsV","title":"TaskResult.AllCasePaths","roleHeading":"Structure","navigatorTitle":[{"text":"AllCasePaths","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AllCasePaths","kind":"identifier"}],"symbolKind":"struct","modules":[{"name":"ComposableArchitecture"}],"extendedModule":"ComposableArchitecture","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Success"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]}},"kind":"symbol","topicSections":[{"anchor":"Instance-Properties","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/AllCasePaths-swift.struct\/failure","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/AllCasePaths-swift.struct\/success"],"generated":true,"title":"Instance Properties"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/taskresult\/allcasepaths-swift.struct"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult/CasePathable-Implementations":{"title":"CasePathable Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/CasePathable-Implementations","kind":"article","type":"topic","abstract":[],"role":"collectionGroup","url":"\/documentation\/composablearchitecture\/taskresult\/casepathable-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","title":"Effect","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult/AllCasePaths-swift.struct":{"url":"\/documentation\/composablearchitecture\/taskresult\/allcasepaths-swift.struct","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/AllCasePaths-swift.struct","title":"TaskResult.AllCasePaths","type":"topic","abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AllCasePaths"}],"navigatorTitle":[{"kind":"identifier","text":"AllCasePaths"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Success"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}]}},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult/AllCasePaths-swift.struct/success":{"abstract":[],"url":"\/documentation\/composablearchitecture\/taskresult\/allcasepaths-swift.struct\/success","title":"success","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"success"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AnyCasePath","preciseIdentifier":"s:9CasePaths03AnyA4PathV"},{"kind":"text","text":"<"},{"text":"TaskResult","preciseIdentifier":"s:22ComposableArchitecture10TaskResultO","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Success"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","text":"Success"},{"text":">","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/AllCasePaths-swift.struct\/success","type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult/AllCasePaths-swift.struct/failure":{"url":"\/documentation\/composablearchitecture\/taskresult\/allcasepaths-swift.struct\/failure","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/AllCasePaths-swift.struct\/failure","title":"failure","type":"topic","abstract":[],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"failure","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths03AnyA4PathV","text":"AnyCasePath"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture10TaskResultO","kind":"typeIdentifier","text":"TaskResult"},{"kind":"text","text":"<"},{"text":"Success","kind":"typeIdentifier"},{"kind":"text","text":">, any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":">"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult":{"deprecated":true,"title":"TaskResult","abstract":[{"text":"A value that represents either a success or a failure. This type differs from Swiftâ€™s ","type":"text"},{"type":"codeVoice","code":"Result"},{"type":"text","text":" "},{"text":"type in that it uses only one generic for the success case, leaving the failure case as an","type":"text"},{"type":"text","text":" "},{"type":"text","text":"untyped "},{"code":"Error","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/composablearchitecture\/taskresult","navigatorTitle":[{"kind":"identifier","text":"TaskResult"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"TaskResult","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","kind":"symbol","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"text":" ","type":"text"},{"type":"text","text":"given an action, and describes what "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference"},{"text":"s should be executed later by the store, if any.","type":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"title":"Reducer"}}}