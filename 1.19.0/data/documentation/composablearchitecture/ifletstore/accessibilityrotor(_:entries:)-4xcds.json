{"abstract":[{"type":"text","text":"Inherited from "},{"code":"View.accessibilityRotor(_:entries:)","type":"codeVoice"},{"text":".","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/accessibilityRotor(_:entries:)-4xcds"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"metadata":{"modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"accessibilityRotor","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"L"},{"kind":"text","text":", "},{"text":"Content","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"L"},{"kind":"text","text":", "},{"kind":"externalParam","text":"entries"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Content"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"role":"symbol","extendedModule":"SwiftUICore","externalID":"s:7SwiftUI4ViewPAAE18accessibilityRotor_7entriesQrqd___qd_0_yctSyRd__AA013AccessibilityE7ContentRd_0_r0_lF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","platforms":[{"unavailable":false,"beta":false,"introducedAt":"15.0","name":"iOS","deprecated":false},{"introducedAt":"12.0","unavailable":false,"beta":false,"name":"macOS","deprecated":false},{"deprecated":false,"beta":false,"unavailable":false,"introducedAt":"15.0","name":"tvOS"},{"unavailable":false,"name":"watchOS","deprecated":false,"beta":false,"introducedAt":"8.0"}],"title":"accessibilityRotor(_:entries:)","symbolKind":"method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"accessibilityRotor","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"L"},{"text":", ","kind":"text"},{"text":"Content","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"label","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"L","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:7SwiftUI32AccessibilityRotorContentBuilderV","text":"AccessibilityRotorContentBuilder","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"externalParam","text":"entries"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"text":" () -> ","kind":"text"},{"kind":"typeIdentifier","text":"Content"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"L","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:Sy","kind":"typeIdentifier","text":"StringProtocol"},{"text":", ","kind":"text"},{"text":"Content","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"AccessibilityRotorContent","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI25AccessibilityRotorContentP"},{"text":"\n","kind":"text"}],"platforms":["macOS"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/accessibilityrotor(_:entries:)-4xcds"]}],"kind":"symbol","sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/accessibilityRotor(_:entries:)-4xcds":{"type":"topic","title":"accessibilityRotor(_:entries:)","kind":"symbol","abstract":[],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"accessibilityRotor","kind":"identifier"},{"text":"<","kind":"text"},{"text":"L","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Content"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"L"},{"kind":"text","text":", "},{"kind":"externalParam","text":"entries"},{"text":": () -> ","kind":"text"},{"text":"Content","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/accessibilityRotor(_:entries:)-4xcds","url":"\/documentation\/composablearchitecture\/ifletstore\/accessibilityrotor(_:entries:)-4xcds"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"kind":"symbol","title":"ComposableArchitecture","type":"topic","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"abstract":[],"url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","title":"View Implementations","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","kind":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"role":"collectionGroup","type":"topic","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"url":"\/documentation\/composablearchitecture\/swiftuideprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","role":"collectionGroup","kind":"article","title":"Deprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"kind":"symbol","title":"IfLetStore","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IfLetStore"}],"navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}],"deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","url":"\/documentation\/composablearchitecture\/ifletstore","type":"topic"}}}