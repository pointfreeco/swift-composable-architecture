{"sections":[{"title":"Persisting sync-ups","content":[{"type":"paragraph","inlineContent":[{"text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some","type":"text"},{"type":"text","text":" "},{"text":"persistence. This will involve using the “shared state” tools from the library, such as","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","overridingTitleInlineContent":[{"code":"@Shared","type":"codeVoice"}],"isActive":true,"overridingTitle":"@Shared","type":"reference"},{"type":"text","text":" and "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decoder:encoder:)","type":"reference","isActive":true},{"text":".","type":"text"}]}],"kind":"hero","chapter":"Persisting sync-ups to disk","estimatedTimeInMinutes":5},{"kind":"tasks","tasks":[{"contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To persist state to an external system you must make use of the "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","overridingTitleInlineContent":[{"type":"codeVoice","code":"@Shared"}],"overridingTitle":"@Shared","type":"reference"},{"text":" ","type":"text"},{"type":"text","text":"property wrapper with a persistence strategy."}]}]}],"title":"Persisting data to disk","anchor":"Persisting-data-to-disk","stepsSection":[{"caption":[{"name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"Our changes will not compile right now, but they will soon.","type":"text"}]}],"style":"note"}],"type":"step","media":null,"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Go back to the SyncUpsList.swift file, and start by applying the "},{"overridingTitleInlineContent":[{"type":"codeVoice","code":"@Shared"}],"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","isActive":true,"overridingTitle":"@Shared"},{"text":" ","type":"text"},{"text":"property wrapper to the ","type":"text"},{"type":"codeVoice","code":"syncUps"},{"type":"text","text":" field."}]}],"code":"PersistingSyncUps-01-code-0001.swift"},{"type":"paragraph","inlineContent":[{"text":"This signifies that this value will be shared with other parts of the application. There are","type":"text"},{"type":"text","text":" "},{"type":"text","text":"many ways to share state, such as explicitly passing it in from a parent feature, or"},{"type":"text","text":" "},{"type":"text","text":"persisting it to an external system. See the dedicated article "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","isActive":true},{"type":"text","text":" for more"},{"text":" ","type":"text"},{"type":"text","text":"information on all of the various strategies."}]},{"runtimePreview":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Further customize the "},{"overridingTitle":"@Shared","type":"reference","overridingTitleInlineContent":[{"code":"@Shared","type":"codeVoice"}],"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared"},{"text":" property wrapper with a persistence","type":"text"},{"type":"text","text":" "},{"type":"text","text":"strategy. The library comes with a few strategies you can use, but the most appropriate here"},{"type":"text","text":" "},{"text":"is ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decoder:encoder:)"},{"type":"text","text":" since we are trying to"},{"type":"text","text":" "},{"type":"text","text":"save a complex data structure."}]}],"caption":[],"media":null,"code":"PersistingSyncUps-01-code-0002.swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decoder:encoder:)"},{"type":"text","text":" persistence strategy saves"},{"type":"text","text":" "},{"type":"text","text":"data to disk anytime the value in "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","isActive":true,"overridingTitle":"@Shared","overridingTitleInlineContent":[{"type":"codeVoice","code":"@Shared"}]},{"type":"text","text":" changes, but it spaces the saves"},{"type":"text","text":" "},{"text":"out a bit so as to not thrash the file system with every single change.","type":"text"}]},{"caption":[],"type":"step","media":null,"runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"The "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decoder:encoder:)"},{"type":"text","text":" persistence strategy"},{"text":" ","type":"text"},{"type":"text","text":"needs to be provided a URL for where to save the data. Add an extension to "},{"code":"URL","type":"codeVoice"},{"text":" at the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"bottom of the file to define such a URL, and then provide it to the "},{"type":"codeVoice","code":".fileStorage"},{"text":" value.","type":"text"}],"type":"paragraph"}],"code":"PersistingSyncUps-01-code-0003.swift"},{"inlineContent":[{"type":"text","text":"With that change the project should be compiling. It is worth noting that"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decoder:encoder:)","type":"reference","isActive":true},{"text":" only works with ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" data","type":"text"},{"text":" ","type":"text"},{"text":"types, and earlier in the tutorial when we added models to Models.swift we made them codable from","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the beginning."}],"type":"paragraph"},{"code":"PersistingSyncUps-01-code-0004.swift","runtimePreview":null,"type":"step","caption":[],"content":[{"inlineContent":[{"type":"text","text":"Before moving on, we can still make this better."},{"text":" ","type":"text"},{"type":"text","text":"It is possible to provide some type safety between the URL provided and the expected"},{"text":" ","type":"text"},{"type":"text","text":"type of data to be stored on disk, and make usage more concise. See"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState#Type-safe-keys","overridingTitle":"type-safe keys","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"type-safe keys"}]},{"type":"text","text":" for more information."}],"type":"paragraph"}],"media":null},{"type":"paragraph","inlineContent":[{"text":"To confirm that persistence works we need to run the app in the simulator, but we haven’t done","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"that yet in this tutorial. To do that we need to update the entry point of the app to use the"},{"text":" ","type":"text"},{"type":"codeVoice","code":"SyncUpsListView"},{"type":"text","text":"."}]},{"runtimePreview":null,"media":null,"code":"PersistingSyncUps-01-code-0005.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Go to SyncUpsApp.swift and update the root view to be a "},{"type":"codeVoice","code":"NavigationStack"},{"text":" wrapping a","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"SyncUpsListView"},{"text":".","type":"text"}]}],"caption":[{"content":[{"type":"paragraph","inlineContent":[{"text":"We construct the ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true},{"type":"text","text":" as a static so that it is"},{"type":"text","text":" "},{"text":"initialized only one time, and so that it is not created while running Xcode previews.","type":"text"}]}],"type":"aside","style":"note","name":"Note"}],"type":"step"},{"caption":[],"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Run the app in the simulator, add a sync-up, and then relaunch the application to see that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"it restores the previously created sync-up. This shows that data is persisting."}]}],"code":null,"type":"step","media":"PersistingSyncUps-01-video-0006.mov"}]},{"anchor":"Testing-persistence","contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Testing state that is held in "},{"type":"reference","overridingTitle":"@Shared","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","overridingTitleInlineContent":[{"type":"codeVoice","code":"@Shared"}]},{"text":" with ","type":"text"},{"type":"codeVoice","code":".fileStorage"},{"text":" persistence works","type":"text"},{"type":"text","text":" "},{"type":"text","text":"exactly like regular state without "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","overridingTitle":"@Shared","overridingTitleInlineContent":[{"type":"codeVoice","code":"@Shared"}],"type":"reference","isActive":true},{"text":". The","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","type":"reference","isActive":true},{"text":" forces you to exhaustively prove how all state changes.","type":"text"}]}]}],"title":"Testing persistence","stepsSection":[{"runtimePreview":null,"media":null,"content":[{"inlineContent":[{"type":"text","text":"Run the test suite to see that everything still passes."}],"type":"paragraph"}],"caption":[],"code":null,"type":"step"},{"media":null,"runtimePreview":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Go to SyncUpsListTests.swift and make a change to the "},{"code":"testAddSyncUp","type":"codeVoice"},{"text":" test to make an","type":"text"},{"type":"text","text":" "},{"type":"text","text":"incorrect assertion."}]}],"code":"PersistingSyncUps-02-code-0001.swift","type":"step"},{"runtimePreview":null,"caption":[],"type":"step","media":null,"content":[{"inlineContent":[{"text":"Run the test suite again to see that you get a test failure with a message that tells you","type":"text"},{"type":"text","text":" "},{"text":"exactly what went wrong.","type":"text"}],"type":"paragraph"}],"code":null},{"type":"paragraph","inlineContent":[{"text":"This shows that the exhaustive testing tools of the Composable Architecture continue to work","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"exactly the same, even when dealing with state that is persisted to disk. Be sure to read the"},{"text":" ","type":"text"},{"text":"full article ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","isActive":true},{"type":"text","text":" for more information about shared state and persistence."}]}]}]},{"kind":"callToAction","action":{"overridingTitle":"Get started","overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail"},"featuredEyebrow":"Tutorial","abstract":[{"type":"text","text":"The “sync-up detail” screen shows all the information of a sync-up, and has many actions that"},{"text":" ","type":"text"},{"text":"can take place in the screen. The user can edit the sync-up, or start a new meeting in the sync","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"up, or drill-down to a past meeting, or even delete the meeting."}],"title":"Sync-up detail"}],"kind":"project","schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","paths":[["doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/$volume","doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Persisting-sync-ups-to-disk"]],"modules":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/What-is-SyncUps-","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#A-tour-of-SyncUps"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#Create-the-SyncUps-project"}]}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Lists-of-sync-ups","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#Domain-models","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#SyncUpsList-feature","kind":"task"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#A-handy-debugging-tool"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps#Writing-your-first-test","kind":"task"}]}]},{"projects":[{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Sync-up-form-basics","kind":"task"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-an-approach"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-a-better-approach","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Removing-attendees"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Adding-attendees","kind":"task"}]}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/New-sync-up-form"},{"projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-domains-together","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-views-together","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list","kind":"task"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Adding-a-sync-up"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Non-exhaustive-testing"}]}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Presenting-the-sync-up-form"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Persisting-sync-ups-to-disk","projects":[{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Persisting-data-to-disk","kind":"task"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Testing-persistence"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Sync-up-detail","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail#Create-the-sync-up-detail","kind":"task"}]},{"sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Editing-the-sync-up"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Deleting-the-sync-up"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#More-concise-domain-modeling","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp"},{"sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail#Testing-the-edit-flow"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail"}]},{"projects":[{"sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-feature"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-view"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Navigating-to-the-detail"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#The-meeting-screen"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#Navigate-to-a-meeting"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation#Deleting-a-sync-up"}]}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Navigating-to-sync-up-detail"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Record-meeting","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Create-a-new-feature"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Navigating-to-the-record-meeting-feature"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#A-basic-timer","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Controlling-dependencies-early","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Ending-the-meeting-early","kind":"task"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Testing-the-timer"}]},{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer"}]}]},"variants":[{"paths":["\/tutorials\/composablearchitecture\/persistingsyncups"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"category":"Building SyncUps","categoryPathComponent":"BuildingSyncUps","role":"project","title":"Persisting sync-ups"},"identifier":{"url":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps","interfaceLanguage":"swift"},"references":{"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#Editing-the-sync-up":{"kind":"section","type":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"type":"text","text":" "},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"type":"text","text":" "},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}],"title":"Editing the sync-up","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Editing-the-sync-up","url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#Editing-the-sync-up"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation":{"kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation","estimatedTime":"5min","type":"topic","url":"\/tutorials\/composablearchitecture\/meetingnavigation","abstract":[{"type":"text","text":"Now that we have a navigation stack in place we can start navigating to other features in the"},{"type":"text","text":" "},{"type":"text","text":"application. The simplest is the meeting screen, which allows you to see the details of a"},{"type":"text","text":" "},{"type":"text","text":"previous recorded meeting."}],"role":"project","title":"Navigating to a meeting"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Navigating-to-sync-up-detail":{"kind":"article","type":"topic","role":"article","abstract":[],"title":"Navigating to sync-up detail","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Navigating-to-sync-up-detail","url":"\/tutorials\/buildingsyncups\/navigating-to-sync-up-detail"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpDetail#Testing-the-edit-flow":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail#Testing-the-edit-flow","type":"section","url":"\/tutorials\/composablearchitecture\/testingsyncupdetail#Testing-the-edit-flow","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":" feature has slowly become quite complex. It now handles two forms of"},{"type":"text","text":" "},{"type":"text","text":"navigation (an alert and sheet), it models navigation state with a single enum, and it"},{"type":"text","text":" "},{"type":"text","text":"communicates with a parent feature via delegate actions. It’s about time we got some test"},{"type":"text","text":" "},{"text":"coverage on this feature so we can be sure it works as we expect, and so that we can make future","type":"text"},{"type":"text","text":" "},{"text":"changes with confidence.","type":"text"}],"role":"pseudoSymbol","title":"Testing the edit flow"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Presenting-the-sync-up-form":{"kind":"article","type":"topic","role":"article","abstract":[],"title":"Presenting the sync-up form","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Presenting-the-sync-up-form","url":"\/tutorials\/buildingsyncups\/presenting-the-sync-up-form"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#A-handy-debugging-tool":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#A-handy-debugging-tool","type":"section","url":"\/tutorials\/composablearchitecture\/listsofsyncups#A-handy-debugging-tool","abstract":[{"text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the","type":"text"},{"type":"text","text":" "},{"text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the app evolves."}],"role":"pseudoSymbol","title":"A handy debugging tool"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm":{"estimatedTime":"10min","kind":"project","type":"topic","role":"project","abstract":[{"type":"text","text":"We now have a moderately complex feature for editing the details of a sync-up, the "},{"type":"codeVoice","code":"SyncUpForm"},{"text":" ","type":"text"},{"type":"text","text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come"},{"text":" ","type":"text"},{"type":"text","text":"face-to-face with dependencies for the first time in this tutorial."}],"title":"Testing the sync-up form","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm","url":"\/tutorials\/composablearchitecture\/testingsyncupform"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/New-sync-up-form":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/New-sync-up-form","type":"topic","url":"\/tutorials\/buildingsyncups\/new-sync-up-form","abstract":[],"role":"article","title":"New sync-up form"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#More-concise-domain-modeling":{"kind":"section","type":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"text":" ","type":"text"},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"text":" ","type":"text"},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}],"title":"More concise domain modeling","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#More-concise-domain-modeling","url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#More-concise-domain-modeling"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Testing-the-timer":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Testing-the-timer","type":"section","abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"text":" ","type":"text"},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"text":" ","type":"text"},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}],"url":"\/tutorials\/composablearchitecture\/implementingtimer#Testing-the-timer","role":"pseudoSymbol","title":"Testing the timer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"url":"\/documentation\/composablearchitecture\/teststore","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TestStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"title":"TestStore","kind":"symbol","navigatorTitle":[{"text":"TestStore","kind":"identifier"}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation#The-meeting-screen":{"kind":"section","type":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"Now that we have a navigation stack in place we can start navigating to other features in the"},{"text":" ","type":"text"},{"type":"text","text":"application. The simplest is the meeting screen, which allows you to see the details of a"},{"text":" ","type":"text"},{"type":"text","text":"previous recorded meeting."}],"title":"The meeting screen","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#The-meeting-screen","url":"\/tutorials\/composablearchitecture\/meetingnavigation#The-meeting-screen"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Integrating-the-feature-domains-together":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-domains-together","type":"section","abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"text":" ","type":"text"},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"text":" ","type":"text"},{"type":"text","text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}],"url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Integrating-the-feature-domains-together","role":"pseudoSymbol","title":"Integrating the feature domains together"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation":{"estimatedTime":"20min","kind":"project","type":"topic","role":"project","abstract":[{"type":"text","text":"We will wrap the application built so far in a "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" so that we can navigate to"},{"text":" ","type":"text"},{"type":"text","text":"the detail screen. To do this we will create a new root-level feature that will be responsible"},{"text":" ","type":"text"},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"title":"Navigating to a sync-up detail","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation","url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation"},"PersistingSyncUps-02-code-0001.swift":{"identifier":"PersistingSyncUps-02-code-0001.swift","fileType":"swift","syntax":"swift","content":["import ComposableArchitecture","import Testing","","@testable import SyncUps","","@MainActor","struct SyncUpsListTests {","  @Test","  func addSyncUp() async {","    let store = TestStore(initialState: SyncUpsList.State()) {","      SyncUpsList()","    } withDependencies: {","      $0.uuid = .incrementing","    }","","    await store.send(.addSyncUpButtonTapped) {","      $0.addSyncUp = SyncUpForm.State(","        syncUp: SyncUp(id: SyncUp.ID(0))","      )","    }","","    let editedSyncUp = SyncUp(","      id: SyncUp.ID(0),","      attendees: [","        Attendee(id: Attendee.ID(), name: \"Blob\"),","        Attendee(id: Attendee.ID(), name: \"Blob Jr.\"),","      ],","      title: \"Point-Free morning sync\"","    )","    await store.send(.addSyncUp(.presented(.set(\\.syncUp, editedSyncUp)))) {","      $0.addSyncUp?.syncUp = editedSyncUp","    }","","    await store.send(.confirmAddButtonTapped) {","      $0.addSyncUp = nil","      \/\/ $0.syncUps = [editedSyncUp]","    }","  }","","  @Test","  func deletion() async {","    \/\/ ...","  }","}"],"type":"file","fileName":"SyncUpsListTests.swift","highlights":[{"line":36}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature#Create-a-new-feature":{"kind":"section","type":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will"},{"text":" ","type":"text"},{"type":"text","text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer."}],"title":"Create a new feature","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Create-a-new-feature","url":"\/tutorials\/composablearchitecture\/recordmeetingfeature#Create-a-new-feature"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingNavigation#Deleting-a-sync-up":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation#Deleting-a-sync-up","type":"section","abstract":[{"type":"text","text":"We have now implemented a navigation stack at the root of our application, and integrated"},{"text":" ","type":"text"},{"type":"text","text":"3 features into the stack: the "},{"code":"SyncUpsList","type":"codeVoice"},{"type":"text","text":" feature, the "},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":" feature, and the"},{"type":"text","text":" "},{"type":"codeVoice","code":"MeetingView"},{"type":"text","text":". Some of these features have quite complex logic binding them together, such as"},{"type":"text","text":" "},{"type":"text","text":"when one deletes a sync-up from the detail screen it should pop the screen off the stack."}],"url":"\/tutorials\/composablearchitecture\/testingnavigation#Deleting-a-sync-up","role":"pseudoSymbol","title":"Deleting a sync-up"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature":{"estimatedTime":"5min","kind":"project","type":"topic","role":"project","abstract":[{"type":"text","text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will"},{"type":"text","text":" "},{"type":"text","text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer."}],"title":"The RecordMeeting feature","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature","url":"\/tutorials\/composablearchitecture\/recordmeetingfeature"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Lists-of-sync-ups":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Lists-of-sync-ups","type":"topic","abstract":[],"url":"\/tutorials\/buildingsyncups\/lists-of-sync-ups","role":"article","title":"Lists of sync-ups"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Sync-up-form-basics":{"kind":"section","type":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"type":"text","text":" "},{"type":"text","text":"feature to make things a little more interesting."}],"title":"Sync-up form basics","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Sync-up-form-basics","url":"\/tutorials\/composablearchitecture\/syncupform#Sync-up-form-basics"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Persisting-sync-ups-to-disk":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Persisting-sync-ups-to-disk","type":"topic","url":"\/tutorials\/buildingsyncups\/persisting-sync-ups-to-disk","abstract":[],"role":"article","title":"Persisting sync-ups to disk"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingNavigation":{"estimatedTime":"10min","kind":"project","type":"topic","role":"project","title":"Testing navigation","abstract":[{"type":"text","text":"We have now implemented a navigation stack at the root of our application, and integrated"},{"type":"text","text":" "},{"type":"text","text":"3 features into the stack: the "},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" feature, the "},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":" feature, and the"},{"type":"text","text":" "},{"code":"MeetingView","type":"codeVoice"},{"type":"text","text":". Some of these features have quite complex logic binding them together, such as"},{"text":" ","type":"text"},{"type":"text","text":"when one deletes a sync-up from the detail screen it should pop the screen off the stack."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation","url":"\/tutorials\/composablearchitecture\/testingnavigation"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps":{"kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps","estimatedTime":"5min","type":"topic","url":"\/tutorials\/composablearchitecture\/persistingsyncups","abstract":[{"type":"text","text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some"},{"text":" ","type":"text"},{"type":"text","text":"persistence. This will involve using the “shared state” tools from the library, such as"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","isActive":true,"overridingTitleInlineContent":[{"code":"@Shared","type":"codeVoice"}],"overridingTitle":"@Shared"},{"type":"text","text":" and "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decoder:encoder:)","type":"reference","isActive":true},{"type":"text","text":"."}],"role":"project","title":"Persisting sync-ups"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetail":{"estimatedTime":"5min","kind":"project","type":"topic","role":"project","title":"Sync-up detail","abstract":[{"type":"text","text":"The “sync-up detail” screen shows all the information of a sync-up, and has many actions that"},{"type":"text","text":" "},{"type":"text","text":"can take place in the screen. The user can edit the sync-up, or start a new meeting in the sync"},{"type":"text","text":" "},{"text":"up, or drill-down to a past meeting, or even delete the meeting.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail","url":"\/tutorials\/composablearchitecture\/syncupdetail"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"type":"topic","url":"\/documentation\/composablearchitecture\/sharingstate","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","role":"collectionGroup","abstract":[{"type":"text","text":"Learn techniques for sharing state throughout many parts of your application, and how to persist"},{"type":"text","text":" "},{"type":"text","text":"data to user defaults, the file system, and other external mediums."}],"title":"Sharing state"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Creating-the-app-view":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-view","type":"section","url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Creating-the-app-view","abstract":[{"text":"We will wrap the application built so far in a ","type":"text"},{"code":"NavigationStack","type":"codeVoice"},{"type":"text","text":" so that we can navigate to"},{"type":"text","text":" "},{"type":"text","text":"the detail screen. To do this we will create a new root-level feature that will be responsible"},{"type":"text","text":" "},{"text":"for implementing the logic of the stack and integrating all of the features together.","type":"text"}],"role":"pseudoSymbol","title":"Creating the app view"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/What-is-SyncUps-":{"kind":"article","type":"topic","role":"article","title":"What is SyncUps?","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/What-is-SyncUps-","url":"\/tutorials\/buildingsyncups\/what-is-syncups-"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#Deleting-the-sync-up":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Deleting-the-sync-up","type":"section","url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#Deleting-the-sync-up","abstract":[{"text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"type":"text","text":" "},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}],"role":"pseudoSymbol","title":"Deleting the sync-up"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer":{"estimatedTime":"25min","kind":"project","type":"topic","role":"project","title":"Adding a meeting timer","abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"text":"we need to implement nuanced logic to figure out when to proceed to the next speaker.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer","url":"\/tutorials\/composablearchitecture\/implementingtimer"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetail#Create-the-sync-up-detail":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail#Create-the-sync-up-detail","type":"section","url":"\/tutorials\/composablearchitecture\/syncupdetail#Create-the-sync-up-detail","abstract":[{"text":"The “sync-up detail” screen shows all the information of a sync-up, and has many actions that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"can take place in the screen. The user can edit the sync-up, or start a new meeting in the sync"},{"type":"text","text":" "},{"type":"text","text":"up, or drill-down to a past meeting, or even delete the meeting."}],"role":"pseudoSymbol","title":"Create the sync-up detail"},"PersistingSyncUps-01-code-0002.swift":{"fileType":"swift","type":"file","syntax":"swift","highlights":[{"line":9}],"identifier":"PersistingSyncUps-01-code-0002.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  @ObservableState","  struct State: Equatable {","    @Presents var addSyncUp: SyncUpForm.State?","    @Shared(.fileStorage()) var syncUps: IdentifiedArrayOf<SyncUp> = []","  }","  enum Action {","    case addSyncUpButtonTapped","    case addSyncUp(PresentationAction<SyncUpForm.Action>)","    case confirmAddButtonTapped","    case discardButtonTapped","    case onDelete(IndexSet)","    case syncUpTapped(id: SyncUp.ID)","  }","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .addSyncUpButtonTapped:","        state.addSyncUp = SyncUpForm.State(syncUp: SyncUp(id: SyncUp.ID()))","        return .none","","      case .addSyncUp:","        return .none","","      case .confirmAddButtonTapped:","        guard let newSyncUp = state.addSyncUp?.syncUp","        else { return .none }","        state.addSyncUp = nil","        state.syncUps.append(newSyncUp)","        return .none","","      case .discardButtonTapped:","        state.addSyncUp = nil","        return .none","","      case let .onDelete(indexSet):","        state.syncUps.remove(atOffsets: indexSet)","        return .none","","      case .syncUpTapped:","        return .none","      }","    }","    .ifLet(\\.$addSyncUp, action: \\.addSyncUp) {","      SyncUpForm()","    }","  }","}"],"fileName":"SyncUpsList.swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps":{"kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps","estimatedTime":"10min","type":"topic","url":"\/tutorials\/composablearchitecture\/listsofsyncups","abstract":[{"type":"text","text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the"},{"type":"text","text":" "},{"type":"text","text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as"},{"type":"text","text":" "},{"text":"the app evolves.","type":"text"}],"role":"project","title":"Lists of sync-ups"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation#Navigate-to-a-meeting":{"kind":"section","type":"section","role":"pseudoSymbol","title":"Navigate to a meeting","abstract":[{"text":"Now that we have a navigation stack in place we can start navigating to other features in the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"application. The simplest is the meeting screen, which allows you to see the details of a"},{"type":"text","text":" "},{"type":"text","text":"previous recorded meeting."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#Navigate-to-a-meeting","url":"\/tutorials\/composablearchitecture\/meetingnavigation#Navigate-to-a-meeting"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps#Testing-persistence":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Testing-persistence","type":"section","url":"\/tutorials\/composablearchitecture\/persistingsyncups#Testing-persistence","abstract":[{"type":"text","text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some"},{"type":"text","text":" "},{"type":"text","text":"persistence. This will involve using the “shared state” tools from the library, such as"},{"type":"text","text":" "},{"overridingTitleInlineContent":[{"code":"@Shared","type":"codeVoice"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","type":"reference","isActive":true,"overridingTitle":"@Shared"},{"type":"text","text":" and "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decoder:encoder:)","isActive":true,"type":"reference"},{"type":"text","text":"."}],"role":"pseudoSymbol","title":"Testing persistence"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState#Type-safe-keys":{"kind":"section","title":"Type-safe keys","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState#Type-safe-keys","url":"\/documentation\/composablearchitecture\/sharingstate#Type-safe-keys","abstract":[]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps#A-tour-of-SyncUps":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#A-tour-of-SyncUps","type":"section","url":"\/tutorials\/composablearchitecture\/whatissyncups#A-tour-of-SyncUps","abstract":[{"type":"text","text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a"},{"text":" ","type":"text"},{"type":"text","text":"recreation of Apple’s Scrumdinger demo application."}],"role":"pseudoSymbol","title":"A tour of SyncUps"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm":{"estimatedTime":"15min","kind":"project","type":"topic","role":"project","title":"Sync-up form","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"text":" ","type":"text"},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"text":" ","type":"text"},{"type":"text","text":"feature to make things a little more interesting."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm","url":"\/tutorials\/composablearchitecture\/syncupform"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation":{"kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation","estimatedTime":"10min","type":"topic","url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation","abstract":[{"type":"text","text":"We have now integrated two moderately complex features, the "},{"code":"SyncUpsList","type":"codeVoice"},{"type":"text","text":" and "},{"code":"SyncUpForm","type":"codeVoice"},{"type":"text","text":", and"},{"type":"text","text":" "},{"type":"text","text":"so its time to write some tests. This will give us the opportunity to prove that the features"},{"type":"text","text":" "},{"type":"text","text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less"},{"type":"text","text":" "},{"type":"text","text":"fragile."}],"role":"project","title":"Testing the add sync-up flow"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingListOfSyncUps":{"estimatedTime":"5min","kind":"project","type":"topic","role":"project","title":"Testing the list of sync-ups","abstract":[{"type":"text","text":"The SyncUpsList feature we have built so far isn’t very complex. In fact, it only has one"},{"type":"text","text":" "},{"type":"text","text":"primary action, that of deleting sync-ups from its collection. However, it can be good practice"},{"type":"text","text":" "},{"type":"text","text":"to test new features as you add them, and in the future we will have much more complicated"},{"type":"text","text":" "},{"type":"text","text":"behavior to test."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps","url":"\/tutorials\/composablearchitecture\/testinglistofsyncups"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm":{"kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm","estimatedTime":"10min","type":"topic","url":"\/tutorials\/composablearchitecture\/presentingsyncupform","abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"type":"text","text":" "},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"type":"text","text":" "},{"type":"text","text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}],"role":"project","title":"Presenting the sync-up form"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps":{"estimatedTime":"5min","kind":"project","type":"topic","role":"project","title":"What is SyncUps?","abstract":[{"type":"text","text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a"},{"type":"text","text":" "},{"type":"text","text":"recreation of Apple’s Scrumdinger demo application."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps","url":"\/tutorials\/composablearchitecture\/whatissyncups"},"PersistingSyncUps-01-video-0006.mov":{"poster":null,"type":"video","identifier":"PersistingSyncUps-01-video-0006.mov","alt":null,"variants":[{"url":"\/videos\/ComposableArchitecture\/PersistingSyncUps-01-video-0006.mov","traits":["1x","light"]}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission":{"kind":"section","type":"section","role":"pseudoSymbol","title":"Asking for speech recognition permission","abstract":[{"type":"text","text":"We have just one feature left to implement, and it’s one of the most complicated ones. We need"},{"type":"text","text":" "},{"type":"text","text":"to use Apple’s "},{"type":"codeVoice","code":"SFSpeechRecognizer"},{"type":"text","text":" API to ask the user for permission to transcribe their"},{"type":"text","text":" "},{"type":"text","text":"audio, and then start a speech recognition task to live transcribe the meeting while it is"},{"text":" ","type":"text"},{"type":"text","text":"in progress."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission","url":"\/tutorials\/composablearchitecture\/implementingspeechrecognizer#Asking-for-speech-recognition-permission"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps#Create-the-SyncUps-project":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#Create-the-SyncUps-project","type":"section","url":"\/tutorials\/composablearchitecture\/whatissyncups#Create-the-SyncUps-project","abstract":[{"type":"text","text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a"},{"text":" ","type":"text"},{"type":"text","text":"recreation of Apple’s Scrumdinger demo application."}],"role":"pseudoSymbol","title":"Create the SyncUps project"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Form-focus-a-better-approach":{"kind":"section","type":"section","role":"pseudoSymbol","title":"Form focus: a better approach","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"text":" ","type":"text"},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"type":"text","text":" "},{"type":"text","text":"feature to make things a little more interesting."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-a-better-approach","url":"\/tutorials\/composablearchitecture\/syncupform#Form-focus-a-better-approach"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpDetail":{"kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail","estimatedTime":"10min","type":"topic","url":"\/tutorials\/composablearchitecture\/testingsyncupdetail","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":" feature has slowly become quite complex. It now handles two forms of"},{"text":" ","type":"text"},{"type":"text","text":"navigation (an alert and sheet), it models navigation state with a single enum, and it"},{"type":"text","text":" "},{"type":"text","text":"communicates with a parent feature via delegate actions. It’s about time we got some test"},{"type":"text","text":" "},{"type":"text","text":"coverage on this feature so we can be sure it works as we expect, and so that we can make future"},{"text":" ","type":"text"},{"type":"text","text":"changes with confidence."}],"role":"project","title":"Testing the sync-up detail"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation#Adding-a-sync-up":{"kind":"section","type":"section","role":"pseudoSymbol","title":"Adding a sync-up","abstract":[{"type":"text","text":"We have now integrated two moderately complex features, the "},{"code":"SyncUpsList","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":", and"},{"type":"text","text":" "},{"type":"text","text":"so its time to write some tests. This will give us the opportunity to prove that the features"},{"text":" ","type":"text"},{"type":"text","text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less"},{"type":"text","text":" "},{"type":"text","text":"fragile."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Adding-a-sync-up","url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation#Adding-a-sync-up"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Sync-up-detail":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Sync-up-detail","type":"topic","url":"\/tutorials\/buildingsyncups\/sync-up-detail","abstract":[],"role":"article","title":"Sync-up detail"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/fileStorage(_:decoder:encoder:)":{"type":"topic","abstract":[{"type":"text","text":"Creates a persistence key that can read and write to a "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" value in the file system."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decoder:encoder:)","url":"\/documentation\/composablearchitecture\/persistencereaderkey\/filestorage(_:decoder:encoder:)","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fileStorage"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"text":", ","kind":"text"},{"text":"decoder","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC","text":"JSONDecoder"},{"kind":"text","text":", "},{"text":"encoder","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation11JSONEncoderC","kind":"typeIdentifier","text":"JSONEncoder"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","title":"fileStorage(_:decoder:encoder:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Shared":{"role":"symbol","title":"Shared","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Shared","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","navigatorTitle":[{"text":"Shared","kind":"identifier"}],"abstract":[{"type":"text","text":"A property wrapper type that shares a value with multiple parts of an application."}],"url":"\/documentation\/composablearchitecture\/shared"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation#Non-exhaustive-testing":{"kind":"section","type":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"We have now integrated two moderately complex features, the "},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" and "},{"code":"SyncUpForm","type":"codeVoice"},{"type":"text","text":", and"},{"type":"text","text":" "},{"type":"text","text":"so its time to write some tests. This will give us the opportunity to prove that the features"},{"type":"text","text":" "},{"type":"text","text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less"},{"text":" ","type":"text"},{"type":"text","text":"fragile."}],"title":"Non-exhaustive testing","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Non-exhaustive-testing","url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation#Non-exhaustive-testing"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Integrating-the-feature-views-together":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-views-together","type":"section","url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Integrating-the-feature-views-together","abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"text":" ","type":"text"},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"type":"text","text":" "},{"type":"text","text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}],"role":"pseudoSymbol","title":"Integrating the feature views together"},"PersistingSyncUps-01-code-0005.swift":{"syntax":"swift","content":["import ComposableArchitecture","import SwiftUI","","@main","struct SyncUpsApp: App {","  @MainActor","  static let store = Store(initialState: SyncUpsList.State()) {","    SyncUpsList()","  }","","  var body: some Scene {","    WindowGroup {","      NavigationStack {","        SyncUpsListView(store: Self.store)","      }","    }","  }","}"],"fileType":"swift","identifier":"PersistingSyncUps-01-code-0005.swift","highlights":[],"fileName":"SyncUpsApp.swift","type":"file"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingListOfSyncUps#Writing-your-first-test":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps#Writing-your-first-test","type":"section","url":"\/tutorials\/composablearchitecture\/testinglistofsyncups#Writing-your-first-test","abstract":[{"type":"text","text":"The SyncUpsList feature we have built so far isn’t very complex. In fact, it only has one"},{"type":"text","text":" "},{"type":"text","text":"primary action, that of deleting sync-ups from its collection. However, it can be good practice"},{"type":"text","text":" "},{"type":"text","text":"to test new features as you add them, and in the future we will have much more complicated"},{"text":" ","type":"text"},{"type":"text","text":"behavior to test."}],"role":"pseudoSymbol","title":"Writing your first test"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp":{"estimatedTime":"30min","kind":"project","type":"topic","role":"project","abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"text":" ","type":"text"},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"type":"text","text":" "},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}],"title":"Editing and deleting a sync-up","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp","url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Form-focus-an-approach":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-an-approach","type":"section","url":"\/tutorials\/composablearchitecture\/syncupform#Form-focus-an-approach","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"text":" ","type":"text"},{"type":"text","text":"feature to make things a little more interesting."}],"role":"pseudoSymbol","title":"Form focus: an approach"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list":{"kind":"section","type":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"text":" ","type":"text"},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"type":"text","text":" "},{"type":"text","text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}],"title":"Adding a new sync-up to the list","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list","url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Adding-a-new-sync-up-to-the-list"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"type":"topic","url":"\/documentation\/composablearchitecture\/store","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"around to views that need to interact with the application."}],"kind":"symbol","title":"Store","navigatorTitle":[{"text":"Store","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#SyncUpsList-feature":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#SyncUpsList-feature","type":"section","url":"\/tutorials\/composablearchitecture\/listsofsyncups#SyncUpsList-feature","abstract":[{"type":"text","text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the"},{"type":"text","text":" "},{"type":"text","text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as"},{"type":"text","text":" "},{"type":"text","text":"the app evolves."}],"role":"pseudoSymbol","title":"SyncUpsList feature"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingSpeechRecognizer":{"estimatedTime":"10min","kind":"project","type":"topic","role":"project","abstract":[{"type":"text","text":"We have just one feature left to implement, and it’s one of the most complicated ones. We need"},{"type":"text","text":" "},{"type":"text","text":"to use Apple’s "},{"type":"codeVoice","code":"SFSpeechRecognizer"},{"type":"text","text":" API to ask the user for permission to transcribe their"},{"text":" ","type":"text"},{"type":"text","text":"audio, and then start a speech recognition task to live transcribe the meeting while it is"},{"text":" ","type":"text"},{"type":"text","text":"in progress."}],"title":"Adding a speech recognizer","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer","url":"\/tutorials\/composablearchitecture\/implementingspeechrecognizer"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps":{"kind":"overview","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","type":"topic","url":"\/tutorials\/buildingsyncups","abstract":[{"type":"text","text":"The SyncUps application is a recreation of one of Apple’s more interesting demo applications,"},{"text":" ","type":"text"},{"type":"text","text":"Scrumdinger. We recreate it from scratch using the Composable Architecture, with a focus on"},{"text":" ","type":"text"},{"type":"text","text":"domain modeling, controlling dependencies, and testability."}],"role":"overview","title":"Building SyncUps"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Navigating-to-the-detail":{"kind":"section","type":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"We will wrap the application built so far in a "},{"code":"NavigationStack","type":"codeVoice"},{"type":"text","text":" so that we can navigate to"},{"text":" ","type":"text"},{"type":"text","text":"the detail screen. To do this we will create a new root-level feature that will be responsible"},{"type":"text","text":" "},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"title":"Navigating to the detail","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Navigating-to-the-detail","url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Navigating-to-the-detail"},"PersistingSyncUps-01-code-0003.swift":{"fileType":"swift","type":"file","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  @ObservableState","  struct State: Equatable {","    @Presents var addSyncUp: SyncUpForm.State?","    @Shared(.fileStorage(.syncUps)) var syncUps: IdentifiedArrayOf<SyncUp> = []","  }","  enum Action {","    case addSyncUpButtonTapped","    case addSyncUp(PresentationAction<SyncUpForm.Action>)","    case confirmAddButtonTapped","    case discardButtonTapped","    case onDelete(IndexSet)","    case syncUpTapped(id: SyncUp.ID)","  }","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .addSyncUpButtonTapped:","        state.addSyncUp = SyncUpForm.State(syncUp: SyncUp(id: SyncUp.ID()))","        return .none","","      case .addSyncUp:","        return .none","","      case .confirmAddButtonTapped:","        guard let newSyncUp = state.addSyncUp?.syncUp","        else { return .none }","        state.addSyncUp = nil","        state.syncUps.append(newSyncUp)","        return .none","","      case .discardButtonTapped:","        state.addSyncUp = nil","        return .none","","      case let .onDelete(indexSet):","        state.syncUps.remove(atOffsets: indexSet)","        return .none","","      case .syncUpTapped:","        return .none","      }","    }","    .ifLet(\\.$addSyncUp, action: \\.addSyncUp) {","      SyncUpForm()","    }","  }","}","","extension URL {","  static let syncUps = Self.documentsDirectory.appending(component: \"sync-ups.json\")","}"],"identifier":"PersistingSyncUps-01-code-0003.swift","fileName":"SyncUpsList.swift","syntax":"swift","highlights":[{"line":9},{"line":53},{"line":54},{"line":55},{"line":56}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps#Persisting-data-to-disk":{"title":"Persisting data to disk","url":"\/tutorials\/composablearchitecture\/persistingsyncups#Persisting-data-to-disk","role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Persisting-data-to-disk","kind":"section","abstract":[{"type":"text","text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some"},{"text":" ","type":"text"},{"type":"text","text":"persistence. This will involve using the “shared state” tools from the library, such as"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","isActive":true,"overridingTitle":"@Shared","overridingTitleInlineContent":[{"type":"codeVoice","code":"@Shared"}]},{"text":" and ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decoder:encoder:)"},{"type":"text","text":"."}],"type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature#Navigating-to-the-record-meeting-feature":{"abstract":[{"type":"text","text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will"},{"type":"text","text":" "},{"text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/recordmeetingfeature#Navigating-to-the-record-meeting-feature","type":"section","title":"Navigating to the record meeting feature","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Navigating-to-the-record-meeting-feature","kind":"section","role":"pseudoSymbol"},"PersistingSyncUps-01-code-0004.swift":{"highlights":[{"line":9},{"line":54},{"line":55},{"line":56},{"line":57},{"line":58},{"line":59},{"line":60},{"line":61}],"identifier":"PersistingSyncUps-01-code-0004.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  @ObservableState","  struct State: Equatable {","    @Presents var addSyncUp: SyncUpForm.State?","    @Shared(.syncUps) var syncUps","  }","  enum Action {","    case addSyncUpButtonTapped","    case addSyncUp(PresentationAction<SyncUpForm.Action>)","    case confirmAddButtonTapped","    case discardButtonTapped","    case onDelete(IndexSet)","    case syncUpTapped(id: SyncUp.ID)","  }","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .addSyncUpButtonTapped:","        state.addSyncUp = SyncUpForm.State(syncUp: SyncUp(id: SyncUp.ID()))","        return .none","","      case .addSyncUp:","        return .none","","      case .confirmAddButtonTapped:","        guard let newSyncUp = state.addSyncUp?.syncUp","        else { return .none }","        state.addSyncUp = nil","        state.syncUps.append(newSyncUp)","        return .none","","      case .discardButtonTapped:","        state.addSyncUp = nil","        return .none","","      case let .onDelete(indexSet):","        state.syncUps.remove(atOffsets: indexSet)","        return .none","","      case .syncUpTapped:","        return .none","      }","    }","    .ifLet(\\.$addSyncUp, action: \\.addSyncUp) {","      SyncUpForm()","    }","  }","}","","extension PersistenceReaderKey","where Self == PersistenceKeyDefault<FileStorageKey<IdentifiedArrayOf<SyncUp>>> {","  static var syncUps: Self {","    PersistenceKeyDefault(","      .fileStorage(.documentsDirectory.appending(component: \"sync-ups.json\")),","      []","    )","  }","}"],"fileName":"SyncUpsList.swift","syntax":"swift","type":"file","fileType":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Creating-the-app-feature":{"abstract":[{"text":"We will wrap the application built so far in a ","type":"text"},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" so that we can navigate to"},{"type":"text","text":" "},{"text":"the detail screen. To do this we will create a new root-level feature that will be responsible","type":"text"},{"type":"text","text":" "},{"text":"for implementing the logic of the stack and integrating all of the features together.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Creating-the-app-feature","type":"section","title":"Creating the app feature","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-feature","kind":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#Domain-models":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#Domain-models","title":"Domain models","kind":"section","abstract":[{"text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the","type":"text"},{"type":"text","text":" "},{"text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the app evolves."}],"type":"section","url":"\/tutorials\/composablearchitecture\/listsofsyncups#Domain-models","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Ending-the-meeting-early":{"abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and","type":"text"},{"type":"text","text":" "},{"text":"we need to implement nuanced logic to figure out when to proceed to the next speaker.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/implementingtimer#Ending-the-meeting-early","type":"section","title":"Ending the meeting early","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Ending-the-meeting-early","kind":"section","role":"pseudoSymbol"},"PersistingSyncUps-01-code-0001.swift":{"highlights":[{"line":9}],"identifier":"PersistingSyncUps-01-code-0001.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  @ObservableState","  struct State: Equatable {","    @Presents var addSyncUp: SyncUpForm.State?","    @Shared var syncUps: IdentifiedArrayOf<SyncUp> = []","  }","  enum Action {","    case addSyncUpButtonTapped","    case addSyncUp(PresentationAction<SyncUpForm.Action>)","    case confirmAddButtonTapped","    case discardButtonTapped","    case onDelete(IndexSet)","    case syncUpTapped(id: SyncUp.ID)","  }","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .addSyncUpButtonTapped:","        state.addSyncUp = SyncUpForm.State(syncUp: SyncUp(id: SyncUp.ID()))","        return .none","","      case .addSyncUp:","        return .none","","      case .confirmAddButtonTapped:","        guard let newSyncUp = state.addSyncUp?.syncUp","        else { return .none }","        state.addSyncUp = nil","        state.syncUps.append(newSyncUp)","        return .none","","      case .discardButtonTapped:","        state.addSyncUp = nil","        return .none","","      case let .onDelete(indexSet):","        state.syncUps.remove(atOffsets: indexSet)","        return .none","","      case .syncUpTapped:","        return .none","      }","    }","    .ifLet(\\.$addSyncUp, action: \\.addSyncUp) {","      SyncUpForm()","    }","  }","}"],"fileName":"SyncUpsList.swift","type":"file","syntax":"swift","fileType":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm#Removing-attendees":{"abstract":[{"text":"We now have a moderately complex feature for editing the details of a sync-up, the ","type":"text"},{"type":"codeVoice","code":"SyncUpForm"},{"text":" ","type":"text"},{"type":"text","text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come"},{"type":"text","text":" "},{"type":"text","text":"face-to-face with dependencies for the first time in this tutorial."}],"url":"\/tutorials\/composablearchitecture\/testingsyncupform#Removing-attendees","type":"section","title":"Removing attendees","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Removing-attendees","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Record-meeting":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Record-meeting","title":"Record meeting","kind":"article","abstract":[],"type":"topic","url":"\/tutorials\/buildingsyncups\/record-meeting","role":"article"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Controlling-dependencies-early":{"abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"text":" ","type":"text"},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}],"url":"\/tutorials\/composablearchitecture\/implementingtimer#Controlling-dependencies-early","type":"section","title":"Controlling dependencies early","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Controlling-dependencies-early","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm#Adding-attendees":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Adding-attendees","title":"Adding attendees","kind":"section","abstract":[{"type":"text","text":"We now have a moderately complex feature for editing the details of a sync-up, the "},{"code":"SyncUpForm","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come"},{"type":"text","text":" "},{"text":"face-to-face with dependencies for the first time in this tutorial.","type":"text"}],"type":"section","url":"\/tutorials\/composablearchitecture\/testingsyncupform#Adding-attendees","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#A-basic-timer":{"abstract":[{"text":"The first major piece of logic and behavior we will introduce to the record meeting feature is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"text":"we need to implement nuanced logic to figure out when to proceed to the next speaker.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/implementingtimer#A-basic-timer","type":"section","title":"A basic timer","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#A-basic-timer","role":"pseudoSymbol"}}}