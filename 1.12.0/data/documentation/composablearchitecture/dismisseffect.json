{"seeAlsoSections":[{"title":"Dismissal","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies\/DependencyValues\/dismiss","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies\/DependencyValues\/isPresented"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DismissEffect"}],"title":"DismissEffect","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:22ComposableArchitecture13DismissEffectV","modules":[{"name":"ComposableArchitecture"}],"navigatorTitle":[{"kind":"identifier","text":"DismissEffect"}]},"abstract":[{"type":"text","text":"An effect that dismisses the current presentation."}],"sections":[],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/s8SendableP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducers","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/init(_:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(animation:fileID:filePath:line:column:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(fileID:filePath:line:column:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(transaction:fileID:filePath:line:column:)"]}],"variants":[{"paths":["\/documentation\/composablearchitecture\/dismisseffect"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DismissEffect"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Execute this in the effect returned from a reducer in order to dismiss the feature:"}]},{"type":"codeListing","syntax":"swift","code":["@Reducer","struct ChildFeature {","  struct State { \/* ... *\/ }","  enum Action {","    case exitButtonTapped","    \/\/ ...","  }","  @Dependency(\\.dismiss) var dismiss","  var body: some Reducer<State, Action> {","    Reduce { state, action in","      switch action {","      case .exitButtonTapped:","        return .run { _ in await self.dismiss() }","      \/\/ ...","      }","    }","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This operation works by finding the nearest parent feature that was presented using either the"},{"type":"text","text":" "},{"type":"codeVoice","code":"Reducer\/ifLet(_:action:destination:fileID:line:)-4k9by"},{"type":"text","text":" or the"},{"type":"text","text":" "},{"type":"codeVoice","code":"Reducer\/forEach(_:action:destination:fileID:line:)-582rd"},{"type":"text","text":" operator, and then dismisses "},{"type":"emphasis","inlineContent":[{"type":"text","text":"that"}]},{"type":"text","text":" "},{"type":"text","text":"feature. It performs the dismissal by either sending the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/dismiss"},{"type":"text","text":" in the"},{"type":"text","text":" "},{"type":"text","text":"case of "},{"type":"codeVoice","code":"ifLet"},{"type":"text","text":" or sending "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction\/popFrom(id:)"},{"type":"text","text":" in the case of "},{"type":"codeVoice","code":"forEach"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is also possible to dismiss the feature using an animation by providing an argument to the"},{"type":"text","text":" "},{"type":"codeVoice","code":"dismiss"},{"type":"text","text":" function:"}]},{"type":"codeListing","syntax":"swift","code":["case .exitButtonTapped:","  return .run { _ in await self.dismiss(animation: .default) }"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This will cause the "},{"type":"codeVoice","code":"dismiss"},{"type":"text","text":" or "},{"type":"codeVoice","code":"popFrom(id:)"},{"type":"text","text":" action to be sent with the particular animation."}]},{"style":"warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"@Dependency(\\.dismiss)"},{"type":"text","text":" tool only works for features that are presented using"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"ifLet"},{"type":"text","text":" operator for tree-based navigation (see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation"},{"type":"text","text":" for more info)"},{"type":"text","text":" "},{"type":"text","text":"or "},{"type":"codeVoice","code":"forEach"},{"type":"text","text":" operator for stack-based navigation (see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation"},{"type":"text","text":"). If no"},{"type":"text","text":" "},{"type":"text","text":"parent feature is found that was presented with "},{"type":"codeVoice","code":"ifLet"},{"type":"text","text":" or "},{"type":"codeVoice","code":"forEach"},{"type":"text","text":", then a runtime warning"},{"type":"text","text":" "},{"type":"text","text":"is emitted in Xcode letting you know that it is not possible to dismiss. Further, the runtime"},{"type":"text","text":" "},{"type":"text","text":"warning becomes a test failure when run in tests."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you are testing a child feature in isolation that makes use of "},{"type":"codeVoice","code":"@Dependency(\\.dismiss)"},{"type":"text","text":" "},{"type":"text","text":"then you will need to override the dependency to get a passing test. You can even mutate"},{"type":"text","text":" "},{"type":"text","text":"some shared mutable state inside the "},{"type":"codeVoice","code":"dismiss"},{"type":"text","text":" closure to confirm that it is indeed invoked:"}]},{"type":"codeListing","syntax":"swift","code":["let isDismissInvoked: LockIsolated<[Bool]> = .init([])","let store = TestStore(initialState: Child.State()) {","  Child()","} withDependencies: {","  $0.dismiss = DismissEffect { isDismissInvoked.withValue { $0.append(true) } }","}","","await store.send(.exitButtonTapped) {","  \/\/ ...","}","XCTAssertEqual(isDismissInvoked.value, [true])"]}],"type":"aside","name":"Warning"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackAction/popFrom(id:)":{"role":"symbol","title":"StackAction.popFrom(id:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"popFrom"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StackElementID","preciseIdentifier":"s:22ComposableArchitecture14StackElementIDV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"An action sent to dismiss the associated stack element at a given identifier."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction\/popFrom(id:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/stackaction\/popfrom(id:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"role":"symbol","title":"Effect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"url":"\/documentation\/composablearchitecture\/effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Dependencies/DependencyValues/isPresented":{"role":"symbol","title":"isPresented","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isPresented"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"A Boolean value that indicates whether the current feature is being presented from a parent"},{"type":"text","text":" "},{"type":"text","text":"feature."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies\/DependencyValues\/isPresented","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/dependencies\/dependencyvalues\/ispresented"},"doc://ComposableArchitecture/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackBasedNavigation":{"role":"article","title":"Stack-based navigation","abstract":[{"type":"text","text":"Learn about stack-based navigation, that is navigation modeled with collections, including how to"},{"type":"text","text":" "},{"type":"text","text":"model your domains, how to integrate features, how to test your features, and more."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/stackbasednavigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducers":{"role":"collectionGroup","title":"Reducers","abstract":[{"type":"text","text":"Learn about one of the most fundamental tools in the Composable Architecture: the reducer. It is"},{"type":"text","text":" "},{"type":"text","text":"responsible for evolving the state of your application forward when an action is sent, and"},{"type":"text","text":" "},{"type":"text","text":"constructing effects that are executed in the outside world."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducers","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/reducers"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect/callAsFunction(fileID:filePath:line:column:)":{"role":"symbol","title":"callAsFunction(fileID:filePath:line:column:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"callAsFunction"},{"kind":"text","text":"("},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"filePath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(fileID:filePath:line:column:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/dismisseffect\/callasfunction(fileid:filepath:line:column:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"role":"symbol","title":"Reducer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"url":"\/documentation\/composablearchitecture\/reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer()":{"role":"symbol","title":"Reducer()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Helps implement the conformance to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"},{"type":"text","text":" protocol for a type."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/reducer()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Dependencies/DependencyValues/dismiss":{"role":"symbol","title":"dismiss","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"dismiss"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DismissEffect","preciseIdentifier":"s:22ComposableArchitecture13DismissEffectV"}],"abstract":[{"type":"text","text":"An effect that dismisses the current presentation."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies\/DependencyValues\/dismiss","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/dependencies\/dependencyvalues\/dismiss"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect":{"role":"symbol","title":"DismissEffect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DismissEffect"}],"abstract":[{"type":"text","text":"An effect that dismisses the current presentation."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DismissEffect"}],"url":"\/documentation\/composablearchitecture\/dismisseffect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"role":"collectionGroup","title":"Navigation","abstract":[{"type":"text","text":"Learn how to use the navigation tools in the library, including how to best model your domains, how"},{"type":"text","text":" "},{"type":"text","text":"to integrate features in the reducer and view layers, and how to write tests."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction/dismiss":{"role":"symbol","title":"PresentationAction.dismiss","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"dismiss"}],"abstract":[{"type":"text","text":"An action sent to "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" out the associated presentation state."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/dismiss","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/presentationaction\/dismiss"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect/callAsFunction(transaction:fileID:filePath:line:column:)":{"role":"symbol","title":"callAsFunction(transaction:fileID:filePath:line:column:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"callAsFunction"},{"kind":"text","text":"("},{"kind":"externalParam","text":"transaction"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Transaction","preciseIdentifier":"s:7SwiftUI11TransactionV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"filePath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(transaction:fileID:filePath:line:column:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/dismisseffect\/callasfunction(transaction:fileid:filepath:line:column:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect/callAsFunction(animation:fileID:filePath:line:column:)":{"role":"symbol","title":"callAsFunction(animation:fileID:filePath:line:column:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"callAsFunction"},{"kind":"text","text":"("},{"kind":"externalParam","text":"animation"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Animation","preciseIdentifier":"s:7SwiftUI9AnimationV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"filePath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(animation:fileID:filePath:line:column:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/dismisseffect\/callasfunction(animation:fileid:filepath:line:column:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect/init(_:)":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/init(_:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/dismisseffect\/init(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TreeBasedNavigation":{"role":"article","title":"Tree-based navigation","abstract":[{"type":"text","text":"Learn about tree-based navigation, that is navigation modeled with optionals and enums, including"},{"type":"text","text":" "},{"type":"text","text":"how to model your domains, how to integrate features, how to test your features, and more."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/treebasednavigation"}}}