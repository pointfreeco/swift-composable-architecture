{"metadata":{"externalID":"s:22ComposableArchitecture9TestStoreC8bindings6actionAA011BindingViewD0VyxGs7KeyPathCy9CasePaths0K0Vyq_GAMyqd__GG_t5StateQyd__RszAK0K8PathableR_AA14BindableActionRd__lF","title":"bindings(action:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"bindings"},{"kind":"text","text":"<"},{"text":"ViewAction","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"text":"ViewAction","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"BindingViewStore","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":">"}],"symbolKind":"method","extendedModule":"ComposableArchitecture","role":"symbol","modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Instance Method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"bindings","kind":"identifier"},{"kind":"text","text":"<"},{"text":"ViewAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"action","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"toViewAction"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewAction"},{"text":">) -> ","kind":"text"},{"text":"BindingViewStore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":" == "},{"text":"ViewAction","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture14BindableActionP5StateQa","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/State"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"CasePathable","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A8PathableP"},{"kind":"text","text":", "},{"text":"ViewAction","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture14BindableActionP","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction","kind":"typeIdentifier","text":"BindableAction"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A case path from action to a bindable view action.","type":"text"}]}],"name":"toViewAction"}],"kind":"parameters"},{"content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A binding view store.","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Useful for testing view state of a store."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let store = TestStore(LoginFeature.State()) {","  Login.Feature()","}","await store.send(.view(.set(\\.$email, \"blob@pointfree.co\"))) {","  $0.email = \"blob@pointfree.co\"","}","XCTAssertTrue(","  LoginView.ViewState(store.bindings(action: \\.view))","    .isLoginButtonDisabled",")","","await store.send(.view(.set(\\.$password, \"whats-the-point?\"))) {","  $0.password = \"blob@pointfree.co\"","  $0.isFormValid = true","}","XCTAssertFalse(","  LoginView.ViewState(store.bindings(action: \\.view))","    .isLoginButtonDisabled",")"]}]}],"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/bindings"],"title":"Bindings","generated":true,"anchor":"Bindings"}],"abstract":[{"text":"Returns a binding view store for this store.","type":"text"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/teststore\/bindings(action:)-2nhb5"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreDeprecations"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/bindings(action:)-2nhb5"},"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","kind":"symbol","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction/State":{"required":true,"abstract":[{"text":"The root state type that contains bindable fields.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/State","type":"topic","role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"State"}],"title":"State","kind":"symbol","url":"\/documentation\/composablearchitecture\/bindableaction\/state"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/bindings":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/bindings","kind":"symbol","type":"topic","title":"bindings","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"bindings","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV","text":"BindingViewStore","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":">"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"State"},{"text":" is ","type":"text"},{"code":"Action.State","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Action"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"BindableAction"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/composablearchitecture\/teststore\/bindings","abstract":[{"text":"Returns a binding view store for this store.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"kind":"symbol","navigatorTitle":[{"text":"ViewStore","kind":"identifier"}],"deprecated":true,"title":"ViewStore","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewStore"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ViewStore"},{"text":" is an object that can observe state changes and send actions. They are most","type":"text"},{"text":" ","type":"text"},{"text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"anywhere it makes sense to observe state or send actions."}],"url":"\/documentation\/composablearchitecture\/viewstore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingAction":{"title":"BindingAction","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","abstract":[{"type":"text","text":"An action that describes simple mutations to some root state at a writable key path."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BindingAction"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"BindingAction"}],"type":"topic","url":"\/documentation\/composablearchitecture\/bindingaction"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","abstract":[{"text":"A testable runtime for a reducer.","type":"text"}],"kind":"symbol","type":"topic","title":"TestStore","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TestStore"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"TestStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/teststore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/bindings(action:)-2nhb5":{"role":"symbol","title":"bindings(action:)","kind":"symbol","url":"\/documentation\/composablearchitecture\/teststore\/bindings(action:)-2nhb5","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"bindings"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ViewAction"},{"kind":"text","text":">("},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"text":"ViewAction","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV","text":"BindingViewStore","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[{"text":"Returns a binding view store for this store.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/bindings(action:)-2nhb5"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState":{"title":"BindingViewState","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BindingViewState"}],"kind":"symbol","abstract":[{"text":"A property wrapper type that can designate properties of view state that can be directly","type":"text"},{"type":"text","text":" "},{"text":"bindable in SwiftUI views.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"BindingViewState"}],"url":"\/documentation\/composablearchitecture\/bindingviewstate","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewStore":{"title":"BindingViewStore","role":"symbol","url":"\/documentation\/composablearchitecture\/bindingviewstore","kind":"symbol","abstract":[{"text":"A property wrapper type that can derive ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","isActive":true,"type":"reference"},{"type":"text","text":" values for a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"},{"text":".","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingViewStore","kind":"identifier"}],"navigatorTitle":[{"text":"BindingViewStore","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStoreDeprecations":{"url":"\/documentation\/composablearchitecture\/teststoredeprecations","type":"topic","abstract":[{"type":"text","text":"Review unsupported test store APIs and their replacements."}],"kind":"article","title":"Deprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreDeprecations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction":{"abstract":[{"type":"text","text":"An action type that exposes a "},{"code":"binding","type":"codeVoice"},{"type":"text","text":" case that holds a "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","type":"reference"},{"type":"text","text":"."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"BindableAction","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/bindableaction","title":"BindableAction","navigatorTitle":[{"kind":"identifier","text":"BindableAction"}],"role":"symbol"}}}