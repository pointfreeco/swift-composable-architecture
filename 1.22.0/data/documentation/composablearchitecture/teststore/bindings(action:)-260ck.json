{"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"Use the version of this operator with case key paths, instead. See the following migration guide for more information: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.4#Using-case-key-paths","type":"text"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/bindings(action:)-260ck"},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"externalID":"s:22ComposableArchitecture9TestStoreC8bindings6actionAA011BindingViewD0VyxG13CasePathsCore03AnyI4PathVyq_qd__G_t5StateQyd__RszAA14BindableActionRd__lF","symbolKind":"method","conformance":{"constraints":[{"code":"State","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"bindings(action:)","platforms":[],"modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Instance Method","extendedModule":"ComposableArchitecture","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bindings","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ViewAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:13CasePathsCore03AnyA4PathV","text":"AnyCasePath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV","text":"BindingViewStore","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bindings","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ViewAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"action","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"toViewAction","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"AnyCasePath","kind":"typeIdentifier","preciseIdentifier":"s:13CasePathsCore03AnyA4PathV"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore","text":"BindingViewStore","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture14BindableActionP5StateQa","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/State","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture14BindableActionP","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction","text":"BindableAction"}],"platforms":["macOS"],"languages":["swift"]}]}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/teststore\/bindings(action:)-260ck"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/bindings(action:)-260ck":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"State","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}]},"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/bindings(action:)-260ck","kind":"symbol","title":"bindings(action:)","role":"symbol","deprecated":true,"url":"\/documentation\/composablearchitecture\/teststore\/bindings(action:)-260ck","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bindings","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ViewAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AnyCasePath","kind":"typeIdentifier","preciseIdentifier":"s:13CasePathsCore03AnyA4PathV"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"BindingViewStore","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState":{"type":"topic","title":"BindingViewState","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindingViewState"}],"url":"\/documentation\/composablearchitecture\/bindingviewstate","navigatorTitle":[{"kind":"identifier","text":"BindingViewState"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","role":"symbol","abstract":[{"type":"text","text":"A property wrapper type that can designate properties of view state that can be directly"},{"type":"text","text":" "},{"type":"text","text":"bindable in SwiftUI views."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewStore":{"title":"BindingViewStore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindingViewStore"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/bindingviewstore","navigatorTitle":[{"kind":"identifier","text":"BindingViewStore"}],"abstract":[{"type":"text","text":"A property wrapper type that can derive "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState"},{"type":"text","text":" values for a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"},{"type":"text","text":"."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction/State":{"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/State","role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/bindableaction\/state","required":true,"title":"State","kind":"symbol","abstract":[{"type":"text","text":"The root state type that contains bindable fields."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingAction":{"abstract":[{"text":"An action that describes simple mutations to some root state at a writable key path.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","role":"symbol","url":"\/documentation\/composablearchitecture\/bindingaction","title":"BindingAction","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingAction","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"BindingAction","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"type":"topic","title":"TestStore","navigatorTitle":[{"kind":"identifier","text":"TestStore"}],"abstract":[{"text":"A testable runtime for a reducer.","type":"text"}],"url":"\/documentation\/composablearchitecture\/teststore","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestStore"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ViewStore"},{"type":"text","text":" is an object that can observe state changes and send actions. They are most"},{"type":"text","text":" "},{"type":"text","text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used"},{"type":"text","text":" "},{"type":"text","text":"anywhere it makes sense to observe state or send actions."}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewStore"}],"navigatorTitle":[{"kind":"identifier","text":"ViewStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","url":"\/documentation\/composablearchitecture\/viewstore","title":"ViewStore","role":"symbol","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/bindableaction","title":"BindableAction","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindableAction","kind":"identifier"}],"abstract":[{"type":"text","text":"An action type that exposes a "},{"type":"codeVoice","code":"binding"},{"type":"text","text":" case that holds a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","isActive":true},{"type":"text","text":"."}],"type":"topic","navigatorTitle":[{"text":"BindableAction","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","role":"collection","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"}}}