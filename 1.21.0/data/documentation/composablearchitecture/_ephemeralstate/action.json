{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Action","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_EphemeralState"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/_ephemeralstate\/action"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_EphemeralState\/Action"},"metadata":{"roleHeading":"Associated Type","externalID":"s:22ComposableArchitecture15_EphemeralStateP6ActionQa","modules":[{"name":"ComposableArchitecture"}],"title":"Action","role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Action"}],"symbolKind":"associatedtype","required":true},"kind":"symbol","sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"kind":"article","title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","type":"topic","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/_EphemeralState/Action":{"role":"symbol","required":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_EphemeralState\/Action","type":"topic","url":"\/documentation\/composablearchitecture\/_ephemeralstate\/action","abstract":[],"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Action","kind":"identifier"}],"title":"Action","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/_EphemeralState":{"abstract":[{"type":"text","text":"Loosely represents features that are only briefly shown and the first time they are interacted"},{"type":"text","text":" "},{"type":"text","text":"with they are dismissed. Such features do not manage any behavior on the inside."}],"url":"\/documentation\/composablearchitecture\/_ephemeralstate","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_EphemeralState","title":"_EphemeralState","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"_EphemeralState"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"_EphemeralState"}],"kind":"symbol"}}}