{"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"role":"collectionGroup","roleHeading":"API Collection","modules":[{"name":"ComposableArchitecture"}],"title":"SwiftUI Integration"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"]]},"sections":[],"topicSections":[{"title":"Alerts and dialogs","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_EphemeralState"],"anchor":"Alerts-and-dialogs"},{"title":"Navigation stacks and links","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI\/NavigationStack\/init(path:root:destination:fileID:filePath:line:column:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI\/NavigationLink\/init(state:label:fileID:filePath:line:column:)"],"anchor":"Navigation-stacks-and-links"},{"title":"Bindings","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Bindings","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer"],"anchor":"Bindings"},{"title":"Deprecations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"],"anchor":"Deprecations"}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","anchor":"Overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"The Composable Architecture can be used to power applications built in many frameworks, but it was"},{"type":"text","text":" "},{"type":"text","text":"designed with SwiftUI in mind, and comes with many powerful tools to integrate into your SwiftUI applications."}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/composablearchitecture\/swiftuiintegration"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"generated":true,"title":"Integrations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftConcurrency","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationBackport","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UIKit"],"anchor":"Integrations"}],"kind":"article","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","role":"collection","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackState":{"kind":"symbol","type":"topic","title":"StackState","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StackState","kind":"identifier"}],"navigatorTitle":[{"text":"StackState","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","abstract":[{"text":"A list of data representing the content of a navigation stack.","type":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/stackstate"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUI/NavigationStack/init(path:root:destination:fileID:filePath:line:column:)":{"abstract":[{"text":"Drives a navigation stack with a store.","type":"text"}],"role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Root","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"View","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"State","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Action","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Destination","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Binding","preciseIdentifier":"s:7SwiftUI7BindingV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"StackState","preciseIdentifier":"s:22ComposableArchitecture10StackStateV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"StackAction","preciseIdentifier":"s:22ComposableArchitecture11StackActionO","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">>>, ","kind":"text"},{"text":"root","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"destination","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Destination","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(path:root:destination:fileID:filePath:line:column:)","kind":"symbol","url":"\/documentation\/composablearchitecture\/swiftui\/navigationstack\/init(path:root:destination:fileid:filepath:line:column:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI\/NavigationStack\/init(path:root:destination:fileID:filePath:line:column:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftConcurrency":{"kind":"article","abstract":[{"type":"text","text":"Learn how to write safe, concurrent effects using Swiftâ€™s structured concurrency."}],"type":"topic","url":"\/documentation\/composablearchitecture\/swiftconcurrency","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftConcurrency","title":"Adopting Swift concurrency","role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/bindableaction","title":"BindableAction","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindableAction","kind":"identifier"}],"abstract":[{"type":"text","text":"An action type that exposes a "},{"type":"codeVoice","code":"binding"},{"type":"text","text":" case that holds a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","isActive":true},{"type":"text","text":"."}],"type":"topic","navigatorTitle":[{"text":"BindableAction","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/_EphemeralState":{"navigatorTitle":[{"kind":"identifier","text":"_EphemeralState"}],"kind":"symbol","type":"topic","abstract":[{"text":"Loosely represents features that are only briefly shown and the first time they are interacted","type":"text"},{"text":" ","type":"text"},{"text":"with they are dismissed. Such features do not manage any behavior on the inside.","type":"text"}],"title":"_EphemeralState","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"_EphemeralState"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_EphemeralState","url":"\/documentation\/composablearchitecture\/_ephemeralstate","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"type":"topic","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"url":"\/documentation\/composablearchitecture\/swiftuideprecations","role":"collectionGroup","kind":"article","title":"Deprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UIKit":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UIKit","type":"topic","title":"UIKit Integration","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/uikit","abstract":[{"text":"Integrating the Composable Architecture into a UIKit application.","type":"text"}],"kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingAction":{"abstract":[{"text":"An action that describes simple mutations to some root state at a writable key path.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","role":"symbol","url":"\/documentation\/composablearchitecture\/bindingaction","title":"BindingAction","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingAction","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"BindingAction","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUI/NavigationLink/init(state:label:fileID:filePath:line:column:)":{"abstract":[{"text":"Creates a navigation link that presents the view corresponding to an element of","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","type":"reference","isActive":true},{"text":".","type":"text"}],"title":"init(state:label:fileID:filePath:line:column:)","url":"\/documentation\/composablearchitecture\/swiftui\/navigationlink\/init(state:label:fileid:filepath:line:column:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI\/NavigationLink\/init(state:label:fileID:filePath:line:column:)","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"L","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"state","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"label","kind":"externalParam"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"L"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"filePath"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":")"}],"conformance":{"constraints":[{"code":"Label","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"View","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Destination","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Never","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","type":"topic","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationBackport":{"role":"article","type":"topic","title":"Observation backport","abstract":[{"type":"text","text":"Learn how the Observation framework from Swift 5.9 was backported to support iOS 16 and earlier,"},{"type":"text","text":" "},{"type":"text","text":"as well as the caveats of using the backported tools."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationBackport","url":"\/documentation\/composablearchitecture\/observationbackport","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Bindings":{"kind":"article","title":"Working with SwiftUI bindings","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Bindings","url":"\/documentation\/composablearchitecture\/bindings","type":"topic","abstract":[{"type":"text","text":"Learn how to connect features written in the Composable Architecture to SwiftUI bindings."}],"role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingReducer","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","navigatorTitle":[{"text":"BindingReducer","kind":"identifier"}],"title":"BindingReducer","abstract":[{"type":"text","text":"A reducer that updates bindable state when it receives binding actions."}],"url":"\/documentation\/composablearchitecture\/bindingreducer","type":"topic","kind":"symbol"}}}