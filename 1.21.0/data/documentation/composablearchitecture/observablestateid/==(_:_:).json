{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID"]]},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"Equatable.==(_:_:)","type":"codeVoice"},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID\/==(_:_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID","preciseIdentifier":"s:22ComposableArchitecture17ObservableStateIDV","kind":"typeIdentifier","text":"ObservableStateID"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID","preciseIdentifier":"s:22ComposableArchitecture17ObservableStateIDV","kind":"typeIdentifier","text":"ObservableStateID"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"externalID":"s:22ComposableArchitecture17ObservableStateIDV2eeoiySbAC_ACtFZ","role":"symbol","modules":[{"name":"ComposableArchitecture"}],"title":"==(_:_:)","symbolKind":"op","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"ObservableStateID","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture17ObservableStateIDV"},{"text":", ","kind":"text"},{"text":"ObservableStateID","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture17ObservableStateIDV"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"roleHeading":"Operator"},"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/observablestateid\/==(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableStateID":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableStateID"}],"kind":"symbol","abstract":[{"text":"A unique identifier for a observed value.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ObservableStateID"}],"url":"\/documentation\/composablearchitecture\/observablestateid","title":"ObservableStateID","role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableStateID/==(_:_:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ObservableStateID","preciseIdentifier":"s:22ComposableArchitecture17ObservableStateIDV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ObservableStateID","preciseIdentifier":"s:22ComposableArchitecture17ObservableStateIDV"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","type":"topic","abstract":[],"title":"==(_:_:)","url":"\/documentation\/composablearchitecture\/observablestateid\/==(_:_:)","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID\/==(_:_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"role":"symbol","type":"topic","title":"Effect","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","url":"\/documentation\/composablearchitecture\/effect","abstract":[],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","url":"\/documentation\/composablearchitecture\/reducer","type":"topic","title":"Reducer","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"text":"s should be executed later by the store, if any.","type":"text"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","type":"topic","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState()":{"title":"ObservableState()","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","url":"\/documentation\/composablearchitecture\/observablestate()","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Defines and implements conformance of the Observable protocol."}],"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableState","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"abstract":[{"text":"A type that holds the current state of the reducer.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","title":"State","url":"\/documentation\/composablearchitecture\/reducer\/state","kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"}],"type":"topic","role":"symbol","required":true}}}