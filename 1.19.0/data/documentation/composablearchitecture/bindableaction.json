{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction"},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"abstract":[{"text":"An action type that exposes a ","type":"text"},{"type":"codeVoice","code":"binding"},{"text":" case that holds a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","type":"reference"},{"type":"text","text":"."}],"variants":[{"paths":["\/documentation\/composablearchitecture\/bindableaction"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindableAction"},{"kind":"text","text":"<"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/State","kind":"typeIdentifier","text":"State","preciseIdentifier":"s:22ComposableArchitecture14BindableActionP5StateQa"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Used in conjunction with "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState","isActive":true,"type":"reference"},{"type":"text","text":" to safely eliminate the boilerplate typically"},{"text":" ","type":"text"},{"text":"associated with mutating multiple fields in state.","type":"text"}]},{"inlineContent":[{"text":"Read ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Bindings","isActive":true},{"type":"text","text":" for more information."}],"type":"paragraph"}],"kind":"content"}],"topicSections":[{"title":"Associated Types","anchor":"Associated-Types","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/State"],"generated":true},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/binding-108e1"],"generated":true,"title":"Instance Properties","anchor":"Instance-Properties"},{"title":"Type Methods","generated":true,"anchor":"Type-Methods","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/binding(_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/set(_:_:)-13po5","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/set(_:_:)-9eplr"]}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Bindings","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer"],"anchor":"Bindings","title":"Bindings"}],"metadata":{"roleHeading":"Protocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindableAction","kind":"identifier"}],"modules":[{"name":"ComposableArchitecture"}],"title":"BindableAction","externalID":"s:22ComposableArchitecture14BindableActionP","symbolKind":"protocol","navigatorTitle":[{"kind":"identifier","text":"BindableAction"}]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction":{"abstract":[{"text":"An action type that exposes a ","type":"text"},{"type":"codeVoice","code":"binding"},{"type":"text","text":" case that holds a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","isActive":true},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"BindableAction","kind":"identifier"}],"type":"topic","url":"\/documentation\/composablearchitecture\/bindableaction","kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction","title":"BindableAction","navigatorTitle":[{"text":"BindableAction","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Bindings":{"url":"\/documentation\/composablearchitecture\/bindings","type":"topic","abstract":[{"type":"text","text":"Learn how to connect features written in the Composable Architecture to SwiftUI bindings."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Bindings","kind":"article","role":"article","title":"Working with SwiftUI bindings"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"role":"collectionGroup","type":"topic","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction/set(_:_:)-13po5":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/set(_:_:)-13po5","abstract":[],"url":"\/documentation\/composablearchitecture\/bindableaction\/set(_:_:)-13po5","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"set"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture24_SendableWritableKeyPatha","text":"_SendableWritableKeyPath"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture14BindableActionP5StateQa","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"text":">, ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"conformance":{"constraints":[{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"code":"ObservableState","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","title":"set(_:_:)","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction/set(_:_:)-9eplr":{"url":"\/documentation\/composablearchitecture\/bindableaction\/set(_:_:)-9eplr","abstract":[{"text":"Constructs a binding action for the given key path and bindable value.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"text":"_SendableWritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture24_SendableWritableKeyPatha"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture14BindableActionP5StateQa","text":"State"},{"text":", ","kind":"text"},{"text":"BindingState","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture12BindingStateV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"text":">>, ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","kind":"symbol","type":"topic","title":"set(_:_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/set(_:_:)-9eplr"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction/State":{"url":"\/documentation\/composablearchitecture\/bindableaction\/state","title":"State","abstract":[{"text":"The root state type that contains bindable fields.","type":"text"}],"role":"symbol","required":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/State","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"State"}],"kind":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"kind":"symbol","title":"ComposableArchitecture","type":"topic","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction/binding-108e1":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/bindableaction\/binding-108e1","defaultImplementations":1,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/binding-108e1","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"binding","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture13BindingActionV","text":"BindingAction","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture14BindableActionP5StateQa","text":"State"},{"text":">?","kind":"text"}],"title":"binding","abstract":[{"type":"text","text":"Extracts a binding action from this action type."}],"required":true,"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction/binding(_:)":{"title":"binding(_:)","url":"\/documentation\/composablearchitecture\/bindableaction\/binding(_:)","abstract":[{"type":"text","text":"Embeds a binding action in this action type."}],"required":true,"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/binding(_:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"binding"},{"kind":"text","text":"("},{"text":"BindingAction","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture13BindingActionV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture14BindableActionP5StateQa","kind":"typeIdentifier","text":"State"},{"kind":"text","text":">) -> "},{"text":"Self","kind":"typeIdentifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingState":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BindingState"}],"url":"\/documentation\/composablearchitecture\/bindingstate","title":"BindingState","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"BindingState"}],"deprecated":true,"abstract":[{"type":"text","text":"A property wrapper type that can designate properties of app state that can be directly bindable"},{"text":" ","type":"text"},{"type":"text","text":"in SwiftUI views."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","kind":"symbol","url":"\/documentation\/composablearchitecture\/bindingreducer","abstract":[{"text":"A reducer that updates bindable state when it receives binding actions.","type":"text"}],"role":"symbol","type":"topic","title":"BindingReducer","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BindingReducer","kind":"identifier"}],"navigatorTitle":[{"text":"BindingReducer","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingAction":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BindingAction","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","type":"topic","kind":"symbol","navigatorTitle":[{"text":"BindingAction","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/bindingaction","abstract":[{"type":"text","text":"An action that describes simple mutations to some root state at a writable key path."}],"title":"BindingAction"}}}