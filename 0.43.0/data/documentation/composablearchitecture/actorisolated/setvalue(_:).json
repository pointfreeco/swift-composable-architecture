{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setValue"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"newValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"newValue","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to replace the current isolated value with."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Useful for setting an actor-isolated value when a tested dependency runs."}]},{"type":"codeListing","syntax":"swift","code":["let didOpenSettings = ActorIsolated(false)","store.dependencies.openSettings = { await didOpenSettings.setValue(true) }","","await store.send(.settingsButtonTapped)","","await didOpenSettings.withValue { XCTAssertTrue($0) }"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/actorisolated\/setvalue(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ActorIsolated\/setValue(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Overwrite the isolated value with a new value."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setValue"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"title":"setValue(_:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:22ComposableArchitecture13ActorIsolatedC8setValueyyxF","modules":[{"name":"ComposableArchitecture"}]},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ActorIsolated"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ActorIsolated/setValue(_:)":{"role":"symbol","title":"setValue(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setValue"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Overwrite the isolated value with a new value."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ActorIsolated\/setValue(_:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/actorisolated\/setvalue(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ActorIsolated":{"role":"symbol","title":"ActorIsolated","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActorIsolated"}],"abstract":[{"type":"text","text":"A generic wrapper for isolating a mutable value to an actor."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ActorIsolated","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ActorIsolated"}],"url":"\/documentation\/composablearchitecture\/actorisolated"}}}