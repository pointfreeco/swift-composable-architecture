{"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.10","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"ComposableArchitecture"}],"title":"Migrating to 1.10","roleHeading":"Article","role":"article"},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.17.1","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.17","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.16","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.15","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.14","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.13","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.12","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.11","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.9","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.8","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.7","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.6","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.5","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.4"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Update your code to make use of the new state sharing tools in the library, such as the ","type":"text"},{"code":"Shared","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"property wrapper, and the "},{"type":"codeVoice","code":"appStorage"},{"type":"text","text":" and "},{"type":"codeVoice","code":"fileStorage"},{"text":" persistence strategies.","type":"text"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/migratingto1.10"]}],"kind":"article","primaryContentSections":[{"content":[{"level":2,"type":"heading","anchor":"Overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Composable Architecture is under constant development, and we are always looking for ways to"},{"type":"text","text":" "},{"text":"simplify the library, and make it more powerful. This version of the library only introduced new","type":"text"},{"text":" ","type":"text"},{"text":"APIs and did not deprecate any existing APIs.","type":"text"}]},{"content":[{"inlineContent":[{"text":"Before following this migration guide be sure you have fully migrated to the newest","type":"text"},{"type":"text","text":" "},{"type":"text","text":"tools of version 1.9. See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides"},{"text":" for more information.","type":"text"}],"type":"paragraph"}],"style":"important","type":"aside","name":"Important"},{"level":2,"type":"heading","text":"Sharing state","anchor":"Sharing-state"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The new tools added are concerned with allowing one to seamlessly share state with many parts of an"},{"type":"text","text":" "},{"text":"application that is easy to understand, and most importantly, testable. See the dedicated","type":"text"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"},{"text":" article for more information on how to use these new tools.","type":"text"}]},{"inlineContent":[{"type":"text","text":"To share state in one feature with another feature, simply use the "},{"code":"Shared","type":"codeVoice"},{"type":"text","text":" property wrapper:"}],"type":"paragraph"},{"code":["@ObservableState","struct State {","  @Shared var signUpData: SignUpData","  \/\/ ...","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This will require that "},{"type":"codeVoice","code":"SignUpData"},{"type":"text","text":" be passed in from the parent, and any changes made to this state"},{"type":"text","text":" "},{"text":"will be instantly observed by all features holding onto it.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Further, there are persistence strategies one can employ in "},{"code":"@Shared","type":"codeVoice"},{"type":"text","text":". For example, if you want any"},{"type":"text","text":" "},{"type":"text","text":"changes of "},{"code":"signUpData","type":"codeVoice"},{"text":" to be automatically persisted to the file system you can use","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"fileStorage(_:decoder:encoder:)"},{"text":" and specify a URL:","type":"text"}]},{"code":["@ObservableState","struct State {","  @Shared(.fileStorage(URL(\/* ... *\/) var signUpData = SignUpData()","  \/\/ ...","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Upon app launch the ","type":"text"},{"code":"signUpData","type":"codeVoice"},{"text":" will be populated from disk, and any changes made to ","type":"text"},{"type":"codeVoice","code":"signUpData"},{"type":"text","text":" "},{"text":"will automatically be persisted to disk. Further, if the disk version changes, all instances of","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"signUpData"},{"text":" in the application will automatically update.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"There is another persistence strategy for storing simple data types in user defaults, called"},{"type":"text","text":" "},{"code":"appStorage","type":"codeVoice"},{"text":". It can refer to a value in user defaults by a string","type":"text"},{"type":"text","text":" "},{"text":"key:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["@ObservableState ","struct State {","  @Shared(.appStorage(\"isOn\")) var isOn = false","  \/\/ ...","}"]},{"type":"paragraph","inlineContent":[{"text":"Similar to ","type":"text"},{"type":"codeVoice","code":"fileStorage(_:decoder:encoder:)"},{"text":", upon launch of the application the initial","type":"text"},{"type":"text","text":" "},{"type":"text","text":"value of "},{"code":"isOn","type":"codeVoice"},{"text":" will be populated from user defaults, and any change to ","type":"text"},{"type":"codeVoice","code":"isOn"},{"type":"text","text":" will be automatically"},{"text":" ","type":"text"},{"type":"text","text":"persisted to user defaults. Further, if the user defaults value changes, all instances of "},{"type":"codeVoice","code":"isOn"},{"text":" ","type":"text"},{"text":"in the application will automatically update.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"That is the basics of sharing data. Be sure to see the dedicated "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"},{"type":"text","text":" article"},{"text":" ","type":"text"},{"type":"text","text":"for more detailed information."}]}],"kind":"content"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.9":{"type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.9","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.9","role":"article","abstract":[{"text":"Update your code to make use of the new ","type":"text"},{"type":"codeVoice","code":"TestStore\/send(_:assert:fileID:file:line:column:)-8877x"},{"text":"","type":"text"},{"type":"text","text":" "},{"type":"text","text":"method on "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"},{"type":"text","text":" which gives a succinct syntax for sending actions with case key paths, and"},{"text":" ","type":"text"},{"type":"text","text":"the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:)","isActive":true},{"text":" method for overriding dependencies.","type":"text"}],"kind":"article","title":"Migrating to 1.9"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/dependency(_:)":{"type":"topic","url":"\/documentation\/composablearchitecture\/reducer\/dependency(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:)","role":"symbol","abstract":[{"type":"text","text":"Places a value in the reducerâ€™s dependencies."}],"title":"dependency(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"dependency","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"_DependencyKeyWritingReducer"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer()":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","type":"topic","url":"\/documentation\/composablearchitecture\/reducer()","title":"Reducer()","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","abstract":[{"text":"Helps implement the conformance to the ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","isActive":true,"type":"reference"},{"type":"text","text":" protocol for a type."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.4":{"url":"\/documentation\/composablearchitecture\/migratingto1.4","abstract":[{"type":"text","text":"Update your code to make use of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()"},{"type":"text","text":" macro, and learn how to better leverage case key"},{"type":"text","text":" "},{"text":"paths in your features.","type":"text"}],"kind":"article","title":"Migrating to 1.4","type":"topic","role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.4"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.17":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.17","title":"Migrating to 1.17","url":"\/documentation\/composablearchitecture\/migratingto1.17","type":"topic","role":"article","kind":"article","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"@Shared"},{"type":"text","text":" property wrapper and related tools have been extracted to their own"},{"text":" ","type":"text"},{"text":"library so that they can be used in non-Composable Architecture applications. This a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"backwards compatible change, but some new deprecations have been introduced."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.7":{"type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.7","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.7","role":"article","abstract":[{"text":"Update your code to make use of the new observation tools in the library and get rid of legacy","type":"text"},{"type":"text","text":" "},{"text":"APIs such as ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","isActive":true},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore"},{"type":"text","text":", and more."}],"kind":"article","title":"Migrating to 1.7"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","title":"ComposableArchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.15":{"type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.15","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.15","role":"article","abstract":[{"type":"text","text":"The library has been completely updated for Swift 6 language mode, and now compiles in strict"},{"type":"text","text":" "},{"type":"text","text":"concurrency with no warnings or errors."}],"kind":"article","title":"Migrating to 1.15"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"role":"symbol","title":"Store","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","url":"\/documentation\/composablearchitecture\/store","navigatorTitle":[{"text":"Store","kind":"identifier"}],"abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"type":"text","text":" "},{"text":"around to views that need to interact with the application.","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore":{"type":"topic","url":"\/documentation\/composablearchitecture\/foreachstore","kind":"symbol","navigatorTitle":[{"text":"ForEachStore","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ForEachStore","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","deprecated":true,"title":"ForEachStore","role":"symbol","abstract":[{"text":"A Composable Architecture-friendly wrapper around ","type":"text"},{"type":"codeVoice","code":"ForEach"},{"text":" that simplifies working with","type":"text"},{"text":" ","type":"text"},{"text":"collections of state.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/WithViewStore":{"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WithViewStore"}],"title":"WithViewStore","role":"symbol","deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","url":"\/documentation\/composablearchitecture\/withviewstore","abstract":[{"type":"text","text":"A view helper that transforms a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true},{"type":"text","text":" into a "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","type":"reference"},{"text":" so that its state can be observed","type":"text"},{"type":"text","text":" "},{"text":"by a view builder.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"WithViewStore","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.14":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.14","type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.14","title":"Migrating to 1.14","role":"article","kind":"article","abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":" type is now officially "},{"type":"codeVoice","code":"@MainActor"},{"type":"text","text":" isolated."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.8":{"type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.8","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.8","role":"article","abstract":[{"type":"text","text":"Update your code to make use of the new capabilities of the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","isActive":true},{"type":"text","text":" macro, including automatic"},{"text":" ","type":"text"},{"text":"fulfillment of requirements for destination reducers and path reducers.","type":"text"}],"title":"Migrating to 1.8","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.12":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.12","title":"Migrating to 1.12","url":"\/documentation\/composablearchitecture\/migratingto1.12","type":"topic","role":"article","kind":"article","abstract":[{"type":"text","text":"Take advantage of custom decoding and encoding logic for the shared file storage persistence"},{"type":"text","text":" "},{"type":"text","text":"strategy, as well as beta support for Swiftâ€™s native Testing framework."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"role":"article","title":"Sharing state","url":"\/documentation\/composablearchitecture\/sharingstate","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","kind":"article","abstract":[{"text":"Learn techniques for sharing state throughout many parts of your application, and how to persist","type":"text"},{"type":"text","text":" "},{"type":"text","text":"data to user defaults, the file system, and other external mediums."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigrationGuides":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides","title":"Migration guides","url":"\/documentation\/composablearchitecture\/migrationguides","type":"topic","role":"collectionGroup","kind":"article","abstract":[{"type":"text","text":"Learn how to upgrade your application to the newest version of the Composable Architecture."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.5":{"type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.5","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.5","role":"article","abstract":[{"text":"Update your code to make use of the new ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255"},{"type":"text","text":" operation on "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":" "},{"text":"in order to improve the performance of your features and simplify the usage of navigation APIs.","type":"text"}],"kind":"article","title":"Migrating to 1.5"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.13":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.13","url":"\/documentation\/composablearchitecture\/migratingto1.13","role":"article","kind":"article","type":"topic","abstract":[{"text":"The Composable Architecture now provides first class tools for building features in UIKit,","type":"text"},{"type":"text","text":" "},{"text":"including minimal state observation, presentation and stack navigation.","type":"text"}],"title":"Migrating to 1.13"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","role":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IfLetStore"}],"navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"abstract":[{"text":"A view that safely unwraps a store of optional state in order to show one of two views.","type":"text"}],"type":"topic","title":"IfLetStore","deprecated":true,"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/teststore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"title":"TestStore","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TestStore"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestStore"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.16":{"abstract":[{"text":"The ","type":"text"},{"code":".appStorage","type":"codeVoice"},{"type":"text","text":" strategy used with "},{"type":"codeVoice","code":"@Shared"},{"type":"text","text":" now uses key-value observing instead of"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NotificationCenter"},{"text":" when possible. Learn how this may affect your code.","type":"text"}],"kind":"article","url":"\/documentation\/composablearchitecture\/migratingto1.16","title":"Migrating to 1.16","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.16","type":"topic","role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:action:)-90255":{"type":"topic","url":"\/documentation\/composablearchitecture\/store\/scope(state:action:)-90255","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","role":"symbol","abstract":[{"type":"text","text":"Scopes the store to one that exposes child state and actions."}],"kind":"symbol","title":"scope(state:action:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scope","kind":"identifier"},{"kind":"text","text":"<"},{"text":"ChildState","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ChildAction"},{"kind":"text","text":">("},{"text":"state","kind":"externalParam"},{"kind":"text","text":": "},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChildState","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"kind":"text","text":"<"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ChildAction"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"text":"<","kind":"text"},{"text":"ChildState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.17.1":{"type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.17.1","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.17.1","role":"article","abstract":[{"type":"text","text":"The Sharing library has graduated, with backwards-incompatible changes, to 2.0, and the Composable"},{"type":"text","text":" "},{"type":"text","text":"Architecture has been updated to extend support to this new version."}],"kind":"article","title":"Migrating to 1.17.1"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.6":{"type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.6","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.6","role":"article","abstract":[{"type":"text","text":"Update your code to make use of the new"},{"text":" ","type":"text"},{"code":"TestStore\/receive(_:_:timeout:assert:fileID:file:line:column:)-9jd7x","type":"codeVoice"},{"type":"text","text":" method when you need to"},{"text":" ","type":"text"},{"type":"text","text":"assert on the payload inside an action received."}],"kind":"article","title":"Migrating to 1.6"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.11":{"abstract":[{"type":"text","text":"Update your code to use the new "},{"type":"codeVoice","code":"withLock"},{"text":" method for mutating shared state from asynchronous","type":"text"},{"type":"text","text":" "},{"text":"contexts, rather than mutating the underlying wrapped value directly.","type":"text"}],"kind":"article","url":"\/documentation\/composablearchitecture\/migratingto1.11","title":"Migrating to 1.11","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.11","type":"topic","role":"article"}}}