{"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"text":" ","kind":"text"},{"kind":"attribute","text":"@"},{"text":"MainActor","preciseIdentifier":"s:ScM","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"action"},{"text":": ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"StoreTask","preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreTask","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"action","content":[{"type":"paragraph","inlineContent":[{"text":"An action.","type":"text"}]}]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"A "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreTask","isActive":true,"type":"reference"},{"type":"text","text":" that represents the lifecycle of the effect executed when"},{"type":"text","text":" "},{"text":"sending the action.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"This method returns a "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreTask","type":"reference"},{"text":", which represents the lifecycle of the effect started from","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"sending an action. You can use this value to tie the effect’s lifecycle "},{"type":"emphasis","inlineContent":[{"type":"text","text":"and"}]},{"text":" cancellation to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"an asynchronous context, such as SwiftUI’s "},{"type":"codeVoice","code":"task"},{"text":" view modifier:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":[".task { await store.send(.task).finish() }"],"syntax":"swift"},{"name":"Important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":" is not thread safe and you should only send actions to it from the"},{"type":"text","text":" "},{"type":"text","text":"main thread. If you want to send actions on background threads due to the fact that the"},{"type":"text","text":" "},{"type":"text","text":"reducer is performing computationally expensive work, then a better way to handle this is to"},{"type":"text","text":" "},{"text":"wrap that work in an ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference","isActive":true},{"type":"text","text":" that is performed on a background thread so that the"},{"text":" ","type":"text"},{"type":"text","text":"result can be fed back into the store."}]}],"type":"aside","style":"important"}]}],"variants":[{"paths":["\/documentation\/composablearchitecture\/store\/send(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","metadata":{"title":"send(_:)","modules":[{"name":"ComposableArchitecture"}],"role":"symbol","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":") -> ","kind":"text"},{"text":"StoreTask","preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV","kind":"typeIdentifier"}],"roleHeading":"Instance Method","externalID":"s:22ComposableArchitecture5StoreC4sendyAA0C4TaskVq_F"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Sends an action to the store."}],"seeAlsoSections":[{"title":"Sending actions","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:animation:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:transaction:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreTask"],"generated":true,"anchor":"Sending-actions"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","title":"ComposableArchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StoreTask":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"StoreTask","kind":"identifier"}],"title":"StoreTask","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreTask","kind":"symbol","abstract":[{"type":"text","text":"The type returned from "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:)"},{"type":"text","text":" that represents the lifecycle of the effect"},{"text":" ","type":"text"},{"type":"text","text":"started from sending an action."}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"StoreTask","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/storetask"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"topic","abstract":[],"title":"Effect","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"navigatorTitle":[{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/send(_:animation:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"send","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"text":"animation","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Animation","preciseIdentifier":"s:7SwiftUI9AnimationV","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"StoreTask","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:animation:)","url":"\/documentation\/composablearchitecture\/store\/send(_:animation:)","type":"topic","abstract":[{"text":"Sends an action to the store with a given animation.","type":"text"}],"title":"send(_:animation:)","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/send(_:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:)","url":"\/documentation\/composablearchitecture\/store\/send(_:)","kind":"symbol","title":"send(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"send","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV","text":"StoreTask"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Sends an action to the store."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"role":"symbol","title":"Store","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","url":"\/documentation\/composablearchitecture\/store","navigatorTitle":[{"text":"Store","kind":"identifier"}],"abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"type":"text","text":" "},{"text":"around to views that need to interact with the application.","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/send(_:transaction:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"kind":"text","text":"("},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"transaction"},{"kind":"text","text":": "},{"text":"Transaction","preciseIdentifier":"s:7SwiftUI11TransactionV","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"StoreTask","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:transaction:)","url":"\/documentation\/composablearchitecture\/store\/send(_:transaction:)","type":"topic","abstract":[{"type":"text","text":"Sends an action to the store with a given transaction."}],"title":"send(_:transaction:)","kind":"symbol"}}}