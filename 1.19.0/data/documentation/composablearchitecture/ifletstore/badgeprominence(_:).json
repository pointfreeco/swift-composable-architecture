{"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"role":"symbol","roleHeading":"Instance Method","externalID":"s:7SwiftUI4ViewPAAE15badgeProminenceyQrAA05BadgeE0VF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","extendedModule":"SwiftUICore","platforms":[{"name":"iOS","unavailable":false,"deprecated":false,"beta":false,"introducedAt":"17.0"},{"beta":false,"name":"macOS","introducedAt":"14.0","unavailable":false,"deprecated":false}],"title":"badgeProminence(_:)","symbolKind":"method","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"badgeProminence"},{"kind":"text","text":"("},{"preciseIdentifier":"s:7SwiftUI15BadgeProminenceV","kind":"typeIdentifier","text":"BadgeProminence"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"badgeProminence","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"prominence","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"BadgeProminence","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI15BadgeProminenceV"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":"\n"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/ifletstore\/badgeprominence(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/badgeProminence(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Inherited from "},{"code":"View.badgeProminence(_:)","type":"codeVoice"},{"type":"text","text":"."}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"role":"collectionGroup","type":"topic","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"kind":"symbol","title":"IfLetStore","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IfLetStore"}],"navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}],"deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","url":"\/documentation\/composablearchitecture\/ifletstore","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"abstract":[],"url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","title":"View Implementations","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","kind":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"kind":"symbol","title":"ComposableArchitecture","type":"topic","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"url":"\/documentation\/composablearchitecture\/swiftuideprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","role":"collectionGroup","kind":"article","title":"Deprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/badgeProminence(_:)":{"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/badgeProminence(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"badgeProminence"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI15BadgeProminenceV","text":"BadgeProminence"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"title":"badgeProminence(_:)","abstract":[],"type":"topic","url":"\/documentation\/composablearchitecture\/ifletstore\/badgeprominence(_:)","kind":"symbol"}}}