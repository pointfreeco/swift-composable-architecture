{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"receive","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"isMatching"},{"text":": (","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", ","kind":"text"},{"text":"timeout","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"duration","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:s8DurationV"},{"text":", ","kind":"text"},{"text":"assert","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"updateStateToExpectedResult","kind":"internalParam"},{"kind":"text","text":": (("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"State"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")? = nil, "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":" = ","kind":"text"},{"text":"#fileID","kind":"keyword"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"file"},{"kind":"text","text":" "},{"kind":"internalParam","text":"filePath"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"text":" = ","kind":"text"},{"kind":"keyword","text":"#filePath"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":" = "},{"text":"#line","kind":"keyword"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"column"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":" = ","kind":"text"},{"text":"#column","kind":"keyword"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"}]}],"kind":"declarations"},{"parameters":[{"name":"isMatching","content":[{"inlineContent":[{"type":"text","text":"A closure that attempts to match an action. If it returns "},{"type":"codeVoice","code":"false"},{"type":"text","text":", a test"},{"text":" ","type":"text"},{"type":"text","text":"failure is reported."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The amount of time to wait for the expected action.","type":"text"}]}],"name":"duration"},{"name":"updateStateToExpectedResult","content":[{"inlineContent":[{"text":"A closure that asserts state changed by sending the action","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the store. The mutable state sent to this closure must be modified to match the state"},{"type":"text","text":" "},{"type":"text","text":"of the store after processing the given action. Do not provide a closure if no change is"},{"type":"text","text":" "},{"type":"text","text":"expected."}],"type":"paragraph"}]},{"name":"fileID","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The fileID."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The filePath."}]}],"name":"filePath"},{"name":"line","content":[{"inlineContent":[{"text":"The line.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The column."}]}],"name":"column"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"This method is similar to "},{"type":"codeVoice","code":"receive(_:timeout:assert:fileID:file:line:column:)-8zqxk"},{"type":"text","text":", except"},{"type":"text","text":" "},{"text":"it allows you to assert that an action was received that matches a predicate instead of a case","type":"text"},{"type":"text","text":" "},{"text":"key path:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["await store.send(.buttonTapped)","await store.receive {","  guard case .response(.success) = $0 else { return false }","  return true","} assert: {","  store.count = 42","}"]},{"inlineContent":[{"text":"When the storeâ€™s ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/exhaustivity","isActive":true,"type":"reference"},{"text":" is set to anything other than ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Exhaustivity\/off","isActive":true,"type":"reference"},{"text":", a grey","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"information box will show next to the "},{"type":"codeVoice","code":"store.receive"},{"text":" line in Xcode letting you know what data","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"was in the effect that you chose not to assert on."}],"type":"paragraph"},{"inlineContent":[{"text":"If you only want to check that a particular action case was received, then you might find the","type":"text"},{"type":"text","text":" "},{"code":"receive(_:timeout:assert:fileID:file:line:column:)-53wic","type":"codeVoice"},{"text":" overload of this method more","type":"text"},{"type":"text","text":" "},{"text":"useful.","type":"text"}],"type":"paragraph"}]}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/teststore\/receive(_:timeout:assert:fileid:file:line:column:)-8xb5v"]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/receive(_:timeout:assert:fileID:file:line:column:)-8xb5v","interfaceLanguage":"swift"},"abstract":[{"text":"Asserts an action was received from an effect that matches a predicate, and asserts how the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"state changes."}],"kind":"symbol","metadata":{"role":"symbol","roleHeading":"Instance Method","title":"receive(_:timeout:assert:fileID:file:line:column:)","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"receive"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"timeout","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8DurationV","text":"Duration"},{"text":", ","kind":"text"},{"text":"assert","kind":"externalParam"},{"kind":"text","text":": (("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":")?, ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":", "},{"text":"column","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"platforms":[{"unavailable":false,"deprecated":false,"beta":false,"introducedAt":"16.0","name":"iOS"},{"introducedAt":"13.0","unavailable":false,"beta":false,"name":"macOS","deprecated":false},{"beta":false,"deprecated":false,"unavailable":false,"introducedAt":"16.0","name":"tvOS"},{"deprecated":false,"beta":false,"name":"watchOS","introducedAt":"9.0","unavailable":false}],"conformance":{"constraints":[{"code":"State","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"extendedModule":"ComposableArchitecture","modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture9TestStoreC7receive_7timeout6assert6fileID0H04line6columnySbq_XE_s8DurationVyxzKcSgs12StaticStringVAOS2utYaF"},"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"kind":"symbol","title":"ComposableArchitecture","type":"topic","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TestStore"}],"type":"topic","url":"\/documentation\/composablearchitecture\/teststore","kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","title":"TestStore","navigatorTitle":[{"text":"TestStore","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/receive(_:timeout:assert:fileID:file:line:column:)-8xb5v":{"url":"\/documentation\/composablearchitecture\/teststore\/receive(_:timeout:assert:fileid:file:line:column:)-8xb5v","title":"receive(_:timeout:assert:fileID:file:line:column:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"receive","kind":"identifier"},{"text":"((","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"timeout","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Duration","preciseIdentifier":"s:s8DurationV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"assert","kind":"externalParam"},{"kind":"text","text":": (("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?, "},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"State","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}]},"role":"symbol","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/receive(_:timeout:assert:fileID:file:line:column:)-8xb5v","type":"topic","abstract":[{"type":"text","text":"Asserts an action was received from an effect that matches a predicate, and asserts how the"},{"type":"text","text":" "},{"text":"state changes.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/exhaustivity":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/exhaustivity","role":"symbol","kind":"symbol","abstract":[{"text":"The current exhaustivity level of the test store.","type":"text"}],"title":"exhaustivity","url":"\/documentation\/composablearchitecture\/teststore\/exhaustivity","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"exhaustivity","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture12ExhaustivityO","text":"Exhaustivity"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Exhaustivity/off":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Exhaustivity\/off","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Non-exhaustive assertions."}],"title":"off","url":"\/documentation\/composablearchitecture\/exhaustivity\/off","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"off"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture12ExhaustivityO","text":"Exhaustivity"}]}}}