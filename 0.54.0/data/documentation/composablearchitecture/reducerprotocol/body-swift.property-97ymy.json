{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@"},{"kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","preciseIdentifier":"s:22ComposableArchitecture14ReducerBuilderO","text":"ReducerBuilder"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Body"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Implement this requirement when you want to incorporate the behavior of other reducers"},{"type":"text","text":" "},{"type":"text","text":"together."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Do not invoke this property directly."}]},{"style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"if your reducer implements the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol\/reduce(into:action:)-8yinq"},{"type":"text","text":" method, it will"},{"type":"text","text":" "},{"type":"text","text":"take precedence over this property, and only "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol\/reduce(into:action:)-8yinq"},{"type":"text","text":" will be called"},{"type":"text","text":" "},{"type":"text","text":"by the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":". If your reducer assembles a body from other reducers and has additional"},{"type":"text","text":" "},{"type":"text","text":"business logic it needs to layer into the system, introduce this logic into the body"},{"type":"text","text":" "},{"type":"text","text":"instead, either with "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reduce"},{"type":"text","text":", or with a separate, dedicated conformance."}]}],"type":"aside","name":"Important"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/reducerprotocol\/body-swift.property-97ymy"],"traits":[{"interfaceLanguage":"swift"}]}],"defaultImplementationsSections":[{"title":"ReducerProtocol Implementations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol\/body-swift.property-7foai"]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol\/body-swift.property-97ymy","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The content and behavior of a reducer that is composed from other reducers."}],"kind":"symbol","metadata":{"role":"symbol","title":"body","roleHeading":"Instance Property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Body"}],"symbolKind":"property","externalID":"s:22ComposableArchitecture15ReducerProtocolP4body5_BodyQzvp","required":true,"modules":[{"name":"ComposableArchitecture"}]},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol"]]},"seeAlsoSections":[{"title":"Reducer composition","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol\/Body-swift.typealias","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder"],"generated":true}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerProtocol/reduce(into:action:)-8yinq":{"defaultImplementations":1,"role":"symbol","title":"reduce(into:action:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reduce"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EffectTask","preciseIdentifier":"s:22ComposableArchitecture10EffectTaska"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Evolves the current state of the reducer to the next state."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol\/reduce(into:action:)-8yinq","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/composablearchitecture\/reducerprotocol\/reduce(into:action:)-8yinq"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerProtocol/body-swift.property-7foai":{"conformance":{"constraints":[{"type":"codeVoice","code":"_Body"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Never"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"body","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Body","preciseIdentifier":"s:22ComposableArchitecture15ReducerProtocolP4Bodya"}],"abstract":[{"type":"text","text":"A non-existent body."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol\/body-swift.property-7foai","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/reducerprotocol\/body-swift.property-7foai"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerProtocol/Body-swift.typealias":{"role":"symbol","title":"ReducerProtocol.Body","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Body"}],"abstract":[{"type":"text","text":"A type representing the body of this reducer."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol\/Body-swift.typealias","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Body"}],"url":"\/documentation\/composablearchitecture\/reducerprotocol\/body-swift.typealias"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerProtocol":{"role":"symbol","title":"ReducerProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReducerProtocol"}],"abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask"},{"type":"text","text":"s should be executed later by the store, if"},{"type":"text","text":" "},{"type":"text","text":"any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReducerProtocol"}],"url":"\/documentation\/composablearchitecture\/reducerprotocol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EffectTask":{"role":"symbol","title":"EffectTask","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"EffectTask"}],"abstract":[{"type":"text","text":"A type that encapsulates a unit of work that can be run in the outside world, and can feed"},{"type":"text","text":" "},{"type":"text","text":"actions back to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":"."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EffectTask"}],"url":"\/documentation\/composablearchitecture\/effecttask"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"role":"symbol","title":"Store","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Store"}],"url":"\/documentation\/composablearchitecture\/store"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerProtocol/body-swift.property-97ymy":{"defaultImplementations":1,"role":"symbol","title":"body","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Body"}],"abstract":[{"type":"text","text":"The content and behavior of a reducer that is composed from other reducers."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol\/body-swift.property-97ymy","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/composablearchitecture\/reducerprotocol\/body-swift.property-97ymy"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reduce":{"role":"symbol","title":"Reduce","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reduce"}],"abstract":[{"type":"text","text":"A type-erased reducer that invokes the given "},{"type":"codeVoice","code":"reduce"},{"type":"text","text":" function."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reduce","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Reduce"}],"url":"\/documentation\/composablearchitecture\/reduce"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerBuilder":{"role":"symbol","title":"ReducerBuilder","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReducerBuilder"}],"abstract":[{"type":"text","text":"A result builder for combining reducers into a single reducer by running each, one after the"},{"type":"text","text":" "},{"type":"text","text":"other, and merging their effects."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReducerBuilder"}],"url":"\/documentation\/composablearchitecture\/reducerbuilder"}}}