{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()"]]},"seeAlsoSections":[{"title":"Change tracking","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar"],"generated":true,"anchor":"Change-tracking"}],"topicSections":[{"anchor":"Operators","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID\/==(_:_:)"],"generated":true,"title":"Operators"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID\/init()"],"generated":true,"anchor":"Initializers","title":"Initializers"},{"anchor":"Instance-Methods","title":"Instance Methods","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID\/hash(into:)"]},{"anchor":"Default-Implementations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID\/Equatable-Implementations"],"title":"Default Implementations","generated":true}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/observablestateid"]}],"metadata":{"title":"ObservableStateID","modules":[{"name":"ComposableArchitecture"}],"navigatorTitle":[{"text":"ObservableStateID","kind":"identifier"}],"roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:22ComposableArchitecture17ObservableStateIDV","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ObservableStateID"}]},"abstract":[{"type":"text","text":"A unique identifier for a observed value."}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/SH","doc:\/\/ComposableArchitecture\/s8SendableP"],"title":"Conforms To"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ObservableStateID"}],"platforms":["macOS"]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableStateID":{"type":"topic","url":"\/documentation\/composablearchitecture\/observablestateid","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableStateID","kind":"identifier"}],"abstract":[{"text":"A unique identifier for a observed value.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ObservableStateID"}],"title":"ObservableStateID","role":"symbol","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableStateID/init()":{"title":"init()","kind":"symbol","abstract":[],"role":"symbol","url":"\/documentation\/composablearchitecture\/observablestateid\/init()","fragments":[{"kind":"identifier","text":"init"},{"text":"()","kind":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID\/init()"},"doc://ComposableArchitecture/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/SQ"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableStateID/==(_:_:)":{"title":"==(_:_:)","kind":"symbol","abstract":[],"role":"symbol","url":"\/documentation\/composablearchitecture\/observablestateid\/==(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"preciseIdentifier":"s:22ComposableArchitecture17ObservableStateIDV","text":"ObservableStateID","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:22ComposableArchitecture17ObservableStateIDV","text":"ObservableStateID","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID\/==(_:_:)"},"doc://ComposableArchitecture/s8SendableP":{"identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableStateID/Equatable-Implementations":{"title":"Equatable Implementations","kind":"article","abstract":[],"role":"collectionGroup","url":"\/documentation\/composablearchitecture\/observablestateid\/equatable-implementations","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID\/Equatable-Implementations"},"doc://ComposableArchitecture/SH":{"identifier":"doc:\/\/ComposableArchitecture\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"topic","abstract":[],"title":"Effect","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"navigatorTitle":[{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","title":"ComposableArchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState()":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","kind":"symbol","abstract":[{"type":"text","text":"Defines and implements conformance of the Observable protocol."}],"fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableState"},{"text":"()","kind":"text"}],"title":"ObservableState()","type":"topic","url":"\/documentation\/composablearchitecture\/observablestate()","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/reducer\/state","abstract":[{"type":"text","text":"A type that holds the current state of the reducer."}],"required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"State"}],"title":"State"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateRegistrar":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar","type":"topic","role":"symbol","url":"\/documentation\/composablearchitecture\/observationstateregistrar","abstract":[{"type":"text","text":"Provides storage for tracking and access to data changes."}],"navigatorTitle":[{"kind":"identifier","text":"ObservationStateRegistrar"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservationStateRegistrar"}],"title":"ObservationStateRegistrar"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableStateID/hash(into:)":{"url":"\/documentation\/composablearchitecture\/observablestateid\/hash(into:)","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"kind":"text","text":"("},{"text":"into","kind":"externalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Hasher","kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV"},{"text":")","kind":"text"}],"title":"hash(into:)","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID\/hash(into:)"}}}