{"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"chartLineStyleScale","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Domain","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Range","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"domain","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Domain","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"range"},{"kind":"text","text":": "},{"text":"Range","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"role":"symbol","extendedModule":"SwiftUICore","externalID":"s:7SwiftUI4ViewP6ChartsE19chartLineStyleScale6domain5rangeQrqd___qd_0_tAD0H6DomainRd__AD0H5RangeRd_0_AA06StrokeG0V11VisualValueRtd_0_r0_lF::SYNTHESIZED::s:22ComposableArchitecture11SwitchStoreV","roleHeading":"Instance Method","platforms":[{"introducedAt":"16.0","deprecated":false,"unavailable":false,"name":"iOS","beta":false},{"deprecated":false,"name":"macOS","introducedAt":"13.0","unavailable":false,"beta":false},{"beta":false,"name":"tvOS","deprecated":false,"introducedAt":"16.0","unavailable":false},{"introducedAt":"9.0","name":"watchOS","unavailable":false,"beta":false,"deprecated":false}],"title":"chartLineStyleScale(domain:range:)","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/chartLineStyleScale(domain:range:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Inherited from "},{"code":"View.chartLineStyleScale(domain:range:)","type":"codeVoice"},{"type":"text","text":"."}],"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/switchstore\/chartlinestylescale(domain:range:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"nonisolated"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"chartLineStyleScale","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Domain"},{"text":", ","kind":"text"},{"text":"Range","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"domain","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Domain"},{"kind":"text","text":", "},{"kind":"externalParam","text":"range"},{"kind":"text","text":": "},{"text":"Range","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Domain","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"ScaleDomain","preciseIdentifier":"s:6Charts11ScaleDomainP"},{"text":", ","kind":"text"},{"text":"Range","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:6Charts10ScaleRangeP","text":"ScaleRange","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Range"},{"text":".","kind":"text"},{"text":"VisualValue","kind":"typeIdentifier","preciseIdentifier":"s:6Charts10ScaleRangeP11VisualValueQa"},{"text":" == ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI11StrokeStyleV","kind":"typeIdentifier","text":"StrokeStyle"},{"text":"\n","kind":"text"}]}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article","title":"Deprecations","url":"\/documentation\/composablearchitecture\/swiftuideprecations","type":"topic","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","title":"SwiftUI Integration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"role":"collectionGroup","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"CaseLet","kind":"identifier"}],"role":"symbol","title":"CaseLet","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","deprecated":true,"url":"\/documentation\/composablearchitecture\/caselet","navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"type":"text","text":"."}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","title":"ComposableArchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/View-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations","title":"View Implementations","url":"\/documentation\/composablearchitecture\/switchstore\/view-implementations","role":"collectionGroup","abstract":[],"kind":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"url":"\/documentation\/composablearchitecture\/switchstore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","type":"topic","abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","isActive":true,"type":"reference"},{"type":"text","text":" views."}],"kind":"symbol","deprecated":true,"navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"role":"symbol","title":"SwitchStore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SwitchStore"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/chartLineStyleScale(domain:range:)":{"type":"topic","url":"\/documentation\/composablearchitecture\/switchstore\/chartlinestylescale(domain:range:)","title":"chartLineStyleScale(domain:range:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/chartLineStyleScale(domain:range:)","kind":"symbol","abstract":[],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"chartLineStyleScale"},{"kind":"text","text":"<"},{"text":"Domain","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Range","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"domain"},{"kind":"text","text":": "},{"text":"Domain","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"range","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Range","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}]}}}