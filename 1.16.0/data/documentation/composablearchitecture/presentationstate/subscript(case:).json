{"metadata":{"role":"symbol","fragments":[{"text":"subscript","kind":"keyword"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Case"},{"text":">(","kind":"text"},{"text":"case","kind":"externalParam"},{"text":" _: ","kind":"text"},{"text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"text":"Case","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Case","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"roleHeading":"Instance Subscript","symbolKind":"subscript","title":"subscript(case:)","externalID":"s:22ComposableArchitecture17PresentationStateV4caseqd__Sgs7KeyPathCy9CasePaths0H0VyxGAJyqd__GG_tcAH0H8PathableRzluip","modules":[{"name":"ComposableArchitecture"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/subscript(case:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/presentationstate\/subscript(case:)"]}],"sections":[],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Presents()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Presents()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState"]]},"abstract":[{"text":"Accesses the value associated with the given case for reading and writing.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Case"},{"kind":"text","text":">("},{"text":"case","kind":"externalParam"},{"kind":"text","text":" "},{"text":"path","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Case","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Case"},{"kind":"text","text":"? "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A8PathableP","text":"CasePathable"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"keyword"},{"text":" }","kind":"text"}]}],"kind":"declarations"},{"content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"If you use the techniques of tree-based navigation (see ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","isActive":true},{"type":"text","text":"), then"},{"text":" ","type":"text"},{"type":"text","text":"you will have a single enum that determines the destinations your feature can navigate to,"},{"text":" ","type":"text"},{"type":"text","text":"and you will hold onto that state using the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Presents()"},{"text":" macro:","type":"text"}]},{"type":"codeListing","code":["@ObservableState","struct State {","  @Presents var destination: Destination.State","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"destination","type":"codeVoice"},{"text":" property has a projected value of ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","isActive":true,"type":"reference"},{"type":"text","text":", which gives you a"},{"text":" ","type":"text"},{"type":"text","text":"succinct syntax for modifying the data in a particular case of the "},{"code":"Destination","type":"codeVoice"},{"text":" enum, like","type":"text"},{"type":"text","text":" "},{"type":"text","text":"so:"}]},{"type":"codeListing","syntax":"swift","code":["state.$destination[case: \\.detail]?.alert = AlertState {","  Text(\"Delete?\")","}"]},{"name":"Important","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Accessing the wrong case will result in a runtime warning and test failure."}]}],"style":"important"}],"kind":"content"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/subscript(case:)":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/subscript(case:)","role":"symbol","title":"subscript(case:)","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"<"},{"text":"Case","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"case","kind":"externalParam"},{"text":" _: ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Case"},{"text":">) -> ","kind":"text"},{"text":"Case","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/composablearchitecture\/presentationstate\/subscript(case:)","type":"topic","abstract":[{"type":"text","text":"Accesses the value associated with the given case for reading and writing."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","role":"symbol","title":"Effect","navigatorTitle":[{"text":"Effect","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Effect","kind":"identifier"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"role":"collectionGroup","title":"Navigation","abstract":[{"text":"Learn how to use the navigation tools in the library, including how to best model your domains, how","type":"text"},{"type":"text","text":" "},{"text":"to integrate features in the reducer and view layers, and how to write tests.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TreeBasedNavigation":{"kind":"article","abstract":[{"type":"text","text":"Learn about tree-based navigation, that is navigation modeled with optionals and enums, including"},{"type":"text","text":" "},{"text":"how to model your domains, how to integrate features, how to test your features, and more.","type":"text"}],"role":"article","title":"Tree-based navigation","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","type":"topic","url":"\/documentation\/composablearchitecture\/treebasednavigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q","role":"symbol","abstract":[{"text":"Embeds a child reducer in a parent domain that works on an optional property of parent state.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ifLet"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"DestinationState"},{"kind":"text","text":", "},{"text":"DestinationAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Destination"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"text":", ","kind":"text"},{"text":"PresentationState","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV"},{"kind":"text","text":"<"},{"text":"DestinationState","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"kind":"externalParam","text":"action"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO","text":"PresentationAction"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"DestinationAction"},{"text":">>, ","kind":"text"},{"kind":"externalParam","text":"destination"},{"kind":"text","text":": () -> "},{"text":"Destination","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","preciseIdentifier":"s:22ComposableArchitecture7ReducerP","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","kind":"typeIdentifier","text":"Action"},{"text":">\n","kind":"text"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/reducer\/iflet(_:action:destination:fileid:filepath:line:column:)-4ub6q","type":"topic","title":"ifLet(_:action:destination:fileID:filePath:line:column:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Presents()":{"kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/presents()","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Presents"},{"text":"()","kind":"text"}],"abstract":[{"text":"Wraps a property with ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState"},{"text":" and observes it.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Presents()","title":"Presents()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/presentationstate","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PresentationState"}],"type":"topic","navigatorTitle":[{"text":"PresentationState","kind":"identifier"}],"title":"PresentationState","abstract":[{"type":"text","text":"A property wrapper for state that can be presented."}]}}}