{"sections":[],"metadata":{"role":"symbol","title":"receive(_:_:timeout:assert:fileID:file:line:column:)","externalID":"s:22ComposableArchitecture9TestStoreC7receive__7timeout6assert6fileID0H04line6columnys7KeyPathCy13CasePathsCore0N0Vyq_GAOyqd__GG_qd__s8DurationVyxzKcSgs12StaticStringVAWS2utYaAM0N8PathableR_SQRd__lF","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"State","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"symbolKind":"method","extendedModule":"ComposableArchitecture","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"receive","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_SendableCaseKeyPath","preciseIdentifier":"s:22ComposableArchitecture20_SendableCaseKeyPatha","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:s8DurationV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"assert"},{"kind":"text","text":": (("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"roleHeading":"Instance Method","platforms":[{"name":"iOS","beta":false,"deprecated":false,"unavailable":false,"introducedAt":"16.0"},{"name":"macOS","beta":false,"deprecated":false,"unavailable":false,"introducedAt":"13.0"},{"deprecated":false,"name":"tvOS","introducedAt":"16.0","unavailable":false,"beta":false},{"deprecated":false,"name":"watchOS","introducedAt":"9.0","unavailable":false,"beta":false}],"modules":[{"name":"ComposableArchitecture"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/teststore\/receive(_:_:timeout:assert:fileid:file:line:column:)-7hli0"]}],"abstract":[{"type":"text","text":"Asserts an action was received matching a case path with a specific payload, and asserts how"},{"type":"text","text":" "},{"type":"text","text":"the state changes."}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"receive","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"actionCase","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"_SendableCaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture20_SendableCaseKeyPatha"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"timeout","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"duration","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:s8DurationV"},{"text":", ","kind":"text"},{"text":"assert","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"updateStateToExpectedResult","kind":"internalParam"},{"text":": ((","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")? = nil, ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":" = ","kind":"text"},{"text":"#fileID","kind":"keyword"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"filePath","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":" = ","kind":"text"},{"text":"#filePath","kind":"keyword"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":" = ","kind":"text"},{"text":"#line","kind":"keyword"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":" = ","kind":"text"},{"text":"#column","kind":"keyword"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"CasePathable","kind":"typeIdentifier","preciseIdentifier":"s:13CasePathsCore0A8PathableP"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Equatable","kind":"typeIdentifier","preciseIdentifier":"s:SQ"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A case path identifying the case of an action to enum to receive"}],"type":"paragraph"}],"name":"actionCase"},{"content":[{"inlineContent":[{"type":"text","text":"The value to match in the action."}],"type":"paragraph"}],"name":"value"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The amount of time to wait for the expected action."}]}],"name":"duration"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that asserts state changed by sending the action"},{"type":"text","text":" "},{"type":"text","text":"to the store. The mutable state sent to this closure must be modified to match the state"},{"type":"text","text":" "},{"type":"text","text":"of the store after processing the given action. Do not provide a closure if no change is"},{"type":"text","text":" "},{"type":"text","text":"expected."}]}],"name":"updateStateToExpectedResult"},{"content":[{"inlineContent":[{"type":"text","text":"The fileID."}],"type":"paragraph"}],"name":"fileID"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The filePath."}]}],"name":"filePath"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The line."}]}],"name":"line"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The column.","type":"text"}]}],"name":"column"}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is similar to "},{"type":"codeVoice","code":"receive(_:timeout:assert:fileID:file:line:column:)-53wic"},{"type":"text","text":", except"},{"type":"text","text":" "},{"type":"text","text":"it allows you to assert on the value inside the action too."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It can be useful when asserting on delegate actions sent by a child feature:"}]},{"code":["await store.receive(\\.delegate.success, \"Hello!\")"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When the storeâ€™s "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/exhaustivity"},{"type":"text","text":" is set to anything other than "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Exhaustivity\/off"},{"type":"text","text":", a grey"},{"type":"text","text":" "},{"type":"text","text":"information box will show next to the "},{"type":"codeVoice","code":"store.receive"},{"type":"text","text":" line in Xcode letting you know what data"},{"type":"text","text":" "},{"type":"text","text":"was in the effect that you chose not to assert on."}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/receive(_:_:timeout:assert:fileID:file:line:column:)-7hli0"},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/exhaustivity":{"abstract":[{"type":"text","text":"The current exhaustivity level of the test store."}],"url":"\/documentation\/composablearchitecture\/teststore\/exhaustivity","title":"exhaustivity","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/exhaustivity","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"exhaustivity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Exhaustivity","preciseIdentifier":"s:22ComposableArchitecture12ExhaustivityO"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Exhaustivity/off":{"title":"off","role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Exhaustivity\/off","url":"\/documentation\/composablearchitecture\/exhaustivity\/off","abstract":[{"text":"Non-exhaustive assertions.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"off","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture12ExhaustivityO","text":"Exhaustivity","kind":"typeIdentifier"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","type":"topic","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"navigatorTitle":[{"text":"TestStore","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","kind":"symbol","title":"TestStore","abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"url":"\/documentation\/composablearchitecture\/teststore","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestStore","kind":"identifier"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/receive(_:_:timeout:assert:fileID:file:line:column:)-7hli0":{"kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"receive","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_SendableCaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture20_SendableCaseKeyPatha"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"timeout","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:s8DurationV"},{"text":", ","kind":"text"},{"text":"assert","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")?, ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"title":"receive(_:_:timeout:assert:fileID:file:line:column:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/receive(_:_:timeout:assert:fileID:file:line:column:)-7hli0","url":"\/documentation\/composablearchitecture\/teststore\/receive(_:_:timeout:assert:fileid:file:line:column:)-7hli0","role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"State","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"type":"text","text":"Asserts an action was received matching a case path with a specific payload, and asserts how"},{"type":"text","text":" "},{"type":"text","text":"the state changes."}]}}}