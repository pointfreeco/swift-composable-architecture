{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationStackStore"]]},"kind":"symbol","identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationStackStore\/init(_:root:destination:fileID:filePath:line:column:)-6ztki","interfaceLanguage":"swift"},"metadata":{"platforms":[{"deprecated":false,"beta":false,"deprecatedAt":"9999.0","introducedAt":"16.0","name":"iOS","unavailable":false,"message":"Use 'NavigationStack.init(path:)' with a store scoped from observable state, instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Replacing-NavigationStackStore-with-NavigationStack]"},{"deprecated":false,"name":"macOS","beta":false,"introducedAt":"13.0","message":"Use 'NavigationStack.init(path:)' with a store scoped from observable state, instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Replacing-NavigationStackStore-with-NavigationStack]","unavailable":false,"deprecatedAt":"9999.0"},{"unavailable":false,"deprecatedAt":"9999.0","name":"tvOS","message":"Use 'NavigationStack.init(path:)' with a store scoped from observable state, instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Replacing-NavigationStackStore-with-NavigationStack]","introducedAt":"16.0","beta":false,"deprecated":false},{"deprecatedAt":"9999.0","name":"watchOS","beta":false,"unavailable":false,"deprecated":false,"introducedAt":"9.0","message":"Use 'NavigationStack.init(path:)' with a store scoped from observable state, instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Replacing-NavigationStackStore-with-NavigationStack]"}],"externalID":"s:22ComposableArchitecture20NavigationStackStoreV_4root11destination6fileID0H4Path4line6columnACyxq_q0_AA06SwitchE0Vyxq_qd__GGAA0E0CyAA0D5StateVyxGAA0D6ActionOyxq_GG_q0_yXEqd__xcs12StaticStringVAXS2utcALRs1_7SwiftUI4ViewRd__lufc","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"text":"D","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture10StackStateV","text":"StackState"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"StackAction","preciseIdentifier":"s:22ComposableArchitecture11StackActionO"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">>, "},{"text":"root","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":", "},{"kind":"externalParam","text":"destination"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":") -> ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"filePath","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"column","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":")"}],"roleHeading":"Initializer","role":"symbol","symbolKind":"init","title":"init(_:root:destination:fileID:filePath:line:column:)","modules":[{"name":"ComposableArchitecture"}]},"abstract":[{"text":"Creates a navigation stack with a store of stack state and actions.","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","preciseIdentifier":"s:ScM","kind":"attribute"},{"text":" ","kind":"text"},{"text":"init","kind":"keyword"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"D"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"store","kind":"internalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture10StackStateV","kind":"typeIdentifier","text":"StackState","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction","text":"StackAction","preciseIdentifier":"s:22ComposableArchitecture11StackActionO"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":">>, ","kind":"text"},{"kind":"attribute","text":"@"},{"text":"ViewBuilder","preciseIdentifier":"s:7SwiftUI11ViewBuilderV","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"externalParam","text":"root"},{"text":": () -> ","kind":"text"},{"kind":"typeIdentifier","text":"Root"},{"text":", ","kind":"text"},{"kind":"attribute","text":"@"},{"text":"ViewBuilder","kind":"attribute","preciseIdentifier":"s:7SwiftUI11ViewBuilderV"},{"text":" ","kind":"text"},{"kind":"externalParam","text":"destination"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":" = "},{"text":"#fileID","kind":"keyword"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"filePath"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#filePath"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"#line","kind":"keyword"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":" = ","kind":"text"},{"text":"#column","kind":"keyword"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Destination"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","text":"SwitchStore","preciseIdentifier":"s:22ComposableArchitecture11SwitchStoreV","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":" : "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A store of stack state and actions to power this stack.","type":"text"}]}],"name":"store"},{"name":"root","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The view to display when the stack is empty."}]}]},{"content":[{"inlineContent":[{"text":"A view builder that defines a view to display when an element is appended to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the stackâ€™s state. The closure takes one argument, which is the initial enum state to"},{"type":"text","text":" "},{"text":"present. You can switch over this value and use ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"text":" views to handle each case.","type":"text"}],"type":"paragraph"}],"name":"destination"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The fileID.","type":"text"}]}],"name":"fileID"},{"name":"filePath","content":[{"type":"paragraph","inlineContent":[{"text":"The filePath.","type":"text"}]}]},{"name":"line","content":[{"inlineContent":[{"text":"The line.","type":"text"}],"type":"paragraph"}]},{"name":"column","content":[{"type":"paragraph","inlineContent":[{"text":"The column.","type":"text"}]}]}]}],"variants":[{"paths":["\/documentation\/composablearchitecture\/navigationstackstore\/init(_:root:destination:fileid:filepath:line:column:)-6ztki"],"traits":[{"interfaceLanguage":"swift"}]}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use 'NavigationStack.init(path:)' with a store scoped from observable state, instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Replacing-NavigationStackStore-with-NavigationStack]"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackState":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","kind":"symbol","abstract":[{"text":"A list of data representing the content of a navigation stack.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StackState"}],"url":"\/documentation\/composablearchitecture\/stackstate","navigatorTitle":[{"text":"StackState","kind":"identifier"}],"title":"StackState"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"url":"\/documentation\/composablearchitecture\/caselet","type":"topic","abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","type":"reference"},{"type":"text","text":"."}],"title":"CaseLet","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CaseLet","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"deprecated":true,"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"url":"\/documentation\/composablearchitecture\/swiftuideprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","role":"collectionGroup","kind":"article","title":"Deprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"url":"\/documentation\/composablearchitecture\/switchstore","type":"topic","abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"type":"text","text":" views."}],"title":"SwitchStore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SwitchStore","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"deprecated":true,"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/NavigationStackStore":{"role":"symbol","kind":"symbol","abstract":[{"text":"A navigation stack that is driven by a store.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"NavigationStackStore"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"NavigationStackStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationStackStore","url":"\/documentation\/composablearchitecture\/navigationstackstore","title":"NavigationStackStore","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"kind":"symbol","title":"ComposableArchitecture","type":"topic","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackAction":{"navigatorTitle":[{"text":"StackAction","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A wrapper type for actions that can be presented in a navigation stack."}],"title":"StackAction","url":"\/documentation\/composablearchitecture\/stackaction","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StackAction","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/NavigationStackStore/init(_:root:destination:fileID:filePath:line:column:)-6ztki":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationStackStore\/init(_:root:destination:fileID:filePath:line:column:)-6ztki","abstract":[{"type":"text","text":"Creates a navigation stack with a store of stack state and actions."}],"deprecated":true,"type":"topic","url":"\/documentation\/composablearchitecture\/navigationstackstore\/init(_:root:destination:fileid:filepath:line:column:)-6ztki","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"text":"D","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"StackState","preciseIdentifier":"s:22ComposableArchitecture10StackStateV"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","text":"StackAction","preciseIdentifier":"s:22ComposableArchitecture11StackActionO"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":">>, ","kind":"text"},{"kind":"externalParam","text":"root"},{"text":": () -> ","kind":"text"},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":", "},{"text":"destination","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"D"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"text":")","kind":"text"}],"kind":"symbol","title":"init(_:root:destination:fileID:filePath:line:column:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"role":"collectionGroup","type":"topic","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","title":"Store","abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"kind":"symbol","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"url":"\/documentation\/composablearchitecture\/store","navigatorTitle":[{"kind":"identifier","text":"Store"}]}}}