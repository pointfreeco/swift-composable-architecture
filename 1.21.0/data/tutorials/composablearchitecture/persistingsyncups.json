{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps"},"kind":"project","schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/$volume","doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Persisting-sync-ups-to-disk"]],"modules":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/What-is-SyncUps-","projects":[{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#A-tour-of-SyncUps","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#Create-the-SyncUps-project","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Lists-of-sync-ups","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#Domain-models"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#SyncUpsList-feature"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#A-handy-debugging-tool"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps"},{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps#Writing-your-first-test","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/New-sync-up-form","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Sync-up-form-basics","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-an-approach","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-a-better-approach","kind":"task"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Removing-attendees","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Adding-attendees","kind":"task"}]}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Presenting-the-sync-up-form","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-domains-together","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-views-together","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list","kind":"task"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Adding-a-sync-up"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Non-exhaustive-testing"}]}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Persisting-sync-ups-to-disk","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Persisting-data-to-disk"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Testing-persistence"}]}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Sync-up-detail","projects":[{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail#Create-the-sync-up-detail","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail"},{"sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Editing-the-sync-up"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Deleting-the-sync-up"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#More-concise-domain-modeling"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp"},{"sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail#Testing-the-edit-flow"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Navigating-to-sync-up-detail","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-feature","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-view","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Navigating-to-the-detail","kind":"task"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#The-meeting-screen","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#Navigate-to-a-meeting","kind":"task"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation#Deleting-a-sync-up"}]}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Record-meeting","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Create-a-new-feature","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Navigating-to-the-record-meeting-feature","kind":"task"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#A-basic-timer","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Controlling-dependencies-early","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Ending-the-meeting-early","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Testing-the-timer","kind":"task"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission","kind":"task"}]}]}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps"},"variants":[{"paths":["\/tutorials\/composablearchitecture\/persistingsyncups"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[{"kind":"hero","title":"Persisting sync-ups","estimatedTimeInMinutes":5,"chapter":"Persisting sync-ups to disk","content":[{"inlineContent":[{"text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some","type":"text"},{"text":" ","type":"text"},{"text":"persistence. This will involve using the “shared state” tools from the library, such as","type":"text"},{"text":" ","type":"text"},{"code":"@Shared","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"fileStorage","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"tasks":[{"anchor":"Persisting-data-to-disk","stepsSection":[{"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Go back to the SyncUpsList.swift file, and start by applying the ","type":"text"},{"code":"@Shared","type":"codeVoice"},{"text":" property wrapper","type":"text"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"code":"syncUps","type":"codeVoice"},{"text":" field.","type":"text"}]}],"caption":[{"style":"note","name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Our changes will not compile right now, but they will soon."}]}]}],"media":null,"type":"step","code":"PersistingSyncUps-01-code-0001.swift"},{"inlineContent":[{"type":"text","text":"This signifies that this value will be shared with other parts of the application. There are"},{"type":"text","text":" "},{"type":"text","text":"many ways to share state, such as explicitly passing it in from a parent feature, or"},{"type":"text","text":" "},{"type":"text","text":"persisting it to an external system. See the dedicated article "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"},{"type":"text","text":" for more"},{"type":"text","text":" "},{"type":"text","text":"information on all of the various strategies."}],"type":"paragraph"},{"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Further customize the "},{"code":"@Shared","type":"codeVoice"},{"type":"text","text":" property wrapper with a persistence strategy. The library"},{"type":"text","text":" "},{"type":"text","text":"comes with a few strategies you can use, but the most appropriate here is "},{"code":"fileStorage","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"since we are trying to save a complex data structure."}]}],"caption":[],"media":null,"type":"step","code":"PersistingSyncUps-01-code-0002.swift"},{"inlineContent":[{"type":"text","text":"The "},{"code":"fileStorage","type":"codeVoice"},{"type":"text","text":" persistence strategy saves data to disk anytime the value in "},{"code":"@Shared","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"changes, but it spaces the saves out a bit so as to not thrash the file system with every"},{"type":"text","text":" "},{"type":"text","text":"single change."}],"type":"paragraph"},{"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"fileStorage","type":"codeVoice"},{"type":"text","text":" persistence strategy"},{"type":"text","text":" "},{"type":"text","text":"needs to be provided a URL for where to save the data. Add an extension to "},{"code":"URL","type":"codeVoice"},{"type":"text","text":" at the"},{"type":"text","text":" "},{"type":"text","text":"bottom of the file to define such a URL, and then provide it to the "},{"code":".fileStorage","type":"codeVoice"},{"type":"text","text":" value."}]}],"caption":[],"media":null,"type":"step","code":"PersistingSyncUps-01-code-0003.swift"},{"inlineContent":[{"type":"text","text":"While the property is now compiling, there are several compiler errors where we were"},{"type":"text","text":" "},{"type":"text","text":"previously mutating the "},{"type":"codeVoice","code":"syncUps"},{"type":"text","text":" property, each with a diagnostic that tells us the changes"},{"type":"text","text":" "},{"type":"text","text":"we must make, which is to mutate through the projected value’s "},{"type":"codeVoice","code":"withLock"},{"type":"text","text":" method."}],"type":"paragraph"},{"runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Update each direct mutation to use "},{"code":"withLock","type":"codeVoice"},{"type":"text","text":" on the projected value of the "},{"code":"syncUps","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"property, instead."}],"type":"paragraph"}],"caption":[{"name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"For more information on why "},{"type":"codeVoice","code":"withLock"},{"type":"text","text":" is required, see"},{"type":"text","text":" "},{"identifier":"https:\/\/swiftpackageindex.com\/pointfreeco\/swift-sharing\/main\/documentation\/sharing\/mutatingsharedstate","type":"reference","isActive":true},{"type":"text","text":"."}]}],"type":"aside","style":"note"}],"media":null,"type":"step","code":"PersistingSyncUps-01-code-0004.swift"},{"inlineContent":[{"type":"text","text":"It is worth noting that "},{"type":"codeVoice","code":"fileStorage"},{"type":"text","text":" only"},{"type":"text","text":" "},{"type":"text","text":"works with "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" data types, and earlier in the tutorial when we added models to"},{"type":"text","text":" "},{"type":"text","text":"Models.swift we made them codable from the beginning."}],"type":"paragraph"},{"runtimePreview":null,"content":[{"inlineContent":[{"text":"Before moving on, we can still make this better.","type":"text"},{"text":" ","type":"text"},{"text":"It is possible to provide some type safety between the URL provided and the expected","type":"text"},{"text":" ","type":"text"},{"text":"type of data to be stored on disk, and make usage more concise. See","type":"text"},{"text":" ","type":"text"},{"overridingTitleInlineContent":[{"type":"text","text":"type-safe keys"}],"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState#Type-safe-keys","type":"reference","overridingTitle":"type-safe keys"},{"text":" for more information.","type":"text"}],"type":"paragraph"}],"caption":[],"media":null,"type":"step","code":"PersistingSyncUps-01-code-0005.swift"},{"runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"We have one more error in the preview of the "},{"type":"codeVoice","code":"SyncUpsListView"},{"type":"text","text":". To prepare its list of"},{"type":"text","text":" "},{"type":"text","text":"sync-ups we can initialize a "},{"type":"codeVoice","code":"@Shared"},{"type":"text","text":" property to the "},{"type":"codeVoice","code":".syncUps"},{"type":"text","text":" persistence strategy and"},{"type":"text","text":" "},{"type":"text","text":"provide a mock."}],"type":"paragraph"}],"caption":[],"media":null,"type":"step","code":"PersistingSyncUps-01-code-0006.swift"},{"inlineContent":[{"type":"text","text":"With that last change the project should be compiling. To confirm that persistence works"},{"type":"text","text":" "},{"type":"text","text":"we need to run the app in the simulator, but we haven’t done that yet in this tutorial."},{"type":"text","text":" "},{"type":"text","text":"To do that we need to update the entry point of the app to use the "},{"type":"codeVoice","code":"SyncUpsListView"},{"type":"text","text":"."}],"type":"paragraph"},{"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Go to SyncUpsApp.swift and update the root view to be a "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" wrapping a"},{"type":"text","text":" "},{"type":"codeVoice","code":"SyncUpsListView"},{"type":"text","text":"."}]}],"caption":[{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We construct the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true},{"type":"text","text":" as a static so that it is"},{"type":"text","text":" "},{"type":"text","text":"initialized only one time, and so that it is not created while running Xcode previews."}]}],"name":"Note"}],"media":null,"type":"step","code":"PersistingSyncUps-01-code-0007.swift"},{"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Run the app in the simulator, add a sync-up, and then relaunch the application to see that"},{"type":"text","text":" "},{"type":"text","text":"it restores the previously created sync-up. This shows that data is persisting."}]}],"caption":[],"media":"PersistingSyncUps-01-video-0008.mov","type":"step","code":null}],"contentSection":[{"mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To persist state to an external system you must make use of the "},{"type":"codeVoice","code":"@Shared"},{"type":"text","text":" property wrapper"},{"type":"text","text":" "},{"type":"text","text":"with a persistence strategy."}]}],"kind":"contentAndMedia"}],"title":"Persisting data to disk"},{"anchor":"Testing-persistence","stepsSection":[{"inlineContent":[{"type":"text","text":"Before anything, we need to fix a few compiler errors. We’ll start with the initialization"},{"type":"text","text":" "},{"type":"text","text":"of the sync-ups in the "},{"type":"codeVoice","code":"deletion()"},{"type":"text","text":" test."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"To provide a specific shared value to a test, we can do the same as we did in the preview,"},{"type":"text","text":" "},{"type":"text","text":"where we pointed the "},{"type":"codeVoice","code":"@Shared"},{"type":"text","text":" property wrapper to the "},{"type":"codeVoice","code":".syncUps"},{"type":"text","text":" persistence strategy and"},{"type":"text","text":" "},{"type":"text","text":"provided a default."}],"type":"paragraph"},{"runtimePreview":null,"code":"PersistingSyncUps-02-code-0001.swift","media":null,"content":[{"inlineContent":[{"type":"text","text":"Go to "},{"type":"codeVoice","code":"SyncUpsListTests.swift"},{"type":"text","text":" and provide a default sync-ups value to the "},{"type":"codeVoice","code":"@Shared"},{"type":"text","text":" "},{"type":"text","text":"property wrapper that includes the sync-up we will delete."}],"type":"paragraph"}],"type":"step","caption":[{"name":"Note","content":[{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"fileStorage"},{"text":" persistence strategy uses an internal dependency for changing how","type":"text"},{"text":" ","type":"text"},{"text":"files are written to the disk and loaded from disk. In tests the dependency will forgo any","type":"text"},{"text":" ","type":"text"},{"text":"interaction with the file system and instead write data to a ","type":"text"},{"type":"codeVoice","code":"[URL: Data]"},{"text":" dictionary, and","type":"text"},{"text":" ","type":"text"},{"text":"load data from that dictionary. That emulates how the file system works, but without","type":"text"},{"text":" ","type":"text"},{"text":"persisting any data to the global file system.","type":"text"}],"type":"paragraph"}],"style":"note","type":"aside"}]},{"runtimePreview":null,"code":"PersistingSyncUps-02-code-0002.swift","media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Next, we need to update the way we mutate the sync-ups by using the "},{"type":"codeVoice","code":"withLock"},{"type":"text","text":" method on its"},{"type":"text","text":" "},{"type":"text","text":"projected value."}]}],"type":"step","caption":[]},{"inlineContent":[{"type":"text","text":"With that, we should be in compiling order."}],"type":"paragraph"},{"runtimePreview":null,"code":null,"media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Run the test suite to see that everything still passes."}]}],"type":"step","caption":[]},{"runtimePreview":null,"code":"PersistingSyncUps-02-code-0003.swift","media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Make a change to the "},{"type":"codeVoice","code":"addSyncUp"},{"type":"text","text":" test to make an incorrect assertion."}]}],"type":"step","caption":[]},{"runtimePreview":null,"code":null,"media":null,"content":[{"inlineContent":[{"text":"Run the test suite again to see that you get a test failure with a message that tells you","type":"text"},{"text":" ","type":"text"},{"text":"exactly what went wrong.","type":"text"}],"type":"paragraph"}],"type":"step","caption":[]},{"inlineContent":[{"text":"This shows that the exhaustive testing tools of the Composable Architecture continue to work","type":"text"},{"text":" ","type":"text"},{"text":"exactly the same, even when dealing with globally shared state that is persisted to disk. Be","type":"text"},{"text":" ","type":"text"},{"text":"sure to read the full article ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","type":"reference","isActive":true},{"text":" for more information about shared state and","type":"text"},{"text":" ","type":"text"},{"text":"persistence.","type":"text"}],"type":"paragraph"}],"contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Testing state that is held in "},{"code":"@Shared","type":"codeVoice"},{"type":"text","text":" with "},{"code":".fileStorage","type":"codeVoice"},{"type":"text","text":" persistence works"},{"type":"text","text":" "},{"type":"text","text":"exactly like regular state without "},{"code":"@Shared","type":"codeVoice"},{"type":"text","text":". The"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","isActive":true},{"type":"text","text":" forces you to exhaustively prove how all state changes."}]}],"mediaPosition":"trailing"}],"title":"Testing persistence"}],"kind":"tasks"},{"kind":"callToAction","abstract":[{"type":"text","text":"The “sync-up detail” screen shows all the information of a sync-up, and has many actions that"},{"type":"text","text":" "},{"type":"text","text":"can take place in the screen. The user can edit the sync-up, or start a new meeting in the sync"},{"type":"text","text":" "},{"type":"text","text":"up, or drill-down to a past meeting, or even delete the meeting."}],"title":"Sync-up detail","featuredEyebrow":"Tutorial","action":{"type":"reference","overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail","overridingTitle":"Get started","isActive":true}}],"metadata":{"role":"project","title":"Persisting sync-ups","categoryPathComponent":"BuildingSyncUps","category":"Building SyncUps"},"references":{"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation":{"title":"Testing the add sync-up flow","type":"topic","kind":"project","estimatedTime":"10min","role":"project","url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation","abstract":[{"type":"text","text":"We have now integrated two moderately complex features, the "},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" and "},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":", and"},{"type":"text","text":" "},{"type":"text","text":"so its time to write some tests. This will give us the opportunity to prove that the features"},{"type":"text","text":" "},{"type":"text","text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less"},{"type":"text","text":" "},{"type":"text","text":"fragile."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingListOfSyncUps":{"role":"project","url":"\/tutorials\/composablearchitecture\/testinglistofsyncups","type":"topic","abstract":[{"type":"text","text":"The SyncUpsList feature we have built so far isn’t very complex. In fact, it only has one"},{"type":"text","text":" "},{"type":"text","text":"primary action, that of deleting sync-ups from its collection. However, it can be good practice"},{"type":"text","text":" "},{"type":"text","text":"to test new features as you add them, and in the future we will have much more complicated"},{"type":"text","text":" "},{"type":"text","text":"behavior to test."}],"title":"Testing the list of sync-ups","estimatedTime":"5min","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps","kind":"project"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingNavigation":{"kind":"project","url":"\/tutorials\/composablearchitecture\/testingnavigation","type":"topic","role":"project","title":"Testing navigation","estimatedTime":"10min","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation","abstract":[{"type":"text","text":"We have now implemented a navigation stack at the root of our application, and integrated"},{"type":"text","text":" "},{"type":"text","text":"3 features into the stack: the "},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" feature, the "},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":" feature, and the"},{"type":"text","text":" "},{"type":"codeVoice","code":"MeetingView"},{"type":"text","text":". Some of these features have quite complex logic binding them together, such as"},{"type":"text","text":" "},{"type":"text","text":"when one deletes a sync-up from the detail screen it should pop the screen off the stack."}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm":{"estimatedTime":"15min","role":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm","title":"Sync-up form","kind":"project","type":"topic","url":"\/tutorials\/composablearchitecture\/syncupform","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"type":"text","text":" "},{"type":"text","text":"feature to make things a little more interesting."}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps","title":"What is SyncUps?","url":"\/tutorials\/composablearchitecture\/whatissyncups","kind":"project","type":"topic","abstract":[{"type":"text","text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a"},{"type":"text","text":" "},{"type":"text","text":"recreation of Apple’s Scrumdinger demo application."}],"estimatedTime":"5min","role":"project"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation#Navigate-to-a-meeting":{"kind":"section","title":"Navigate to a meeting","type":"section","abstract":[{"type":"text","text":"Now that we have a navigation stack in place we can start navigating to other features in the"},{"type":"text","text":" "},{"type":"text","text":"application. The simplest is the meeting screen, which allows you to see the details of a"},{"type":"text","text":" "},{"type":"text","text":"previous recorded meeting."}],"url":"\/tutorials\/composablearchitecture\/meetingnavigation#Navigate-to-a-meeting","role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#Navigate-to-a-meeting"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#Domain-models":{"abstract":[{"type":"text","text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the"},{"type":"text","text":" "},{"type":"text","text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as"},{"type":"text","text":" "},{"type":"text","text":"the app evolves."}],"url":"\/tutorials\/composablearchitecture\/listsofsyncups#Domain-models","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#Domain-models","type":"section","kind":"section","title":"Domain models","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Lists-of-sync-ups":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Lists-of-sync-ups","title":"Lists of sync-ups","kind":"article","role":"article","url":"\/tutorials\/buildingsyncups\/lists-of-sync-ups","abstract":[],"type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#A-basic-timer":{"type":"section","role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/implementingtimer#A-basic-timer","abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#A-basic-timer","kind":"section","title":"A basic timer"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpDetail#Testing-the-edit-flow":{"type":"section","title":"Testing the edit flow","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail#Testing-the-edit-flow","kind":"section","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":" feature has slowly become quite complex. It now handles two forms of"},{"type":"text","text":" "},{"type":"text","text":"navigation (an alert and sheet), it models navigation state with a single enum, and it"},{"type":"text","text":" "},{"type":"text","text":"updates the parent feature via a shared property. It’s about time we got some test"},{"type":"text","text":" "},{"type":"text","text":"coverage on this feature so we can be sure it works as we expect, and so that we can make future"},{"type":"text","text":" "},{"type":"text","text":"changes with confidence."}],"role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/testingsyncupdetail#Testing-the-edit-flow"},"PersistingSyncUps-02-code-0003.swift":{"type":"file","content":["import ComposableArchitecture","import Testing","","@testable import SyncUps","","@MainActor","struct SyncUpsListTests {","  @Test","  func addSyncUp() async {","    let store = TestStore(initialState: SyncUpsList.State()) {","      SyncUpsList()","    } withDependencies: {","      $0.uuid = .incrementing","    }","","    await store.send(.addSyncUpButtonTapped) {","      $0.addSyncUp = SyncUpForm.State(","        syncUp: SyncUp(id: SyncUp.ID(0))","      )","    }","","    let editedSyncUp = SyncUp(","      id: SyncUp.ID(0),","      attendees: [","        Attendee(id: Attendee.ID(), name: \"Blob\"),","        Attendee(id: Attendee.ID(), name: \"Blob Jr.\"),","      ],","      title: \"Point-Free morning sync\"","    )","    await store.send(.addSyncUp(.presented(.set(\\.syncUp, editedSyncUp)))) {","      $0.addSyncUp?.syncUp = editedSyncUp","    }","","    await store.send(.confirmAddButtonTapped) {","      $0.addSyncUp = nil","      \/\/ $0.$syncUps.withLock { $0 = [editedSyncUp] }","    }","  }","","  @Test","  func deletion() async {","    @Shared(.syncUps) var syncUps = [","      SyncUp(","        id: SyncUp.ID(),","        title: \"Point-Free Morning Sync\"","      )","    ]","    let store = TestStore(","      initialState: SyncUpsList.State()","    ) {","      SyncUpsList()","    }","","    await store.send(.onDelete([0])) {","      $0.$syncUps.withLock { $0 = [] }","    }","  }","}"],"syntax":"swift","fileType":"swift","fileName":"SyncUpsListTests.swift","identifier":"PersistingSyncUps-02-code-0003.swift","highlights":[{"line":36}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"type":"topic","role":"article","abstract":[{"type":"text","text":"Learn techniques for sharing state throughout many parts of your application, and how to persist"},{"type":"text","text":" "},{"type":"text","text":"data to user defaults, the file system, and other external mediums."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","title":"Sharing state","kind":"article","url":"\/documentation\/composablearchitecture\/sharingstate"},"https://swiftpackageindex.com/pointfreeco/swift-sharing/main/documentation/sharing/mutatingsharedstate":{"titleInlineContent":[{"type":"text","text":"Mutating shared state"}],"type":"link","identifier":"https:\/\/swiftpackageindex.com\/pointfreeco\/swift-sharing\/main\/documentation\/sharing\/mutatingsharedstate","title":"Mutating shared state","url":"https:\/\/swiftpackageindex.com\/pointfreeco\/swift-sharing\/main\/documentation\/sharing\/mutatingsharedstate"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/What-is-SyncUps-":{"url":"\/tutorials\/buildingsyncups\/what-is-syncups-","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/What-is-SyncUps-","kind":"article","abstract":[],"title":"What is SyncUps?","role":"article","type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature","type":"topic","title":"The RecordMeeting feature","kind":"project","role":"project","estimatedTime":"5min","url":"\/tutorials\/composablearchitecture\/recordmeetingfeature","abstract":[{"type":"text","text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will"},{"type":"text","text":" "},{"type":"text","text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer."}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Form-focus-a-better-approach":{"kind":"section","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"type":"text","text":" "},{"type":"text","text":"feature to make things a little more interesting."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-a-better-approach","url":"\/tutorials\/composablearchitecture\/syncupform#Form-focus-a-better-approach","role":"pseudoSymbol","title":"Form focus: a better approach","type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation#Adding-a-sync-up":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Adding-a-sync-up","type":"section","url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation#Adding-a-sync-up","kind":"section","role":"pseudoSymbol","title":"Adding a sync-up","abstract":[{"type":"text","text":"We have now integrated two moderately complex features, the "},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" and "},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":", and"},{"type":"text","text":" "},{"type":"text","text":"so its time to write some tests. This will give us the opportunity to prove that the features"},{"type":"text","text":" "},{"type":"text","text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less"},{"type":"text","text":" "},{"type":"text","text":"fragile."}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Sync-up-form-basics":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Sync-up-form-basics","title":"Sync-up form basics","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"type":"text","text":" "},{"type":"text","text":"feature to make things a little more interesting."}],"role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/syncupform#Sync-up-form-basics","type":"section"},"PersistingSyncUps-01-code-0002.swift":{"type":"file","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  @ObservableState","  struct State: Equatable {","    @Presents var addSyncUp: SyncUpForm.State?","    @Shared(.fileStorage()) var syncUps: IdentifiedArrayOf<SyncUp> = []","  }","  enum Action {","    case addSyncUpButtonTapped","    case addSyncUp(PresentationAction<SyncUpForm.Action>)","    case confirmAddButtonTapped","    case discardButtonTapped","    case onDelete(IndexSet)","    case syncUpTapped(id: SyncUp.ID)","  }","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .addSyncUpButtonTapped:","        state.addSyncUp = SyncUpForm.State(syncUp: SyncUp(id: SyncUp.ID()))","        return .none","","      case .addSyncUp:","        return .none","","      case .confirmAddButtonTapped:","        guard let newSyncUp = state.addSyncUp?.syncUp","        else { return .none }","        state.addSyncUp = nil","        state.syncUps.append(newSyncUp)","        return .none","","      case .discardButtonTapped:","        state.addSyncUp = nil","        return .none","","      case let .onDelete(indexSet):","        state.syncUps.remove(atOffsets: indexSet)","        return .none","","      case .syncUpTapped:","        return .none","      }","    }","    .ifLet(\\.$addSyncUp, action: \\.addSyncUp) {","      SyncUpForm()","    }","  }","}"],"syntax":"swift","fileType":"swift","fileName":"SyncUpsList.swift","identifier":"PersistingSyncUps-01-code-0002.swift","highlights":[{"line":9}]},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Persisting-sync-ups-to-disk":{"role":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Persisting-sync-ups-to-disk","url":"\/tutorials\/buildingsyncups\/persisting-sync-ups-to-disk","abstract":[],"title":"Persisting sync-ups to disk","kind":"article","type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingNavigation#Deleting-a-sync-up":{"url":"\/tutorials\/composablearchitecture\/testingnavigation#Deleting-a-sync-up","type":"section","role":"pseudoSymbol","title":"Deleting a sync-up","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation#Deleting-a-sync-up","abstract":[{"type":"text","text":"We have now implemented a navigation stack at the root of our application, and integrated"},{"type":"text","text":" "},{"type":"text","text":"3 features into the stack: the "},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" feature, the "},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":" feature, and the"},{"type":"text","text":" "},{"type":"codeVoice","code":"MeetingView"},{"type":"text","text":". Some of these features have quite complex logic binding them together, such as"},{"type":"text","text":" "},{"type":"text","text":"when one deletes a sync-up from the detail screen it should pop the screen off the stack."}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetail#Create-the-sync-up-detail":{"type":"section","title":"Create the sync-up detail","role":"pseudoSymbol","kind":"section","url":"\/tutorials\/composablearchitecture\/syncupdetail#Create-the-sync-up-detail","abstract":[{"type":"text","text":"The “sync-up detail” screen shows all the information of a sync-up, and has many actions that"},{"type":"text","text":" "},{"type":"text","text":"can take place in the screen. The user can edit the sync-up, or start a new meeting in the sync"},{"type":"text","text":" "},{"type":"text","text":"up, or drill-down to a past meeting, or even delete the meeting."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail#Create-the-sync-up-detail"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps#Create-the-SyncUps-project":{"type":"section","title":"Create the SyncUps project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#Create-the-SyncUps-project","role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/whatissyncups#Create-the-SyncUps-project","abstract":[{"type":"text","text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a"},{"type":"text","text":" "},{"type":"text","text":"recreation of Apple’s Scrumdinger demo application."}],"kind":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps":{"estimatedTime":"10min","type":"topic","role":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps","title":"Lists of sync-ups","abstract":[{"type":"text","text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the"},{"type":"text","text":" "},{"type":"text","text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as"},{"type":"text","text":" "},{"type":"text","text":"the app evolves."}],"url":"\/tutorials\/composablearchitecture\/listsofsyncups","kind":"project"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature#Navigating-to-the-record-meeting-feature":{"type":"section","title":"Navigating to the record meeting feature","abstract":[{"type":"text","text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will"},{"type":"text","text":" "},{"type":"text","text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer."}],"url":"\/tutorials\/composablearchitecture\/recordmeetingfeature#Navigating-to-the-record-meeting-feature","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Navigating-to-the-record-meeting-feature","role":"pseudoSymbol","kind":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#Editing-the-sync-up":{"url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#Editing-the-sync-up","role":"pseudoSymbol","kind":"section","type":"section","abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"text":" ","type":"text"},{"text":"deleting the sync-up. This will force us to face a number of common problems in app development","type":"text"},{"text":" ","type":"text"},{"text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns.","type":"text"}],"title":"Editing the sync-up","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Editing-the-sync-up"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps":{"kind":"project","abstract":[{"text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some","type":"text"},{"text":" ","type":"text"},{"text":"persistence. This will involve using the “shared state” tools from the library, such as","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"@Shared"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"fileStorage"},{"text":".","type":"text"}],"estimatedTime":"5min","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps","role":"project","title":"Persisting sync-ups","url":"\/tutorials\/composablearchitecture\/persistingsyncups"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","type":"topic","role":"overview","title":"Building SyncUps","abstract":[{"type":"text","text":"The SyncUps application is a recreation of one of Apple’s more interesting demo applications,"},{"type":"text","text":" "},{"type":"text","text":"Scrumdinger. We recreate it from scratch using the Composable Architecture, with a focus on"},{"type":"text","text":" "},{"type":"text","text":"domain modeling, controlling dependencies, and testability."}],"kind":"overview","url":"\/tutorials\/buildingsyncups"},"PersistingSyncUps-02-code-0001.swift":{"fileName":"SyncUpsListTests.swift","syntax":"swift","fileType":"swift","content":["import ComposableArchitecture","import Testing","","@testable import SyncUps","","@MainActor","struct SyncUpsListTests {","  @Test","  func addSyncUp() async {","    let store = TestStore(initialState: SyncUpsList.State()) {","      SyncUpsList()","    } withDependencies: {","      $0.uuid = .incrementing","    }","","    await store.send(.addSyncUpButtonTapped) {","      $0.addSyncUp = SyncUpForm.State(","        syncUp: SyncUp(id: SyncUp.ID(0))","      )","    }","","    let editedSyncUp = SyncUp(","      id: SyncUp.ID(0),","      attendees: [","        Attendee(id: Attendee.ID(), name: \"Blob\"),","        Attendee(id: Attendee.ID(), name: \"Blob Jr.\"),","      ],","      title: \"Point-Free morning sync\"","    )","    await store.send(.addSyncUp(.presented(.set(\\.syncUp, editedSyncUp)))) {","      $0.addSyncUp?.syncUp = editedSyncUp","    }","","    await store.send(.confirmAddButtonTapped) {","      $0.addSyncUp = nil","      $0.syncUps = [editedSyncUp]","    }","  }","","  @Test","  func deletion() async {","    @Shared(.syncUps) var syncUps = [","      SyncUp(","        id: SyncUp.ID(),","        title: \"Point-Free Morning Sync\"","      )","    ]","    let store = TestStore(","      initialState: SyncUpsList.State()","    ) {","      SyncUpsList()","    }","","    await store.send(.onDelete([0])) {","      $0.syncUps = []","    }","  }","}"],"highlights":[{"line":42},{"line":43},{"line":44},{"line":45},{"line":47},{"line":48},{"line":49}],"type":"file","identifier":"PersistingSyncUps-02-code-0001.swift"},"PersistingSyncUps-01-code-0006.swift":{"highlights":[{"line":14},{"line":18}],"type":"file","fileType":"swift","syntax":"swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  \/\/ ...","}","","struct SyncUpsListView: View {","  \/\/ ...","}","","#Preview {","  @Shared(.syncUps) var syncUps = [.mock]","  NavigationStack {","    SyncUpsListView(","      store: Store(","        initialState: SyncUpsList.State()","      ) {","        SyncUpsList()","          ._printChanges()","      }","    )","  }","}"],"fileName":"SyncUpsList.swift","identifier":"PersistingSyncUps-01-code-0006.swift"},"PersistingSyncUps-01-code-0007.swift":{"content":["import ComposableArchitecture","import SwiftUI","","@main","struct SyncUpsApp: App {","  @MainActor","  static let store = Store(initialState: SyncUpsList.State()) {","    SyncUpsList()","  }","","  var body: some Scene {","    WindowGroup {","      NavigationStack {","        SyncUpsListView(store: Self.store)","      }","    }","  }","}"],"highlights":[],"syntax":"swift","fileType":"swift","type":"file","identifier":"PersistingSyncUps-01-code-0007.swift","fileName":"SyncUpsApp.swift"},"PersistingSyncUps-01-code-0001.swift":{"type":"file","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  @ObservableState","  struct State: Equatable {","    @Presents var addSyncUp: SyncUpForm.State?","    @Shared var syncUps: IdentifiedArrayOf<SyncUp> = []","  }","  enum Action {","    case addSyncUpButtonTapped","    case addSyncUp(PresentationAction<SyncUpForm.Action>)","    case confirmAddButtonTapped","    case discardButtonTapped","    case onDelete(IndexSet)","    case syncUpTapped(id: SyncUp.ID)","  }","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .addSyncUpButtonTapped:","        state.addSyncUp = SyncUpForm.State(syncUp: SyncUp(id: SyncUp.ID()))","        return .none","","      case .addSyncUp:","        return .none","","      case .confirmAddButtonTapped:","        guard let newSyncUp = state.addSyncUp?.syncUp","        else { return .none }","        state.addSyncUp = nil","        state.syncUps.append(newSyncUp)","        return .none","","      case .discardButtonTapped:","        state.addSyncUp = nil","        return .none","","      case let .onDelete(indexSet):","        state.syncUps.remove(atOffsets: indexSet)","        return .none","","      case .syncUpTapped:","        return .none","      }","    }","    .ifLet(\\.$addSyncUp, action: \\.addSyncUp) {","      SyncUpForm()","    }","  }","}"],"syntax":"swift","fileType":"swift","fileName":"SyncUpsList.swift","identifier":"PersistingSyncUps-01-code-0001.swift","highlights":[{"line":9}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#SyncUpsList-feature":{"type":"section","url":"\/tutorials\/composablearchitecture\/listsofsyncups#SyncUpsList-feature","abstract":[{"type":"text","text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the"},{"type":"text","text":" "},{"type":"text","text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as"},{"type":"text","text":" "},{"type":"text","text":"the app evolves."}],"title":"SyncUpsList feature","kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#SyncUpsList-feature"},"PersistingSyncUps-01-code-0005.swift":{"highlights":[{"line":9},{"line":54},{"line":55},{"line":56},{"line":57}],"content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  @ObservableState","  struct State: Equatable {","    @Presents var addSyncUp: SyncUpForm.State?","    @Shared(.syncUps) var syncUps","  }","  enum Action {","    case addSyncUpButtonTapped","    case addSyncUp(PresentationAction<SyncUpForm.Action>)","    case confirmAddButtonTapped","    case discardButtonTapped","    case onDelete(IndexSet)","    case syncUpTapped(id: SyncUp.ID)","  }","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .addSyncUpButtonTapped:","        state.addSyncUp = SyncUpForm.State(syncUp: SyncUp(id: SyncUp.ID()))","        return .none","","      case .addSyncUp:","        return .none","","      case .confirmAddButtonTapped:","        guard let newSyncUp = state.addSyncUp?.syncUp","        else { return .none }","        state.addSyncUp = nil","        state.$syncUps.withLock { _ = $0.append(syncUp) }","        return .none","","      case .discardButtonTapped:","        state.addSyncUp = nil","        return .none","","      case let .onDelete(indexSet):","        state.$syncUps.withLock { $0.remove(atOffsets: indexSet) }","        return .none","","      case .syncUpTapped:","        return .none","      }","    }","    .ifLet(\\.$addSyncUp, action: \\.addSyncUp) {","      SyncUpForm()","    }","  }","}","","extension SharedKey where Self == FileStorageKey<IdentifiedArrayOf<SyncUp>>.Default {","  static var syncUps: Self {","    Self[.fileStorage(.documentsDirectory.appending(component: \"sync-ups.json\")), default: []]","  }","}"],"identifier":"PersistingSyncUps-01-code-0005.swift","syntax":"swift","fileName":"SyncUpsList.swift","type":"file","fileType":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Integrating-the-feature-views-together":{"abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"type":"text","text":" "},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"type":"text","text":" "},{"type":"text","text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}],"kind":"section","type":"section","title":"Integrating the feature views together","url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Integrating-the-feature-views-together","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-views-together","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Testing-the-timer":{"role":"pseudoSymbol","abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}],"title":"Testing the timer","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/implementingtimer#Testing-the-timer","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Testing-the-timer"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp":{"kind":"project","url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup","abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"type":"text","text":" "},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"type":"text","text":" "},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}],"type":"topic","estimatedTime":"30min","role":"project","title":"Editing and deleting a sync-up","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingSpeechRecognizer":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer","kind":"project","role":"project","url":"\/tutorials\/composablearchitecture\/implementingspeechrecognizer","type":"topic","title":"Adding a speech recognizer","abstract":[{"text":"We have just one feature left to implement, and it’s one of the most complicated ones. We need","type":"text"},{"text":" ","type":"text"},{"text":"to use Apple’s ","type":"text"},{"code":"SFSpeechRecognizer","type":"codeVoice"},{"text":" API to ask the user for permission to transcribe their","type":"text"},{"text":" ","type":"text"},{"text":"audio, and then start a speech recognition task to live transcribe the meeting while it is","type":"text"},{"text":" ","type":"text"},{"text":"in progress.","type":"text"}],"estimatedTime":"10min"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm#Removing-attendees":{"url":"\/tutorials\/composablearchitecture\/testingsyncupform#Removing-attendees","abstract":[{"type":"text","text":"We now have a moderately complex feature for editing the details of a sync-up, the "},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":" "},{"type":"text","text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come"},{"type":"text","text":" "},{"type":"text","text":"face-to-face with dependencies for the first time in this tutorial."}],"role":"pseudoSymbol","title":"Removing attendees","kind":"section","type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Removing-attendees"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingListOfSyncUps#Writing-your-first-test":{"title":"Writing your first test","kind":"section","abstract":[{"text":"The SyncUpsList feature we have built so far isn’t very complex. In fact, it only has one","type":"text"},{"text":" ","type":"text"},{"text":"primary action, that of deleting sync-ups from its collection. However, it can be good practice","type":"text"},{"text":" ","type":"text"},{"text":"to test new features as you add them, and in the future we will have much more complicated","type":"text"},{"text":" ","type":"text"},{"text":"behavior to test.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps#Writing-your-first-test","type":"section","url":"\/tutorials\/composablearchitecture\/testinglistofsyncups#Writing-your-first-test","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Ending-the-meeting-early":{"abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}],"type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Ending-the-meeting-early","title":"Ending the meeting early","role":"pseudoSymbol","kind":"section","url":"\/tutorials\/composablearchitecture\/implementingtimer#Ending-the-meeting-early"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Record-meeting":{"type":"topic","role":"article","kind":"article","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Record-meeting","url":"\/tutorials\/buildingsyncups\/record-meeting","title":"Record meeting"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Creating-the-app-view":{"title":"Creating the app view","abstract":[{"type":"text","text":"We will wrap the application built so far in a "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" so that we can navigate to"},{"type":"text","text":" "},{"type":"text","text":"the detail screen. To do this we will create a new root-level feature that will be responsible"},{"type":"text","text":" "},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"type":"section","role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Creating-the-app-view","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-view","kind":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps#Testing-persistence":{"abstract":[{"type":"text","text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some"},{"type":"text","text":" "},{"type":"text","text":"persistence. This will involve using the “shared state” tools from the library, such as"},{"type":"text","text":" "},{"type":"codeVoice","code":"@Shared"},{"type":"text","text":" and "},{"type":"codeVoice","code":"fileStorage"},{"type":"text","text":"."}],"title":"Testing persistence","kind":"section","url":"\/tutorials\/composablearchitecture\/persistingsyncups#Testing-persistence","type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Testing-persistence","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Form-focus-an-approach":{"url":"\/tutorials\/composablearchitecture\/syncupform#Form-focus-an-approach","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"type":"text","text":" "},{"type":"text","text":"feature to make things a little more interesting."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-an-approach","title":"Form focus: an approach","role":"pseudoSymbol","kind":"section","type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpDetail":{"abstract":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"SyncUpDetail"},{"text":" feature has slowly become quite complex. It now handles two forms of","type":"text"},{"text":" ","type":"text"},{"text":"navigation (an alert and sheet), it models navigation state with a single enum, and it","type":"text"},{"text":" ","type":"text"},{"text":"updates the parent feature via a shared property. It’s about time we got some test","type":"text"},{"text":" ","type":"text"},{"text":"coverage on this feature so we can be sure it works as we expect, and so that we can make future","type":"text"},{"text":" ","type":"text"},{"text":"changes with confidence.","type":"text"}],"title":"Testing the sync-up detail","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail","url":"\/tutorials\/composablearchitecture\/testingsyncupdetail","estimatedTime":"10min","type":"topic","kind":"project","role":"project"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"navigatorTitle":[{"kind":"identifier","text":"Store"}],"url":"\/documentation\/composablearchitecture\/store","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","kind":"symbol","title":"Store","role":"symbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation":{"abstract":[{"type":"text","text":"We will wrap the application built so far in a "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" so that we can navigate to"},{"type":"text","text":" "},{"type":"text","text":"the detail screen. To do this we will create a new root-level feature that will be responsible"},{"type":"text","text":" "},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"estimatedTime":"20min","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation","role":"project","title":"Navigating to a sync-up detail","kind":"project","url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState#Type-safe-keys":{"abstract":[],"kind":"section","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState#Type-safe-keys","title":"Type-safe keys","url":"\/documentation\/composablearchitecture\/sharingstate#Type-safe-keys"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#A-handy-debugging-tool":{"type":"section","url":"\/tutorials\/composablearchitecture\/listsofsyncups#A-handy-debugging-tool","role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#A-handy-debugging-tool","abstract":[{"type":"text","text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the"},{"type":"text","text":" "},{"type":"text","text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as"},{"type":"text","text":" "},{"type":"text","text":"the app evolves."}],"title":"A handy debugging tool","kind":"section"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/New-sync-up-form":{"title":"New sync-up form","role":"article","type":"topic","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/New-sync-up-form","url":"\/tutorials\/buildingsyncups\/new-sync-up-form","kind":"article"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Navigating-to-sync-up-detail":{"url":"\/tutorials\/buildingsyncups\/navigating-to-sync-up-detail","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Navigating-to-sync-up-detail","kind":"article","abstract":[],"title":"Navigating to sync-up detail","role":"article","type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#Deleting-the-sync-up":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Deleting-the-sync-up","abstract":[{"text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and","type":"text"},{"text":" ","type":"text"},{"text":"deleting the sync-up. This will force us to face a number of common problems in app development","type":"text"},{"text":" ","type":"text"},{"text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns.","type":"text"}],"title":"Deleting the sync-up","role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#Deleting-the-sync-up","kind":"section","type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetail":{"abstract":[{"type":"text","text":"The “sync-up detail” screen shows all the information of a sync-up, and has many actions that"},{"type":"text","text":" "},{"type":"text","text":"can take place in the screen. The user can edit the sync-up, or start a new meeting in the sync"},{"type":"text","text":" "},{"type":"text","text":"up, or drill-down to a past meeting, or even delete the meeting."}],"role":"project","type":"topic","url":"\/tutorials\/composablearchitecture\/syncupdetail","kind":"project","estimatedTime":"5min","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail","title":"Sync-up detail"},"PersistingSyncUps-01-code-0003.swift":{"type":"file","syntax":"swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  @ObservableState","  struct State: Equatable {","    @Presents var addSyncUp: SyncUpForm.State?","    @Shared(.fileStorage(.syncUps)) var syncUps: IdentifiedArrayOf<SyncUp> = []","  }","  enum Action {","    case addSyncUpButtonTapped","    case addSyncUp(PresentationAction<SyncUpForm.Action>)","    case confirmAddButtonTapped","    case discardButtonTapped","    case onDelete(IndexSet)","    case syncUpTapped(id: SyncUp.ID)","  }","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .addSyncUpButtonTapped:","        state.addSyncUp = SyncUpForm.State(syncUp: SyncUp(id: SyncUp.ID()))","        return .none","","      case .addSyncUp:","        return .none","","      case .confirmAddButtonTapped:","        guard let newSyncUp = state.addSyncUp?.syncUp","        else { return .none }","        state.addSyncUp = nil","        state.syncUps.append(newSyncUp)","        return .none","","      case .discardButtonTapped:","        state.addSyncUp = nil","        return .none","","      case let .onDelete(indexSet):","        state.syncUps.remove(atOffsets: indexSet)","        return .none","","      case .syncUpTapped:","        return .none","      }","    }","    .ifLet(\\.$addSyncUp, action: \\.addSyncUp) {","      SyncUpForm()","    }","  }","}","","extension URL {","  static let syncUps = Self.documentsDirectory.appending(component: \"sync-ups.json\")","}"],"highlights":[{"line":9},{"line":53},{"line":54},{"line":55},{"line":56}],"fileType":"swift","fileName":"SyncUpsList.swift","identifier":"PersistingSyncUps-01-code-0003.swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps#Persisting-data-to-disk":{"abstract":[{"type":"text","text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some"},{"type":"text","text":" "},{"type":"text","text":"persistence. This will involve using the “shared state” tools from the library, such as"},{"type":"text","text":" "},{"type":"codeVoice","code":"@Shared"},{"type":"text","text":" and "},{"type":"codeVoice","code":"fileStorage"},{"type":"text","text":"."}],"title":"Persisting data to disk","role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Persisting-data-to-disk","url":"\/tutorials\/composablearchitecture\/persistingsyncups#Persisting-data-to-disk","type":"section","kind":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation","role":"project","estimatedTime":"5min","title":"Navigating to a meeting","abstract":[{"type":"text","text":"Now that we have a navigation stack in place we can start navigating to other features in the"},{"type":"text","text":" "},{"type":"text","text":"application. The simplest is the meeting screen, which allows you to see the details of a"},{"type":"text","text":" "},{"type":"text","text":"previous recorded meeting."}],"url":"\/tutorials\/composablearchitecture\/meetingnavigation","type":"topic","kind":"project"},"PersistingSyncUps-02-code-0002.swift":{"syntax":"swift","fileType":"swift","fileName":"SyncUpsListTests.swift","highlights":[{"line":36},{"line":55}],"identifier":"PersistingSyncUps-02-code-0002.swift","content":["import ComposableArchitecture","import Testing","","@testable import SyncUps","","@MainActor","struct SyncUpsListTests {","  @Test","  func addSyncUp() async {","    let store = TestStore(initialState: SyncUpsList.State()) {","      SyncUpsList()","    } withDependencies: {","      $0.uuid = .incrementing","    }","","    await store.send(.addSyncUpButtonTapped) {","      $0.addSyncUp = SyncUpForm.State(","        syncUp: SyncUp(id: SyncUp.ID(0))","      )","    }","","    let editedSyncUp = SyncUp(","      id: SyncUp.ID(0),","      attendees: [","        Attendee(id: Attendee.ID(), name: \"Blob\"),","        Attendee(id: Attendee.ID(), name: \"Blob Jr.\"),","      ],","      title: \"Point-Free morning sync\"","    )","    await store.send(.addSyncUp(.presented(.set(\\.syncUp, editedSyncUp)))) {","      $0.addSyncUp?.syncUp = editedSyncUp","    }","","    await store.send(.confirmAddButtonTapped) {","      $0.addSyncUp = nil","      $0.$syncUps.withLock { $0 = [editedSyncUp] }","    }","  }","","  @Test","  func deletion() async {","    @Shared(.syncUps) var syncUps = [","      SyncUp(","        id: SyncUp.ID(),","        title: \"Point-Free Morning Sync\"","      )","    ]","    let store = TestStore(","      initialState: SyncUpsList.State()","    ) {","      SyncUpsList()","    }","","    await store.send(.onDelete([0])) {","      $0.$syncUps.withLock { $0 = [] }","    }","  }","}"],"type":"file"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm":{"type":"topic","title":"Testing the sync-up form","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm","role":"project","url":"\/tutorials\/composablearchitecture\/testingsyncupform","abstract":[{"type":"text","text":"We now have a moderately complex feature for editing the details of a sync-up, the "},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":" "},{"type":"text","text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come"},{"type":"text","text":" "},{"type":"text","text":"face-to-face with dependencies for the first time in this tutorial."}],"kind":"project","estimatedTime":"10min"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer":{"abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}],"role":"project","type":"topic","kind":"project","estimatedTime":"25min","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer","url":"\/tutorials\/composablearchitecture\/implementingtimer","title":"Adding a meeting timer"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission":{"type":"section","url":"\/tutorials\/composablearchitecture\/implementingspeechrecognizer#Asking-for-speech-recognition-permission","abstract":[{"type":"text","text":"We have just one feature left to implement, and it’s one of the most complicated ones. We need"},{"type":"text","text":" "},{"type":"text","text":"to use Apple’s "},{"type":"codeVoice","code":"SFSpeechRecognizer"},{"type":"text","text":" API to ask the user for permission to transcribe their"},{"type":"text","text":" "},{"type":"text","text":"audio, and then start a speech recognition task to live transcribe the meeting while it is"},{"type":"text","text":" "},{"type":"text","text":"in progress."}],"kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission","title":"Asking for speech recognition permission"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Navigating-to-the-detail":{"type":"section","url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Navigating-to-the-detail","role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Navigating-to-the-detail","abstract":[{"type":"text","text":"We will wrap the application built so far in a "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" so that we can navigate to"},{"type":"text","text":" "},{"type":"text","text":"the detail screen. To do this we will create a new root-level feature that will be responsible"},{"type":"text","text":" "},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"title":"Navigating to the detail","kind":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#More-concise-domain-modeling":{"role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#More-concise-domain-modeling","kind":"section","url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#More-concise-domain-modeling","type":"section","abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"type":"text","text":" "},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"type":"text","text":" "},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}],"title":"More concise domain modeling"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Integrating-the-feature-domains-together":{"abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"type":"text","text":" "},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"type":"text","text":" "},{"type":"text","text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-domains-together","title":"Integrating the feature domains together","url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Integrating-the-feature-domains-together","type":"section","role":"pseudoSymbol","kind":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature#Create-a-new-feature":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Create-a-new-feature","title":"Create a new feature","url":"\/tutorials\/composablearchitecture\/recordmeetingfeature#Create-a-new-feature","kind":"section","abstract":[{"type":"text","text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will"},{"type":"text","text":" "},{"type":"text","text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer."}],"type":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Creating-the-app-feature":{"type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-feature","abstract":[{"type":"text","text":"We will wrap the application built so far in a "},{"code":"NavigationStack","type":"codeVoice"},{"type":"text","text":" so that we can navigate to"},{"type":"text","text":" "},{"type":"text","text":"the detail screen. To do this we will create a new root-level feature that will be responsible"},{"type":"text","text":" "},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"kind":"section","title":"Creating the app feature","role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Creating-the-app-feature"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm":{"url":"\/tutorials\/composablearchitecture\/presentingsyncupform","title":"Presenting the sync-up form","kind":"project","role":"project","abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"type":"text","text":" "},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"type":"text","text":" "},{"type":"text","text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}],"type":"topic","estimatedTime":"10min","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"navigatorTitle":[{"text":"TestStore","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","kind":"symbol","title":"TestStore","abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"url":"\/documentation\/composablearchitecture\/teststore","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestStore","kind":"identifier"}],"type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation#The-meeting-screen":{"abstract":[{"text":"Now that we have a navigation stack in place we can start navigating to other features in the","type":"text"},{"text":" ","type":"text"},{"text":"application. The simplest is the meeting screen, which allows you to see the details of a","type":"text"},{"text":" ","type":"text"},{"text":"previous recorded meeting.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/meetingnavigation#The-meeting-screen","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#The-meeting-screen","title":"The meeting screen","role":"pseudoSymbol","type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm#Adding-attendees":{"title":"Adding attendees","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Adding-attendees","abstract":[{"type":"text","text":"We now have a moderately complex feature for editing the details of a sync-up, the "},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":" "},{"type":"text","text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come"},{"type":"text","text":" "},{"type":"text","text":"face-to-face with dependencies for the first time in this tutorial."}],"url":"\/tutorials\/composablearchitecture\/testingsyncupform#Adding-attendees","role":"pseudoSymbol","type":"section","kind":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation#Non-exhaustive-testing":{"url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation#Non-exhaustive-testing","title":"Non-exhaustive testing","abstract":[{"type":"text","text":"We have now integrated two moderately complex features, the "},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" and "},{"code":"SyncUpForm","type":"codeVoice"},{"type":"text","text":", and"},{"type":"text","text":" "},{"type":"text","text":"so its time to write some tests. This will give us the opportunity to prove that the features"},{"type":"text","text":" "},{"type":"text","text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less"},{"type":"text","text":" "},{"type":"text","text":"fragile."}],"kind":"section","role":"pseudoSymbol","type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Non-exhaustive-testing"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Controlling-dependencies-early":{"kind":"section","role":"pseudoSymbol","type":"section","url":"\/tutorials\/composablearchitecture\/implementingtimer#Controlling-dependencies-early","title":"Controlling dependencies early","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Controlling-dependencies-early","abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}]},"PersistingSyncUps-01-code-0004.swift":{"fileName":"SyncUpsList.swift","type":"file","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  @ObservableState","  struct State: Equatable {","    @Presents var addSyncUp: SyncUpForm.State?","    @Shared(.fileStorage(.syncUps)) var syncUps: IdentifiedArrayOf<SyncUp> = []","  }","  enum Action {","    case addSyncUpButtonTapped","    case addSyncUp(PresentationAction<SyncUpForm.Action>)","    case confirmAddButtonTapped","    case discardButtonTapped","    case onDelete(IndexSet)","    case syncUpTapped(id: SyncUp.ID)","  }","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .addSyncUpButtonTapped:","        state.addSyncUp = SyncUpForm.State(syncUp: SyncUp(id: SyncUp.ID()))","        return .none","","      case .addSyncUp:","        return .none","","      case .confirmAddButtonTapped:","        guard let newSyncUp = state.addSyncUp?.syncUp","        else { return .none }","        state.addSyncUp = nil","        state.$syncUps.withLock { _ = $0.append(syncUp) }","        return .none","","      case .discardButtonTapped:","        state.addSyncUp = nil","        return .none","","      case let .onDelete(indexSet):","        state.$syncUps.withLock { $0.remove(atOffsets: indexSet) }","        return .none","","      case .syncUpTapped:","        return .none","      }","    }","    .ifLet(\\.$addSyncUp, action: \\.addSyncUp) {","      SyncUpForm()","    }","  }","}","","extension URL {","  static let syncUps = Self.documentsDirectory.appending(component: \"sync-ups.json\")","}"],"highlights":[{"line":33},{"line":41}],"syntax":"swift","identifier":"PersistingSyncUps-01-code-0004.swift","fileType":"swift"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Sync-up-detail":{"abstract":[],"role":"article","title":"Sync-up detail","url":"\/tutorials\/buildingsyncups\/sync-up-detail","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Sync-up-detail","kind":"article","type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list":{"type":"section","kind":"section","title":"Adding a new sync-up to the list","abstract":[{"text":"We now have two features built: the sync-ups list and the sync-up form. These features do not","type":"text"},{"text":" ","type":"text"},{"text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to","type":"text"},{"text":" ","type":"text"},{"text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then","type":"text"},{"text":" ","type":"text"},{"text":"add that sync-up to the root list.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list","role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Adding-a-new-sync-up-to-the-list"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Presenting-the-sync-up-form":{"role":"article","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Presenting-the-sync-up-form","abstract":[],"url":"\/tutorials\/buildingsyncups\/presenting-the-sync-up-form","type":"topic","title":"Presenting the sync-up form"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps#A-tour-of-SyncUps":{"type":"section","abstract":[{"type":"text","text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a"},{"type":"text","text":" "},{"type":"text","text":"recreation of Apple’s Scrumdinger demo application."}],"role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#A-tour-of-SyncUps","title":"A tour of SyncUps","url":"\/tutorials\/composablearchitecture\/whatissyncups#A-tour-of-SyncUps","kind":"section"},"PersistingSyncUps-01-video-0008.mov":{"variants":[{"traits":["1x","light"],"url":"\/videos\/ComposableArchitecture\/PersistingSyncUps-01-video-0008.mov"}],"poster":null,"type":"video","identifier":"PersistingSyncUps-01-video-0008.mov","alt":null}}}