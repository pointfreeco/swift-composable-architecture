{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect"},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"]]},"metadata":{"title":"DismissEffect","roleHeading":"Structure","externalID":"s:22ComposableArchitecture13DismissEffectV","modules":[{"name":"ComposableArchitecture"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DismissEffect","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DismissEffect"}],"symbolKind":"struct"},"abstract":[{"text":"An effect that dismisses the current presentation.","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/init(_:)"],"anchor":"Initializers","title":"Initializers","generated":true},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(animation:fileID:filePath:line:column:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(fileID:filePath:line:column:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(transaction:fileID:filePath:line:column:)"],"anchor":"Instance-Methods","title":"Instance Methods","generated":true}],"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies\/DependencyValues\/dismiss","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies\/DependencyValues\/isPresented"],"anchor":"Dismissal","title":"Dismissal","generated":true}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/ComposableArchitecture\/s8SendableP"],"title":"Conforms To","type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DismissEffect"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Execute this in the effect returned from a reducer in order to dismiss the feature:"}]},{"syntax":"swift","type":"codeListing","code":["@Reducer","struct ChildFeature {","  struct State { \/* ... *\/ }","  enum Action {","    case exitButtonTapped","    \/\/ ...","  }","  @Dependency(\\.dismiss) var dismiss","  var body: some Reducer<State, Action> {","    Reduce { state, action in","      switch action {","      case .exitButtonTapped:","        return .run { _ in await self.dismiss() }","      \/\/ ...","      }","    }","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This operation works by finding the nearest parent feature that was presented using either the"},{"type":"text","text":" "},{"code":"Reducer\/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q","type":"codeVoice"},{"type":"text","text":" or the"},{"type":"text","text":" "},{"code":"Reducer\/forEach(_:action:destination:fileID:filePath:line:column:)-9svqb","type":"codeVoice"},{"type":"text","text":" operator, and then dismisses "},{"inlineContent":[{"type":"text","text":"that"}],"type":"emphasis"},{"type":"text","text":" "},{"type":"text","text":"feature. It performs the dismissal by either sending the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/dismiss"},{"type":"text","text":" in the"},{"type":"text","text":" "},{"type":"text","text":"case of "},{"code":"ifLet","type":"codeVoice"},{"type":"text","text":" or sending "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction\/popFrom(id:)"},{"type":"text","text":" in the case of "},{"code":"forEach","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is also possible to dismiss the feature using an animation by providing an argument to the"},{"type":"text","text":" "},{"code":"dismiss","type":"codeVoice"},{"type":"text","text":" function:"}]},{"syntax":"swift","type":"codeListing","code":["case .exitButtonTapped:","  return .run { _ in await self.dismiss(animation: .default) }"]},{"type":"paragraph","inlineContent":[{"text":"This will cause the ","type":"text"},{"code":"dismiss","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"popFrom(id:)","type":"codeVoice"},{"text":" action to be sent with the particular animation.","type":"text"}]},{"type":"aside","name":"Warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"@Dependency(\\.dismiss)"},{"type":"text","text":" tool only works for features that are presented using"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"ifLet"},{"type":"text","text":" operator for tree-based navigation (see "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","isActive":true},{"type":"text","text":" for more info)"},{"type":"text","text":" "},{"type":"text","text":"or "},{"type":"codeVoice","code":"forEach"},{"type":"text","text":" operator for stack-based navigation (see "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","isActive":true},{"type":"text","text":"). If no"},{"type":"text","text":" "},{"type":"text","text":"parent feature is found that was presented with "},{"type":"codeVoice","code":"ifLet"},{"type":"text","text":" or "},{"type":"codeVoice","code":"forEach"},{"type":"text","text":", then a runtime warning"},{"type":"text","text":" "},{"type":"text","text":"is emitted in Xcode letting you know that it is not possible to dismiss. Further, the runtime"},{"type":"text","text":" "},{"type":"text","text":"warning becomes a test failure when run in tests."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you are testing a child feature in isolation that makes use of "},{"code":"@Dependency(\\.dismiss)","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"then you will need to override the dependency to get a passing test. You can even mutate"},{"type":"text","text":" "},{"type":"text","text":"some shared mutable state inside the "},{"code":"dismiss","type":"codeVoice"},{"type":"text","text":" closure to confirm that it is indeed invoked:"}]},{"syntax":"swift","type":"codeListing","code":["let isDismissInvoked: LockIsolated<[Bool]> = .init([])","let store = TestStore(initialState: Child.State()) {","  Child()","} withDependencies: {","  $0.dismiss = DismissEffect { isDismissInvoked.withValue { $0.append(true) } }","}","","await store.send(.exitButtonTapped) {","  \/\/ ...","}","XCTAssertEqual(isDismissInvoked.value, [true])"]}],"style":"warning"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/dismisseffect"]}],"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction/dismiss":{"url":"\/documentation\/composablearchitecture\/presentationaction\/dismiss","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"dismiss"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/dismiss","abstract":[{"type":"text","text":"An action sent to "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" out the associated presentation state."}],"kind":"symbol","role":"symbol","title":"PresentationAction.dismiss"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect/callAsFunction(fileID:filePath:line:column:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(fileID:filePath:line:column:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"callAsFunction","kind":"identifier"},{"text":"(","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"url":"\/documentation\/composablearchitecture\/dismisseffect\/callasfunction(fileid:filepath:line:column:)","abstract":[],"type":"topic","kind":"symbol","title":"callAsFunction(fileID:filePath:line:column:)","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TreeBasedNavigation":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","title":"Tree-based navigation","kind":"article","type":"topic","role":"article","url":"\/documentation\/composablearchitecture\/treebasednavigation","abstract":[{"text":"Learn about tree-based navigation, that is navigation modeled with optionals and enums, including","type":"text"},{"text":" ","type":"text"},{"text":"how to model your domains, how to integrate features, how to test your features, and more.","type":"text"}]},"doc://ComposableArchitecture/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackBasedNavigation":{"kind":"article","title":"Stack-based navigation","type":"topic","abstract":[{"type":"text","text":"Learn about stack-based navigation, that is navigation modeled with collections, including how to"},{"type":"text","text":" "},{"type":"text","text":"model your domains, how to integrate features, how to test your features, and more."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","role":"article","url":"\/documentation\/composablearchitecture\/stackbasednavigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"role":"symbol","type":"topic","title":"Effect","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","url":"\/documentation\/composablearchitecture\/effect","abstract":[],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","url":"\/documentation\/composablearchitecture\/reducer","type":"topic","title":"Reducer","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"text":"s should be executed later by the store, if any.","type":"text"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect/init(_:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/init(_:)","role":"symbol","url":"\/documentation\/composablearchitecture\/dismisseffect\/init(_:)","kind":"symbol","title":"init(_:)","type":"topic","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect/callAsFunction(transaction:fileID:filePath:line:column:)":{"kind":"symbol","abstract":[],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"callAsFunction","kind":"identifier"},{"text":"(","kind":"text"},{"text":"transaction","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Transaction","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI11TransactionV"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"title":"callAsFunction(transaction:fileID:filePath:line:column:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(transaction:fileID:filePath:line:column:)","role":"symbol","url":"\/documentation\/composablearchitecture\/dismisseffect\/callasfunction(transaction:fileid:filepath:line:column:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","abstract":[{"text":"Learn how to use the navigation tools in the library, including how to best model your domains, how","type":"text"},{"text":" ","type":"text"},{"text":"to integrate features in the reducer and view layers, and how to write tests.","type":"text"}],"title":"Navigation","url":"\/documentation\/composablearchitecture\/navigation","role":"collectionGroup","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Dependencies/DependencyValues/isPresented":{"kind":"symbol","abstract":[{"type":"text","text":"A Boolean value that indicates whether the current feature is being presented from a parent"},{"type":"text","text":" "},{"type":"text","text":"feature."}],"type":"topic","url":"\/documentation\/composablearchitecture\/dependencies\/dependencyvalues\/ispresented","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isPresented"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies\/DependencyValues\/isPresented","title":"isPresented"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect/callAsFunction(animation:fileID:filePath:line:column:)":{"title":"callAsFunction(animation:fileID:filePath:line:column:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"callAsFunction","kind":"identifier"},{"text":"(","kind":"text"},{"text":"animation","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Animation","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9AnimationV"},{"text":"?, ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"url":"\/documentation\/composablearchitecture\/dismisseffect\/callasfunction(animation:fileid:filepath:line:column:)","abstract":[],"kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(animation:fileID:filePath:line:column:)","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Dependencies/DependencyValues/dismiss":{"kind":"symbol","abstract":[{"type":"text","text":"An effect that dismisses the current presentation."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies\/DependencyValues\/dismiss","url":"\/documentation\/composablearchitecture\/dependencies\/dependencyvalues\/dismiss","title":"dismiss","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"dismiss"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DismissEffect","preciseIdentifier":"s:22ComposableArchitecture13DismissEffectV"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","type":"topic","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect":{"url":"\/documentation\/composablearchitecture\/dismisseffect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DismissEffect"}],"abstract":[{"text":"An effect that dismisses the current presentation.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"DismissEffect"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect","kind":"symbol","title":"DismissEffect","type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackAction/popFrom(id:)":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/stackaction\/popfrom(id:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction\/popFrom(id:)","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"popFrom"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"preciseIdentifier":"s:22ComposableArchitecture14StackElementIDV","kind":"typeIdentifier","text":"StackElementID"},{"kind":"text","text":")"}],"role":"symbol","abstract":[{"type":"text","text":"An action sent to dismiss the associated stack element at a given identifier."}],"title":"StackAction.popFrom(id:)"}}}