{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"seeAlsoSections":[{"anchor":"Related-Documentation","identifiers":["https:\/\/www.pointfree.co\/collections\/composable-architecture"],"title":"Related Documentation","abstract":[{"type":"text","text":"The collection of videos from "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.pointfree.co"},{"type":"text","text":" that dive deep into the"},{"text":" ","type":"text"},{"text":"development of the library.","type":"text"}]}],"primaryContentSections":[{"content":[{"type":"heading","level":2,"anchor":"Additional-Resources","text":"Additional Resources"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions","isActive":true,"type":"reference"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"identifier":"https:\/\/www.pointfree.co\/collections\/composable-architecture","isActive":true,"type":"reference"}],"type":"paragraph"}]}]},{"anchor":"Overview","level":2,"text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This library provides a few core tools that can be used to build applications of varying purpose and"},{"type":"text","text":" "},{"text":"complexity. It provides compelling stories that you can follow to solve many problems you encounter","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"day-to-day when building applications, such as:"}]},{"items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"State management"}]}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"How to manage the state of your application using simple value types, and share state across","type":"text"},{"text":" ","type":"text"},{"text":"many screens so that mutations in one screen can be immediately observed in another screen.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Composition","type":"text"}],"type":"strong"}]},{"inlineContent":[{"text":"How to break down large features into smaller components that can be extracted to their own,","type":"text"},{"text":" ","type":"text"},{"text":"isolated modules and be easily glued back together to form the feature.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Side effects"}],"type":"strong"}]},{"inlineContent":[{"type":"text","text":"How to let certain parts of the application talk to the outside world in the most testable and"},{"type":"text","text":" "},{"text":"understandable way possible.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Testing","type":"text"}]}],"type":"paragraph"},{"inlineContent":[{"text":"How to not only test a feature built in the architecture, but also write integration tests for","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"features that have been composed of many parts, and write end-to-end tests to understand how"},{"type":"text","text":" "},{"type":"text","text":"side effects influence your application. This allows you to make strong guarantees that your"},{"text":" ","type":"text"},{"text":"business logic is running in the way you expect.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Ergonomics","type":"text"}],"type":"strong"}]},{"inlineContent":[{"type":"text","text":"How to accomplish all of the above in a simple API with as few concepts and moving parts as"},{"text":" ","type":"text"},{"text":"possible.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"sections":[],"topicSections":[{"title":"Essentials","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/GettingStarted","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FAQ"],"anchor":"Essentials"},{"title":"Tutorials","identifiers":["doc:\/\/ComposableArchitecture\/tutorials\/MeetComposableArchitecture","doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps"],"anchor":"Tutorials"},{"anchor":"State-management","title":"State management","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"]},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"],"title":"Testing","anchor":"Testing"},{"anchor":"Integrations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftConcurrency","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationBackport","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UIKit"],"title":"Integrations"},{"anchor":"Migration-guides","title":"Migration guides","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides"]},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey"],"anchor":"Structures","title":"Structures","generated":true},{"generated":true,"anchor":"Functions","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryFileStorage()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/LiveFileStorage()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/withTaskCancellation(id:cancelInFlight:isolation:operation:)"],"title":"Functions"},{"title":"Extended Modules","anchor":"Extended-Modules","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PerceptionCore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Sharing","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftNavigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUICore"],"generated":true}],"variants":[{"paths":["\/documentation\/composablearchitecture"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"title":"ComposableArchitecture","role":"collection","roleHeading":"Framework","modules":[{"name":"ComposableArchitecture"}],"externalID":"ComposableArchitecture","symbolKind":"module"},"hierarchy":{"paths":[[]]},"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Sharing":{"abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/sharing","title":"Sharing","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Sharing"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"role":"symbol","title":"Store","navigatorTitle":[{"text":"Store","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/store","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"text":"around to views that need to interact with the application.","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/GettingStarted":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/GettingStarted","role":"article","abstract":[{"text":"Learn how to integrate the Composable Architecture into your project and write your first","type":"text"},{"type":"text","text":" "},{"type":"text","text":"application."}],"type":"topic","url":"\/documentation\/composablearchitecture\/gettingstarted","title":"Getting started","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"type":"topic","abstract":[{"text":"Learn techniques for sharing state throughout many parts of your application, and how to persist","type":"text"},{"text":" ","type":"text"},{"text":"data to user defaults, the file system, and other external mediums.","type":"text"}],"kind":"article","url":"\/documentation\/composablearchitecture\/sharingstate","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","title":"Sharing state","role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","kind":"symbol","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/LiveFileStorage()":{"abstract":[],"title":"LiveFileStorage()","kind":"symbol","url":"\/documentation\/composablearchitecture\/livefilestorage()","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"LiveFileStorage","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Sharing11FileStorageV","kind":"typeIdentifier","text":"FileStorage"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/LiveFileStorage()","deprecated":true},"doc://ComposableArchitecture/tutorials/BuildingSyncUps":{"type":"topic","url":"\/tutorials\/buildingsyncups","kind":"overview","title":"Building SyncUps","role":"overview","abstract":[{"text":"The SyncUps application is a recreation of one of Apple’s more interesting demo applications,","type":"text"},{"text":" ","type":"text"},{"text":"Scrumdinger. We recreate it from scratch using the Composable Architecture, with a focus on","type":"text"},{"text":" ","type":"text"},{"text":"domain modeling, controlling dependencies, and testability.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUICore":{"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUICore","url":"\/documentation\/composablearchitecture\/swiftuicore","kind":"symbol","type":"topic","role":"collection","title":"SwiftUICore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Performance":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance","role":"article","abstract":[{"type":"text","text":"Learn how to improve the performance of features built in the Composable Architecture."}],"type":"topic","url":"\/documentation\/composablearchitecture\/performance","title":"Performance","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationBackport":{"type":"topic","title":"Observation backport","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationBackport","abstract":[{"text":"Learn how the Observation framework from Swift 5.9 was backported to support iOS 16 and earlier,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"as well as the caveats of using the backported tools."}],"kind":"article","role":"article","url":"\/documentation\/composablearchitecture\/observationbackport"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/InMemoryFileStorage()":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InMemoryFileStorage","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Sharing11FileStorageV","text":"FileStorage","kind":"typeIdentifier"}],"deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryFileStorage()","url":"\/documentation\/composablearchitecture\/inmemoryfilestorage()","kind":"symbol","role":"symbol","title":"InMemoryFileStorage()","abstract":[]},"https://github.com/pointfreeco/swift-composable-architecture/discussions":{"type":"link","title":"Discussions","titleInlineContent":[{"type":"text","text":"Discussions"}],"identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions","url":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","abstract":[{"text":"A testable runtime for a reducer.","type":"text"}],"kind":"symbol","type":"topic","title":"TestStore","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TestStore"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"TestStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/teststore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftConcurrency":{"title":"Adopting Swift concurrency","abstract":[{"type":"text","text":"Learn how to write safe, concurrent effects using Swift’s structured concurrency."}],"url":"\/documentation\/composablearchitecture\/swiftconcurrency","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftConcurrency","role":"article","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"url":"\/documentation\/composablearchitecture\/navigation","title":"Navigation","type":"topic","abstract":[{"type":"text","text":"Learn how to use the navigation tools in the library, including how to best model your domains, how"},{"type":"text","text":" "},{"type":"text","text":"to integrate features in the reducer and view layers, and how to write tests."}],"kind":"article","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DependencyManagement":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement","kind":"article","role":"article","abstract":[{"type":"text","text":"Learn how to register dependencies with the library so that they can be immediately accessible from"},{"type":"text","text":" "},{"text":"any reducer.","type":"text"}],"type":"topic","url":"\/documentation\/composablearchitecture\/dependencymanagement","title":"Dependencies"},"https://github.com/pointfreeco/swift-composable-architecture":{"type":"link","title":"GitHub Repo","titleInlineContent":[{"type":"text","text":"GitHub Repo"}],"identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture","url":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","title":"Effect","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FAQ":{"kind":"article","title":"Frequently asked questions","role":"article","url":"\/documentation\/composablearchitecture\/faq","abstract":[{"type":"text","text":"A collection of some of the most common questions and comments people have concerning the library."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FAQ","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PerceptionCore":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PerceptionCore","url":"\/documentation\/composablearchitecture\/perceptioncore","kind":"symbol","role":"collection","abstract":[],"title":"PerceptionCore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftNavigation":{"role":"collection","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/swiftnavigation","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftNavigation","title":"SwiftNavigation","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"type":"topic","kind":"article","title":"SwiftUI Integration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/withTaskCancellation(id:cancelInFlight:isolation:operation:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/withTaskCancellation(id:cancelInFlight:isolation:operation:)","title":"withTaskCancellation(id:cancelInFlight:isolation:operation:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"withTaskCancellation"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"text":": some ","kind":"text"},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"text":" & ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"},{"kind":"text","text":", "},{"text":"cancelInFlight","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"isolation","kind":"externalParam"},{"kind":"text","text":": "},{"text":"isolated","kind":"keyword"},{"text":" (any ","kind":"text"},{"kind":"typeIdentifier","text":"Actor","preciseIdentifier":"s:ScA"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"operation"},{"text":": () ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"abstract":[{"type":"text","text":"Execute an operation with a cancellation identifier."}],"type":"topic","url":"\/documentation\/composablearchitecture\/withtaskcancellation(id:cancelinflight:isolation:operation:)","kind":"symbol"},"https://www.pointfree.co/collections/composable-architecture":{"type":"link","title":"Point-Free Videos","titleInlineContent":[{"type":"text","text":"Point-Free Videos"}],"identifier":"https:\/\/www.pointfree.co\/collections\/composable-architecture","url":"https:\/\/www.pointfree.co\/collections\/composable-architecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKeyPathKey":{"navigatorTitle":[{"text":"AppStorageKeyPathKey","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"AppStorageKeyPathKey","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey","abstract":[{"type":"text","text":"A type defining a user defaults persistence strategy via key path."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AppStorageKeyPathKey","kind":"identifier"}],"deprecated":true,"type":"topic","url":"\/documentation\/composablearchitecture\/appstoragekeypathkey"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigrationGuides":{"abstract":[{"type":"text","text":"Learn how to upgrade your application to the newest version of the Composable Architecture."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides","type":"topic","role":"collectionGroup","title":"Migration guides","kind":"article","url":"\/documentation\/composablearchitecture\/migrationguides"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"text":" ","type":"text"},{"type":"text","text":"given an action, and describes what "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference"},{"text":"s should be executed later by the store, if any.","type":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UIKit":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UIKit","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a UIKit application."}],"title":"UIKit Integration","role":"collectionGroup","kind":"article","url":"\/documentation\/composablearchitecture\/uikit"},"doc://ComposableArchitecture/tutorials/MeetComposableArchitecture":{"type":"topic","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"consistent and understandable way, with composition, testing, and ergonomics in mind. It can be"},{"text":" ","type":"text"},{"text":"used in SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"overview","url":"\/tutorials\/meetcomposablearchitecture","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/MeetComposableArchitecture","title":"Meet the Composable Architecture","role":"overview"}}}