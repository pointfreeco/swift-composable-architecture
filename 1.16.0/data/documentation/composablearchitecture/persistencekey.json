{"kind":"symbol","relationshipsSections":[{"kind":"relationships","type":"inheritsFrom","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey","doc:\/\/ComposableArchitecture\/s8SendableP"],"title":"Inherits From"},{"kind":"relationships","title":"Conforming Types","type":"conformingTypes","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKey"},"abstract":[{"text":"A type that can persist shared state to an external storage.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/persistencekey"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"topicSections":[{"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKey\/save(_:)"],"generated":true}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PersistenceKey"},{"kind":"text","text":"<"},{"text":"Value","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/Value","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa"},{"kind":"text","text":"> : "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey","kind":"typeIdentifier","text":"PersistenceReaderKey","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP"}]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Conform to this protocol to express persistence to some external storage by describing how to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"save to and load from the external storage, and providing a stream of values that represents"},{"type":"text","text":" "},{"text":"when the external storage is changed from the outside. It is only necessary to conform to this","type":"text"},{"type":"text","text":" "},{"text":"protocol if the ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKey","isActive":true},{"type":"text","text":", "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey","isActive":true,"type":"reference"},{"text":", or ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey","type":"reference"},{"text":" strategies are not","type":"text"},{"text":" ","type":"text"},{"text":"sufficient for your use case.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"See the article ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","type":"reference"},{"text":" for more information, in particular the","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState#Custom-persistence","isActive":true},{"type":"text","text":" section."}]}]}],"metadata":{"modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"PersistenceKey","kind":"identifier"}],"role":"symbol","externalID":"s:22ComposableArchitecture14PersistenceKeyP","title":"PersistenceKey","symbolKind":"protocol","navigatorTitle":[{"kind":"identifier","text":"PersistenceKey"}]},"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared"],"generated":true,"title":"Sharing state","anchor":"Sharing-state"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/Value":{"abstract":[{"type":"text","text":"A type that can be loaded or subscribed to in an external system."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/Value","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"Value","kind":"identifier"},{"kind":"text","text":" : "},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"url":"\/documentation\/composablearchitecture\/persistencereaderkey\/value","title":"Value","required":true,"role":"symbol","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKey":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKey","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PersistenceKey","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"PersistenceKey","kind":"identifier"}],"abstract":[{"type":"text","text":"A type that can persist shared state to an external storage."}],"url":"\/documentation\/composablearchitecture\/persistencekey","title":"PersistenceKey","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKeyPathKey":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Copyable"},{"type":"text","text":", "},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"abstract":[{"text":"A type defining a user defaults persistence strategy via key path.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"AppStorageKeyPathKey"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AppStorageKeyPathKey"}],"type":"topic","title":"AppStorageKeyPathKey","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey","role":"symbol","url":"\/documentation\/composablearchitecture\/appstoragekeypathkey"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKeyDefault":{"navigatorTitle":[{"kind":"identifier","text":"PersistenceKeyDefault"}],"abstract":[{"type":"text","text":"A persistence key that provides a default value to an existing persistence key."}],"kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"text":" conforms to ","type":"text"},{"code":"PersistenceKey","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/composablearchitecture\/persistencekeydefault","title":"PersistenceKeyDefault","type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PersistenceKeyDefault"}]},"doc://ComposableArchitecture/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/InMemoryKey":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey","title":"InMemoryKey","role":"symbol","navigatorTitle":[{"text":"InMemoryKey","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/inmemorykey","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InMemoryKey","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A type defining an in-memory persistence strategy"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey":{"abstract":[{"type":"text","text":"A type that can load and subscribe to state in an external system."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"PersistenceReaderKey","kind":"identifier"}],"role":"symbol","type":"topic","title":"PersistenceReaderKey","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey","kind":"symbol","navigatorTitle":[{"text":"PersistenceReaderKey","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/persistencereaderkey"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKey/save(_:)":{"title":"save(_:)","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKey\/save(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"save","kind":"identifier"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa"},{"kind":"text","text":")"}],"url":"\/documentation\/composablearchitecture\/persistencekey\/save(_:)","type":"topic","required":true,"abstract":[{"type":"text","text":"Saves a value to storage."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState#Custom-persistence":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState#Custom-persistence","title":"Custom persistence","type":"topic","url":"\/documentation\/composablearchitecture\/sharingstate#Custom-persistence","abstract":[],"kind":"section"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FileStorageKey":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey","navigatorTitle":[{"text":"FileStorageKey","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/filestoragekey","role":"symbol","title":"FileStorageKey","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FileStorageKey","kind":"identifier"}],"abstract":[{"type":"text","text":"A type defining a file persistence strategy"}],"type":"topic","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Shared":{"role":"symbol","title":"Shared","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Shared","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","navigatorTitle":[{"text":"Shared","kind":"identifier"}],"abstract":[{"type":"text","text":"A property wrapper type that shares a value with multiple parts of an application."}],"url":"\/documentation\/composablearchitecture\/shared"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"type":"topic","url":"\/documentation\/composablearchitecture\/sharingstate","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","role":"collectionGroup","abstract":[{"type":"text","text":"Learn techniques for sharing state throughout many parts of your application, and how to persist"},{"type":"text","text":" "},{"type":"text","text":"data to user defaults, the file system, and other external mediums."}],"title":"Sharing state"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","role":"symbol","title":"Effect","navigatorTitle":[{"text":"Effect","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Effect","kind":"identifier"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKey":{"conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":", "},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"type":"text","text":"A type defining a user defaults persistence strategy."}],"navigatorTitle":[{"kind":"identifier","text":"AppStorageKey"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AppStorageKey","kind":"identifier"}],"type":"topic","title":"AppStorageKey","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKey","role":"symbol","url":"\/documentation\/composablearchitecture\/appstoragekey"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"title":"Reducer"}}}