{"metadata":{"title":"ComposableArchitecture","roleHeading":"Framework","symbolKind":"module","modules":[{"name":"ComposableArchitecture"}],"externalID":"ComposableArchitecture","role":"collection"},"topicSections":[{"title":"Essentials","anchor":"Essentials","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/GettingStarted","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FAQ"]},{"title":"Tutorials","identifiers":["doc:\/\/ComposableArchitecture\/tutorials\/MeetComposableArchitecture","doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps"],"anchor":"Tutorials"},{"anchor":"State-management","title":"State management","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"]},{"anchor":"Testing","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"],"title":"Testing"},{"title":"Integrations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftConcurrency","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationBackport","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UIKit"],"anchor":"Integrations"},{"anchor":"Migration-guides","title":"Migration guides","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides"]},{"title":"Functions","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/withTaskCancellation(id:cancelInFlight:isolation:operation:)"],"anchor":"Functions","generated":true},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction"],"anchor":"Enumerations","title":"Enumerations","generated":true},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Perception","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftNavigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUICore"],"anchor":"Extended-Modules","title":"Extended Modules","generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture"]}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[[]]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol","seeAlsoSections":[{"anchor":"Related-Documentation","identifiers":["https:\/\/www.pointfree.co\/collections\/composable-architecture"],"abstract":[{"text":"The collection of videos from ","type":"text"},{"type":"reference","isActive":true,"identifier":"https:\/\/www.pointfree.co"},{"type":"text","text":" that dive deep into the"},{"type":"text","text":" "},{"text":"development of the library.","type":"text"}],"title":"Related Documentation"}],"primaryContentSections":[{"content":[{"level":2,"type":"heading","anchor":"Additional-Resources","text":"Additional Resources"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions","type":"reference","isActive":true}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/www.pointfree.co\/collections\/composable-architecture","type":"reference","isActive":true}]}]}]},{"level":2,"text":"Overview","anchor":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"This library provides a few core tools that can be used to build applications of varying purpose and"},{"type":"text","text":" "},{"type":"text","text":"complexity. It provides compelling stories that you can follow to solve many problems you encounter"},{"type":"text","text":" "},{"type":"text","text":"day-to-day when building applications, such as:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"State management","type":"text"}]}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"How to manage the state of your application using simple value types, and share state across"},{"type":"text","text":" "},{"type":"text","text":"many screens so that mutations in one screen can be immediately observed in another screen."}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Composition","type":"text"}]}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"How to break down large features into smaller components that can be extracted to their own,"},{"type":"text","text":" "},{"text":"isolated modules and be easily glued back together to form the feature.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Side effects","type":"text"}],"type":"strong"}]},{"inlineContent":[{"type":"text","text":"How to let certain parts of the application talk to the outside world in the most testable and"},{"type":"text","text":" "},{"text":"understandable way possible.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Testing"}],"type":"strong"}]},{"inlineContent":[{"text":"How to not only test a feature built in the architecture, but also write integration tests for","type":"text"},{"text":" ","type":"text"},{"text":"features that have been composed of many parts, and write end-to-end tests to understand how","type":"text"},{"type":"text","text":" "},{"type":"text","text":"side effects influence your application. This allows you to make strong guarantees that your"},{"type":"text","text":" "},{"text":"business logic is running in the way you expect.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Ergonomics"}],"type":"strong"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"How to accomplish all of the above in a simple API with as few concepts and moving parts as"},{"type":"text","text":" "},{"type":"text","text":"possible."}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"references":{"doc://ComposableArchitecture/tutorials/MeetComposableArchitecture":{"kind":"overview","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a"},{"type":"text","text":" "},{"type":"text","text":"consistent and understandable way, with composition, testing, and ergonomics in mind. It can be"},{"type":"text","text":" "},{"type":"text","text":"used in SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"type":"topic","title":"Meet the Composable Architecture","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/MeetComposableArchitecture","url":"\/tutorials\/meetcomposablearchitecture","role":"overview"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"role":"collectionGroup","title":"Navigation","abstract":[{"text":"Learn how to use the navigation tools in the library, including how to best model your domains, how","type":"text"},{"type":"text","text":" "},{"text":"to integrate features in the reducer and view layers, and how to write tests.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationBackport":{"role":"article","abstract":[{"type":"text","text":"Learn how the Observation framework from Swift 5.9 was backported to support iOS 16 and earlier,"},{"type":"text","text":" "},{"text":"as well as the caveats of using the backported tools.","type":"text"}],"type":"topic","kind":"article","url":"\/documentation\/composablearchitecture\/observationbackport","title":"Observation backport","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationBackport"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"type":"topic","url":"\/documentation\/composablearchitecture\/store","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"around to views that need to interact with the application."}],"kind":"symbol","title":"Store","navigatorTitle":[{"text":"Store","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},"https://github.com/pointfreeco/swift-composable-architecture":{"title":"GitHub Repo","titleInlineContent":[{"type":"text","text":"GitHub Repo"}],"url":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture","type":"link","identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture"},"https://github.com/pointfreeco/swift-composable-architecture/discussions":{"title":"Discussions","titleInlineContent":[{"text":"Discussions","type":"text"}],"url":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions","type":"link","identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUICore":{"url":"\/documentation\/composablearchitecture\/swiftuicore","abstract":[],"kind":"symbol","role":"collection","title":"SwiftUICore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUICore","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"url":"\/documentation\/composablearchitecture\/teststore","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TestStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"title":"TestStore","kind":"symbol","navigatorTitle":[{"text":"TestStore","kind":"identifier"}]},"https://www.pointfree.co/collections/composable-architecture":{"title":"Point-Free Videos","titleInlineContent":[{"type":"text","text":"Point-Free Videos"}],"url":"https:\/\/www.pointfree.co\/collections\/composable-architecture","type":"link","identifier":"https:\/\/www.pointfree.co\/collections\/composable-architecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"type":"topic","url":"\/documentation\/composablearchitecture\/sharingstate","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","role":"collectionGroup","abstract":[{"type":"text","text":"Learn techniques for sharing state throughout many parts of your application, and how to persist"},{"type":"text","text":" "},{"type":"text","text":"data to user defaults, the file system, and other external mediums."}],"title":"Sharing state"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UIKit":{"role":"collectionGroup","title":"UIKit Integration","url":"\/documentation\/composablearchitecture\/uikit","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UIKit","abstract":[{"text":"Integrating the Composable Architecture into a UIKit application.","type":"text"}],"type":"topic","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftNavigation":{"type":"topic","abstract":[],"url":"\/documentation\/composablearchitecture\/swiftnavigation","title":"SwiftNavigation","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftNavigation","role":"collection"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"type":"topic","title":"SwiftUI Integration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","kind":"article","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/withTaskCancellation(id:cancelInFlight:isolation:operation:)":{"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"withTaskCancellation"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"id"},{"kind":"text","text":": some "},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"kind":"text","text":" & "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"cancelInFlight"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"isolation"},{"text":": ","kind":"text"},{"kind":"keyword","text":"isolated"},{"text":" (any ","kind":"text"},{"preciseIdentifier":"s:ScA","text":"Actor","kind":"typeIdentifier"},{"text":")?, ","kind":"text"},{"text":"operation","kind":"externalParam"},{"text":": () ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Execute an operation with a cancellation identifier."}],"type":"topic","url":"\/documentation\/composablearchitecture\/withtaskcancellation(id:cancelinflight:isolation:operation:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/withTaskCancellation(id:cancelInFlight:isolation:operation:)","title":"withTaskCancellation(id:cancelInFlight:isolation:operation:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/GettingStarted":{"type":"topic","kind":"article","role":"article","url":"\/documentation\/composablearchitecture\/gettingstarted","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/GettingStarted","title":"Getting started","abstract":[{"type":"text","text":"Learn how to integrate the Composable Architecture into your project and write your first"},{"text":" ","type":"text"},{"type":"text","text":"application."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Perception":{"url":"\/documentation\/composablearchitecture\/perception","type":"topic","title":"Perception","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Perception","role":"collection","kind":"symbol","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","role":"symbol","title":"Effect","navigatorTitle":[{"text":"Effect","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Effect","kind":"identifier"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DependencyManagement":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement","url":"\/documentation\/composablearchitecture\/dependencymanagement","role":"article","title":"Dependencies","abstract":[{"type":"text","text":"Learn how to register dependencies with the library so that they can be immediately accessible from"},{"text":" ","type":"text"},{"type":"text","text":"any reducer."}],"type":"topic","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftConcurrency":{"abstract":[{"text":"Learn how to write safe, concurrent effects using Swift’s structured concurrency.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftConcurrency","role":"article","type":"topic","title":"Adopting Swift concurrency","kind":"article","url":"\/documentation\/composablearchitecture\/swiftconcurrency"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Performance":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance","url":"\/documentation\/composablearchitecture\/performance","role":"article","title":"Performance","abstract":[{"type":"text","text":"Learn how to improve the performance of features built in the Composable Architecture."}],"type":"topic","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FAQ":{"abstract":[{"type":"text","text":"A collection of some of the most common questions and comments people have concerning the library."}],"role":"article","kind":"article","url":"\/documentation\/composablearchitecture\/faq","type":"topic","title":"Frequently asked questions","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FAQ"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps":{"kind":"overview","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","type":"topic","url":"\/tutorials\/buildingsyncups","abstract":[{"type":"text","text":"The SyncUps application is a recreation of one of Apple’s more interesting demo applications,"},{"text":" ","type":"text"},{"type":"text","text":"Scrumdinger. We recreate it from scratch using the Composable Architecture, with a focus on"},{"text":" ","type":"text"},{"type":"text","text":"domain modeling, controlling dependencies, and testability."}],"role":"overview","title":"Building SyncUps"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedAction":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction","kind":"symbol","type":"topic","abstract":[{"text":"A wrapper type for actions that can be presented in a list.","type":"text"}],"url":"\/documentation\/composablearchitecture\/identifiedaction","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdentifiedAction"}],"navigatorTitle":[{"kind":"identifier","text":"IdentifiedAction"}],"title":"IdentifiedAction","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigrationGuides":{"title":"Migration guides","role":"collectionGroup","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides","abstract":[{"text":"Learn how to upgrade your application to the newest version of the Composable Architecture.","type":"text"}],"kind":"article","url":"\/documentation\/composablearchitecture\/migrationguides"}}}