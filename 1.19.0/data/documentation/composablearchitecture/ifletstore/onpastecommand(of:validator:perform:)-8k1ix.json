{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"onPasteCommand"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Payload"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"of"},{"text":" ","kind":"text"},{"text":"supportedTypes","kind":"internalParam"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"validator"},{"text":": ","kind":"text"},{"kind":"keyword","text":"@escaping"},{"text":" ([","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSItemProvider","kind":"typeIdentifier","text":"NSItemProvider"},{"kind":"text","text":"]) -> "},{"kind":"typeIdentifier","text":"Payload"},{"kind":"text","text":"?, "},{"text":"perform","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"payloadAction","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"text":"Payload","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"kind":"text","text":"\n"}],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/onpastecommand(of:validator:perform:)-8k1ix"]}],"metadata":{"externalID":"s:7SwiftUI4ViewPAAE14onPasteCommand2of9validator7performQrSaySSG_qd__SgSaySo14NSItemProviderCGcyqd__ctlF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onPasteCommand"},{"kind":"text","text":"<"},{"text":"Payload","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"of","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"validator"},{"text":": ([","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSItemProvider","text":"NSItemProvider","kind":"typeIdentifier"},{"kind":"text","text":"]) -> "},{"text":"Payload","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"perform"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Payload"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"platforms":[{"introducedAt":"10.15","deprecatedAt":"100000.0","name":"macOS","unavailable":false,"deprecated":false,"beta":false,"message":"Provide `UTType`s as the `supportedContentTypes` instead."}],"role":"symbol","extendedModule":"SwiftUICore","roleHeading":"Instance Method","modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"title":"onPasteCommand(of:validator:perform:)","symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/onPasteCommand(of:validator:perform:)-8k1ix","interfaceLanguage":"swift"},"sections":[],"abstract":[{"text":"Inherited from ","type":"text"},{"code":"View.onPasteCommand(of:validator:perform:)","type":"codeVoice"},{"type":"text","text":"."}],"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Provide `UTType`s as the `supportedContentTypes` instead."}],"type":"paragraph"}],"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/onPasteCommand(of:validator:perform:)-8k1ix":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onPasteCommand","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Payload"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"text":": [","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":"], "},{"text":"validator","kind":"externalParam"},{"text":": ([","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSItemProvider","text":"NSItemProvider","kind":"typeIdentifier"},{"kind":"text","text":"]) -> "},{"kind":"typeIdentifier","text":"Payload"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"perform"},{"kind":"text","text":": ("},{"text":"Payload","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/onPasteCommand(of:validator:perform:)-8k1ix","type":"topic","deprecated":true,"title":"onPasteCommand(of:validator:perform:)","url":"\/documentation\/composablearchitecture\/ifletstore\/onpastecommand(of:validator:perform:)-8k1ix","role":"symbol","abstract":[],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"kind":"symbol","title":"ComposableArchitecture","type":"topic","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"abstract":[],"url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","title":"View Implementations","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","kind":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"role":"collectionGroup","type":"topic","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"kind":"symbol","title":"IfLetStore","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IfLetStore"}],"navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}],"deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","url":"\/documentation\/composablearchitecture\/ifletstore","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"url":"\/documentation\/composablearchitecture\/swiftuideprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","role":"collectionGroup","kind":"article","title":"Deprecations"}}}