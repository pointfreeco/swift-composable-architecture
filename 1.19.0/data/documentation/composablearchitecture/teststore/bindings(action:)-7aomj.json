{"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"bindings"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ViewAction"},{"kind":"text","text":">("},{"text":"action","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"toViewAction"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9CasePaths03AnyA4PathV","text":"AnyCasePath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV","text":"BindingViewStore"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"ViewAction"},{"text":".","kind":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture14BindableActionP5StateQa","text":"State"},{"kind":"text","text":", "},{"text":"ViewAction","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture14BindableActionP","text":"BindableAction"}],"platforms":["macOS"],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/composablearchitecture\/teststore\/bindings(action:)-7aomj"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/bindings(action:)-7aomj"},"metadata":{"platforms":[],"conformance":{"constraints":[{"code":"State","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","title":"bindings(action:)","roleHeading":"Instance Method","externalID":"s:22ComposableArchitecture9TestStoreC8bindings6actionAA011BindingViewD0VyxG9CasePaths03AnyI4PathVyq_qd__G_t5StateQyd__RszAA14BindableActionRd__lF","symbolKind":"method","modules":[{"name":"ComposableArchitecture"}],"extendedModule":"ComposableArchitecture","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"bindings","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ViewAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths03AnyA4PathV","text":"AnyCasePath"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"BindingViewStore","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":">","kind":"text"}]},"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreDeprecations"]]},"deprecationSummary":[{"inlineContent":[{"text":"Use the version of this operator with case key paths, instead. See the following migration guide for more information: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.4#Using-case-key-paths","type":"text"}],"type":"paragraph"}],"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction":{"abstract":[{"text":"An action type that exposes a ","type":"text"},{"type":"codeVoice","code":"binding"},{"type":"text","text":" case that holds a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","isActive":true},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"BindableAction","kind":"identifier"}],"type":"topic","url":"\/documentation\/composablearchitecture\/bindableaction","kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction","title":"BindableAction","navigatorTitle":[{"text":"BindableAction","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/bindings(action:)-7aomj":{"url":"\/documentation\/composablearchitecture\/teststore\/bindings(action:)-7aomj","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"bindings"},{"kind":"text","text":"<"},{"text":"ViewAction","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"action","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9CasePaths03AnyA4PathV","kind":"typeIdentifier","text":"AnyCasePath"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ViewAction"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV","kind":"typeIdentifier","text":"BindingViewStore"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":">"}],"deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/bindings(action:)-7aomj","title":"bindings(action:)","role":"symbol","abstract":[],"conformance":{"constraints":[{"type":"codeVoice","code":"State"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStoreDeprecations":{"abstract":[{"text":"Review unsupported test store APIs and their replacements.","type":"text"}],"type":"topic","title":"Deprecations","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreDeprecations","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/teststoredeprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingAction":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BindingAction","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","type":"topic","kind":"symbol","navigatorTitle":[{"text":"BindingAction","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/bindingaction","abstract":[{"type":"text","text":"An action that describes simple mutations to some root state at a writable key path."}],"title":"BindingAction"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"url":"\/documentation\/composablearchitecture\/viewstore","kind":"symbol","deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ViewStore"},{"text":" is an object that can observe state changes and send actions. They are most","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used"},{"type":"text","text":" "},{"type":"text","text":"anywhere it makes sense to observe state or send actions."}],"role":"symbol","navigatorTitle":[{"text":"ViewStore","kind":"identifier"}],"title":"ViewStore","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewStore"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"kind":"symbol","title":"ComposableArchitecture","type":"topic","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TestStore"}],"type":"topic","url":"\/documentation\/composablearchitecture\/teststore","kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","title":"TestStore","navigatorTitle":[{"text":"TestStore","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState":{"role":"symbol","abstract":[{"text":"A property wrapper type that can designate properties of view state that can be directly","type":"text"},{"type":"text","text":" "},{"type":"text","text":"bindable in SwiftUI views."}],"url":"\/documentation\/composablearchitecture\/bindingviewstate","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BindingViewState"}],"type":"topic","title":"BindingViewState","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","navigatorTitle":[{"kind":"identifier","text":"BindingViewState"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewStore":{"abstract":[{"text":"A property wrapper type that can derive ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","type":"reference","isActive":true},{"type":"text","text":" values for a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","isActive":true},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BindingViewStore","kind":"identifier"}],"type":"topic","url":"\/documentation\/composablearchitecture\/bindingviewstore","kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore","title":"BindingViewStore","navigatorTitle":[{"text":"BindingViewStore","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction/State":{"url":"\/documentation\/composablearchitecture\/bindableaction\/state","title":"State","abstract":[{"text":"The root state type that contains bindable fields.","type":"text"}],"role":"symbol","required":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/State","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"State"}],"kind":"symbol","type":"topic"}}}