{"metadata":{"extendedModule":"SwiftUICore","title":"windowToolbarFullScreenVisibility(_:)","modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"externalID":"s:7SwiftUI4ViewPAAE33windowToolbarFullScreenVisibilityyQrAA06WindowefgH0VF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","roleHeading":"Instance Method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"windowToolbarFullScreenVisibility"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI33WindowToolbarFullScreenVisibilityV","text":"WindowToolbarFullScreenVisibility"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"platforms":[{"deprecated":false,"name":"iOS","introducedAt":"18.0","unavailable":false,"beta":false},{"deprecated":false,"name":"macOS","introducedAt":"15.0","unavailable":false,"beta":false},{"deprecated":false,"name":"tvOS","introducedAt":"18.0","unavailable":false,"beta":false},{"deprecated":false,"name":"visionOS","introducedAt":"2.0","unavailable":false,"beta":false},{"deprecated":false,"name":"watchOS","introducedAt":"11.0","unavailable":false,"beta":false}],"symbolKind":"method"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.windowToolbarFullScreenVisibility(_:)"},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"windowToolbarFullScreenVisibility","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"visibility","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI33WindowToolbarFullScreenVisibilityV","text":"WindowToolbarFullScreenVisibility","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"text":"\n","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/composablearchitecture\/ifletstore\/windowtoolbarfullscreenvisibility(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/windowToolbarFullScreenVisibility(_:)"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","abstract":[],"type":"topic","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","kind":"article","title":"View Implementations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/windowToolbarFullScreenVisibility(_:)":{"abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"windowToolbarFullScreenVisibility","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WindowToolbarFullScreenVisibility","preciseIdentifier":"s:7SwiftUI33WindowToolbarFullScreenVisibilityV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"url":"\/documentation\/composablearchitecture\/ifletstore\/windowtoolbarfullscreenvisibility(_:)","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/windowToolbarFullScreenVisibility(_:)","kind":"symbol","title":"windowToolbarFullScreenVisibility(_:)","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","role":"collection","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"type":"topic","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"url":"\/documentation\/composablearchitecture\/swiftuideprecations","role":"collectionGroup","kind":"article","title":"Deprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"kind":"symbol","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","title":"IfLetStore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IfLetStore","kind":"identifier"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore","abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"kind":"article","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","role":"collectionGroup","title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration"}}}