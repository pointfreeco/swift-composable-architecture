{"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Inherited from "},{"code":"View.colorMultiply(_:)","type":"codeVoice"},{"type":"text","text":"."}],"sections":[],"metadata":{"role":"symbol","title":"colorMultiply(_:)","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"externalID":"s:7SwiftUI4ViewPAAE13colorMultiplyyQrAA5ColorVF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","symbolKind":"method","roleHeading":"Instance Method","platforms":[{"name":"iOS","beta":false,"deprecated":false,"introducedAt":"13.0","unavailable":false},{"deprecated":false,"beta":false,"unavailable":false,"name":"macOS","introducedAt":"10.15"},{"beta":false,"introducedAt":"13.0","deprecated":false,"unavailable":false,"name":"tvOS"},{"deprecated":false,"introducedAt":"6.0","unavailable":false,"beta":false,"name":"watchOS"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"colorMultiply","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Color","preciseIdentifier":"s:7SwiftUI5ColorV"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"extendedModule":"SwiftUICore"},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/colorMultiply(_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"colorMultiply"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"color"},{"kind":"text","text":": "},{"text":"Color","preciseIdentifier":"s:7SwiftUI5ColorV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":"\n","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/composablearchitecture\/ifletstore\/colormultiply(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","title":"View Implementations","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","kind":"article","role":"collectionGroup","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/colorMultiply(_:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/colorMultiply(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"colorMultiply","kind":"identifier"},{"kind":"text","text":"("},{"text":"Color","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI5ColorV"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"title":"colorMultiply(_:)","url":"\/documentation\/composablearchitecture\/ifletstore\/colormultiply(_:)","role":"symbol","kind":"symbol","type":"topic","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"type":"topic","title":"SwiftUI Integration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","kind":"article","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"title":"Deprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article","url":"\/documentation\/composablearchitecture\/swiftuideprecations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"IfLetStore","kind":"identifier"}],"title":"IfLetStore","kind":"symbol","deprecated":true,"url":"\/documentation\/composablearchitecture\/ifletstore","role":"symbol","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}]}}}