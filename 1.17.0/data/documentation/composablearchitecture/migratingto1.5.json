{"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.5","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Update your code to make use of the new "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","type":"reference"},{"text":" operation on ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","type":"reference","isActive":true},{"type":"text","text":" "},{"text":"in order to improve the performance of your features and simplify the usage of navigation APIs.","type":"text"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/migratingto1.5"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.17","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.16","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.15","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.14","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.13","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.12","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.11","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.10","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.9","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.8","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.7","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.6","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.4"]}],"kind":"article","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides"]]},"sections":[],"metadata":{"modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Article","title":"Migrating to 1.5","role":"article"},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"Overview","level":2},{"inlineContent":[{"type":"text","text":"The Composable Architecture is under constant development, and we are always looking for ways to"},{"type":"text","text":" "},{"type":"text","text":"simplify the library, and make it more powerful. As such, we often need to deprecate certain APIs"},{"text":" ","type":"text"},{"text":"in favor of newer ones. We recommend people update their code as quickly as possible to the newest","type":"text"},{"type":"text","text":" "},{"text":"APIs, and this article contains some tips for doing so.","type":"text"}],"type":"paragraph"},{"name":"Important","content":[{"inlineContent":[{"text":"Many APIs have been soft-deprecated in this release and will be hard-deprecated in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a future minor release. We highly recommend updating your use of deprecated APIs to their newest"},{"text":" ","type":"text"},{"text":"version as quickly as possible.","type":"text"}],"type":"paragraph"}],"type":"aside","style":"important"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"#Store-scoping-with-key-paths","isActive":true}]}]},{"content":[{"inlineContent":[{"identifier":"#Scoping-performance","isActive":true,"type":"reference"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"#Enum-driven-navigation-APIs","isActive":true}]}]}],"type":"unorderedList"},{"type":"heading","text":"Store scoping with key paths","level":3,"anchor":"Store-scoping-with-key-paths"},{"inlineContent":[{"text":"Prior to version 1.5 of the Composable Architecture, one was allowed to","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-9iai9","isActive":true,"type":"reference"},{"type":"text","text":" a store with any kind of closures that"},{"type":"text","text":" "},{"type":"text","text":"transform the parent state to the child state, and child actions into parent actions:"}],"type":"paragraph"},{"code":["store.scope(","  state: (State) -> ChildState,","  action: (ChildAction) -> Action",")"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"In practice you could typically use key paths for the "},{"code":"state","type":"codeVoice"},{"type":"text","text":" transformation since key path literals"},{"type":"text","text":" "},{"text":"can be promoted to closures. That means often scoping looked something like this:","type":"text"}],"type":"paragraph"},{"code":["\/\/ ⚠️ Deprecated API","ChildView(","  store: store.scope(","    state: \\.child, ","    action: { .child($0) }","  )",")"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"However, as of version 1.5 of the Composable Architecture, the version of"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-9iai9","isActive":true,"type":"reference"},{"type":"text","text":" that takes two closures is"},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"text":"soft-deprecated","type":"text"}]},{"text":". Instead, you are to use the version of","type":"text"},{"type":"text","text":" "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","type":"reference"},{"text":" that takes a key path for the ","type":"text"},{"code":"state","type":"codeVoice"},{"text":"","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"argument, and a case key path for the "},{"type":"codeVoice","code":"action"},{"text":" argument.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is easiest to do when you are using the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","isActive":true,"type":"reference"},{"text":" macro with your","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"feature because then case key paths are automatically generated for each case of your action enum."},{"type":"text","text":" "},{"text":"The above construction of ","type":"text"},{"type":"codeVoice","code":"ChildView"},{"type":"text","text":" now becomes:"}]},{"code":["\/\/ ✅ New API","ChildView(","  store: store.scope(","    state: \\.child, ","    action: \\.child","  )",")"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The syntax is now shorter and more symmetric, and there is a hidden benefit too. Because key paths"},{"type":"text","text":" "},{"text":"are ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":", we are able to cache the store created by "},{"type":"codeVoice","code":"scope"},{"type":"text","text":". This means if the store is scoped"},{"text":" ","type":"text"},{"text":"again with the same ","type":"text"},{"type":"codeVoice","code":"state"},{"type":"text","text":" and "},{"type":"codeVoice","code":"action"},{"type":"text","text":" arguments, we can skip creating a new store and instead"},{"type":"text","text":" "},{"text":"return the previously created one. This provides a lot of benefits, such as better performance, and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a stable identity for features."}]},{"inlineContent":[{"text":"There are some times when changing to this new scoping operator may be difficult. For example, if","type":"text"},{"type":"text","text":" "},{"type":"text","text":"you perform additional work in your scoping closure so that a simple key path does not work:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["ChildView(","  store: store.scope(","    state: { ChildFeature(state: $0.child) }, ","    action: { .child($0) }","  )",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This can be handled by moving the work in the closure to a computed property on your state:"}]},{"type":"codeListing","syntax":"swift","code":["extension State {","  var childFeature: ChildFeature {","    ChildFeature(state: self.child) ","  }","}"]},{"inlineContent":[{"text":"And now the key path syntax works just fine:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["ChildView(","  store: store.scope(","    state: \\.childFeature, ","    action: \\.child","  )",")"]},{"type":"paragraph","inlineContent":[{"text":"Another complication is if you are using data from ","type":"text"},{"inlineContent":[{"type":"text","text":"outside"}],"type":"emphasis"},{"text":" the closure, ","type":"text"},{"inlineContent":[{"type":"text","text":"inside"}],"type":"emphasis"},{"type":"text","text":" the closure:"}]},{"type":"codeListing","syntax":"swift","code":["ChildView(","  store: store.scope(","    state: { ","      ChildFeature(","        settings: viewStore.settings,","        state: $0.child","      ) ","    }, ","    action: { .child($0) }","  )",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this situation you can add a subscript to your state so that you can pass that data into it:"}]},{"code":["extension State {","  subscript(settings settings: Settings) -> ChildFeature {","    ChildFeature(","      settings: settings,","      state: self.child","    )","  }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"Then you can use a subscript key path to perform the scoping:","type":"text"}],"type":"paragraph"},{"code":["ChildView(","  store: store.scope(","    state: \\.[settings: viewStore.settings], ","    action: \\.child","  )",")"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"Another common case you may encounter is when dealing with collections. It is common in the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Composable Architecture to use an "},{"type":"codeVoice","code":"IdentifiedArray"},{"text":" in your feature’s state and an","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction","isActive":true},{"type":"text","text":" in your feature’s actions (see "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.4#Identified-actions","type":"reference","isActive":true},{"type":"text","text":" for more"},{"text":" ","type":"text"},{"text":"info on ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction"},{"type":"text","text":"). If you needed to scope your store down to one specific row of the"},{"type":"text","text":" "},{"type":"text","text":"identified domain, previously you would have done so like this:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["store.scope(","  state: \\.rows[id: id],","  action: { .rows(.element(id: id, action: $0)) }",")"]},{"type":"paragraph","inlineContent":[{"text":"With case key paths it can be done simply like this:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["store.scope(","  state: \\.rows[id: id],","  action: \\.rows[id: id]",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"These tricks should be enough for you to rewrite all of your store scopes using key paths, but if"},{"text":" ","type":"text"},{"type":"text","text":"you have any problems feel free to open a"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"http:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions"},{"type":"text","text":" on the repo."}]},{"type":"heading","level":2,"text":"Scoping performance","anchor":"Scoping-performance"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The performance characteristics for store scoping have changed in this release. The primary (and"},{"text":" ","type":"text"},{"text":"intended) way of scoping is along ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"stored"}]},{"type":"text","text":" properties of child features. A very basic example of this"},{"text":" ","type":"text"},{"type":"text","text":"is the following:"}]},{"type":"codeListing","code":["ChildView(","  store: store.scope(state: \\.child, action: \\.child)",")"],"syntax":"swift"},{"inlineContent":[{"text":"A less common (and less supported) form of scoping is along ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"computed"}]},{"text":" properties, for example like","type":"text"},{"type":"text","text":" "},{"text":"this:","type":"text"}],"type":"paragraph"},{"code":["extension ParentFeature.State {","  var computedChild: ChildFeature.State {","    ChildFeature.State(","      \/\/ Heavy computation here...","    )","  }","}","","ChildView(","  store: store.scope(state: \\.computedChild, action: \\.child)",")"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"This style of scoping will incur a bit of a performance cost in 1.5 and moving forward. The cost","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"is greater the closer your scoping is to the root of your application. Leaf node features will not"},{"type":"text","text":" "},{"type":"text","text":"incur as much of a cost."}],"type":"paragraph"},{"inlineContent":[{"text":"See the dedicated article ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance#Store-scoping","type":"reference"},{"type":"text","text":" for more information."}],"type":"paragraph"},{"type":"heading","level":2,"anchor":"Enum-driven-navigation-APIs","text":"Enum-driven navigation APIs"},{"inlineContent":[{"type":"text","text":"Prior to version 1.5 of the library, using enum state with navigation view modifiers, such as"},{"text":" ","type":"text"},{"type":"codeVoice","code":"sheet"},{"text":", ","type":"text"},{"code":"popover","type":"codeVoice"},{"text":", ","type":"text"},{"code":"navigationDestination","type":"codeVoice"},{"type":"text","text":", etc, was quite verbose. You first needed to supply a"},{"text":" ","type":"text"},{"type":"text","text":"store scoped to the destination domain, and then further provide transformations for isolating the"},{"type":"text","text":" "},{"type":"text","text":"case of the state enum to drive the navigation, as well as a transformation for embedding child"},{"text":" ","type":"text"},{"type":"text","text":"actions back into the destination domain:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["\/\/ ⚠️ Deprecated API",".sheet(","  store: store.scope(state: \\.$destination, action: { .destination($0) }),","  state: \\.editForm,","  action: { .editForm($0) }",")"]},{"type":"paragraph","inlineContent":[{"text":"The navigation view modifiers that take ","type":"text"},{"code":"store","type":"codeVoice"},{"text":", ","type":"text"},{"code":"state","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"action","type":"codeVoice"},{"text":" arguments are now deprecated,","type":"text"},{"type":"text","text":" "},{"text":"and instead you can do it all with a single ","type":"text"},{"code":"store","type":"codeVoice"},{"type":"text","text":" argument:"}]},{"code":["\/\/ ✅ New API",".sheet(","  store: store.scope(","    state: \\.$destination.editForm, ","    action: \\.destination.editForm","  )",")"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"All navigation APIs that take 3 arguments for the "},{"type":"codeVoice","code":"store"},{"type":"text","text":", "},{"type":"codeVoice","code":"state"},{"text":" and ","type":"text"},{"code":"action","type":"codeVoice"},{"type":"text","text":" have been"},{"type":"text","text":" "},{"inlineContent":[{"type":"text","text":"soft-deprecated"}],"type":"strong"},{"type":"text","text":" and instead you should make use of the version of the APIs that take a single"},{"text":" ","type":"text"},{"code":"store","type":"codeVoice"},{"type":"text","text":" argument. This includes:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"alert(store:state:action:)"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"confirmationDialog(store:state:action:)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"fullScreenCover(store:state:action:)","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"navigationDestination(store:state:action)"}]}]},{"content":[{"inlineContent":[{"code":"popover(store:state:action:)","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"sheet(store:state:action:)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore"},{"type":"text","text":"."},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:state:action:then:)","isActive":true}]}]},{"content":[{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore"},{"type":"text","text":"."},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:state:action:then:else:)"}],"type":"paragraph"}]}]}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.7":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.7","kind":"article","role":"article","abstract":[{"type":"text","text":"Update your code to make use of the new observation tools in the library and get rid of legacy"},{"text":" ","type":"text"},{"text":"APIs such as ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","type":"reference","isActive":true},{"text":", ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","isActive":true},{"type":"text","text":", "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","type":"reference","isActive":true},{"type":"text","text":", and more."}],"type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.7","title":"Migrating to 1.7"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.13":{"url":"\/documentation\/composablearchitecture\/migratingto1.13","type":"topic","abstract":[{"text":"The Composable Architecture now provides first class tools for building features in UIKit,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"including minimal state observation, presentation and stack navigation."}],"title":"Migrating to 1.13","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.13","role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.14":{"abstract":[{"text":"The ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"text":" type is now officially ","type":"text"},{"code":"@MainActor","type":"codeVoice"},{"type":"text","text":" isolated."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.14","type":"topic","role":"article","title":"Migrating to 1.14","kind":"article","url":"\/documentation\/composablearchitecture\/migratingto1.14"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/receive(_:_:timeout:assert:fileID:file:line:column:)-9jd7x":{"url":"\/documentation\/composablearchitecture\/teststore\/receive(_:_:timeout:assert:fileid:file:line:column:)-9jd7x","role":"symbol","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/receive(_:_:timeout:assert:fileID:file:line:column:)-9jd7x","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"receive"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"preciseIdentifier":"s:22ComposableArchitecture20_SendableCaseKeyPatha","text":"_SendableCaseKeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":">, ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"timeout","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8DurationV","text":"Duration"},{"text":", ","kind":"text"},{"text":"assert","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"State","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?, "},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":", "},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"title":"receive(_:_:timeout:assert:fileID:file:line:column:)","type":"topic","abstract":[{"type":"text","text":"Asserts an action was received matching a case path with a specific payload, and asserts how"},{"type":"text","text":" "},{"type":"text","text":"the state changes."}]},"#Enum-driven-navigation-APIs":{"title":"Enum-driven navigation APIs","url":"#Enum-driven-navigation-APIs","identifier":"#Enum-driven-navigation-APIs","type":"link","titleInlineContent":[{"type":"text","text":"Enum-driven navigation APIs"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/WithViewStore":{"type":"topic","deprecated":true,"url":"\/documentation\/composablearchitecture\/withviewstore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WithViewStore"}],"abstract":[{"type":"text","text":"A view helper that transforms a "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","type":"reference","isActive":true},{"text":" into a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"},{"type":"text","text":" so that its state can be observed"},{"text":" ","type":"text"},{"type":"text","text":"by a view builder."}],"navigatorTitle":[{"text":"WithViewStore","kind":"identifier"}],"role":"symbol","kind":"symbol","title":"WithViewStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.4":{"abstract":[{"type":"text","text":"Update your code to make use of the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","isActive":true},{"text":" macro, and learn how to better leverage case key","type":"text"},{"type":"text","text":" "},{"text":"paths in your features.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.4","type":"topic","role":"article","title":"Migrating to 1.4","kind":"article","url":"\/documentation\/composablearchitecture\/migratingto1.4"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigrationGuides":{"abstract":[{"type":"text","text":"Learn how to upgrade your application to the newest version of the Composable Architecture."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides","type":"topic","role":"collectionGroup","title":"Migration guides","kind":"article","url":"\/documentation\/composablearchitecture\/migrationguides"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/dependency(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dependency"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"_DependencyKeyWritingReducer"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"url":"\/documentation\/composablearchitecture\/reducer\/dependency(_:)","type":"topic","abstract":[{"type":"text","text":"Places a value in the reducer’s dependencies."}],"title":"dependency(_:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:)","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/init(_:state:action:then:else:)":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"text":"DestinationState","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"DestinationAction"},{"kind":"text","text":", "},{"text":"IfContent","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ElseContent","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"text":"PresentationState","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV"},{"kind":"text","text":"<"},{"text":"DestinationState","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"PresentationAction","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO"},{"kind":"text","text":"<"},{"text":"DestinationAction","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"kind":"externalParam","text":"state"},{"text":": (","kind":"text"},{"text":"DestinationState","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"action"},{"text":": (","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"DestinationAction","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"then","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"IfContent","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"else"},{"kind":"text","text":": () -> "},{"text":"ElseContent","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:state:action:then:else:)","kind":"symbol","role":"symbol","deprecated":true,"title":"init(_:state:action:then:else:)","abstract":[{"type":"text","text":"Initializes an "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","isActive":true,"type":"reference"},{"text":" view that computes content depending on if a store of","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState"},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","isActive":true},{"type":"text","text":" is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" or non-"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" and state can further"},{"type":"text","text":" "},{"type":"text","text":"be extracted from the destination state, "},{"type":"emphasis","inlineContent":[{"type":"text","text":"e.g."}]},{"type":"text","text":" it matches a particular case of an enum."}],"url":"\/documentation\/composablearchitecture\/ifletstore\/init(_:state:action:then:else:)","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"PresentationState","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","navigatorTitle":[{"text":"PresentationState","kind":"identifier"}],"abstract":[{"type":"text","text":"A property wrapper for state that can be presented."}],"title":"PresentationState","role":"symbol","kind":"symbol","url":"\/documentation\/composablearchitecture\/presentationstate"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore":{"deprecated":true,"type":"topic","abstract":[{"text":"A Composable Architecture-friendly wrapper around ","type":"text"},{"code":"ForEach","type":"codeVoice"},{"text":" that simplifies working with","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"collections of state."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ForEachStore"}],"navigatorTitle":[{"kind":"identifier","text":"ForEachStore"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","title":"ForEachStore","url":"\/documentation\/composablearchitecture\/foreachstore","role":"symbol"},"#Scoping-performance":{"title":"Scoping performance","url":"#Scoping-performance","identifier":"#Scoping-performance","type":"link","titleInlineContent":[{"type":"text","text":"Scoping performance"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A wrapper type for actions that can be presented."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","navigatorTitle":[{"kind":"identifier","text":"PresentationAction"}],"url":"\/documentation\/composablearchitecture\/presentationaction","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PresentationAction","kind":"identifier"}],"title":"PresentationAction"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.12":{"abstract":[{"type":"text","text":"Take advantage of custom decoding and encoding logic for the shared file storage persistence"},{"type":"text","text":" "},{"type":"text","text":"strategy, as well as beta support for Swift’s native Testing framework."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.12","type":"topic","role":"article","title":"Migrating to 1.12","kind":"article","url":"\/documentation\/composablearchitecture\/migratingto1.12"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","abstract":[{"text":"A testable runtime for a reducer.","type":"text"}],"kind":"symbol","type":"topic","title":"TestStore","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TestStore"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"TestStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/teststore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"text":" ","type":"text"},{"type":"text","text":"given an action, and describes what "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference"},{"text":"s should be executed later by the store, if any.","type":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.15":{"url":"\/documentation\/composablearchitecture\/migratingto1.15","type":"topic","abstract":[{"type":"text","text":"The library has been completely updated for Swift 6 language mode, and now compiles in strict"},{"text":" ","type":"text"},{"type":"text","text":"concurrency with no warnings or errors."}],"title":"Migrating to 1.15","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.15","role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.10":{"role":"article","kind":"article","url":"\/documentation\/composablearchitecture\/migratingto1.10","abstract":[{"type":"text","text":"Update your code to make use of the new state sharing tools in the library, such as the "},{"type":"codeVoice","code":"Shared"},{"type":"text","text":" "},{"text":"property wrapper, and the ","type":"text"},{"type":"codeVoice","code":"appStorage"},{"type":"text","text":" and "},{"type":"codeVoice","code":"fileStorage"},{"type":"text","text":" persistence strategies."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.10","type":"topic","title":"Migrating to 1.10"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Performance#Store-scoping":{"title":"Store scoping","url":"\/documentation\/composablearchitecture\/performance#Store-scoping","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance#Store-scoping","type":"topic","abstract":[],"kind":"section"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedAction":{"navigatorTitle":[{"kind":"identifier","text":"IdentifiedAction"}],"title":"IdentifiedAction","kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction","url":"\/documentation\/composablearchitecture\/identifiedaction","abstract":[{"text":"A wrapper type for actions that can be presented in a list.","type":"text"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IdentifiedAction"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:action:)-9iai9":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"scope"},{"kind":"text","text":"<"},{"text":"ChildState","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ChildAction"},{"kind":"text","text":">("},{"text":"state","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"ChildState"},{"kind":"text","text":", "},{"kind":"externalParam","text":"action"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"ChildAction"},{"kind":"text","text":") -> "},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"ChildState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/composablearchitecture\/store\/scope(state:action:)-9iai9","type":"topic","title":"scope(state:action:)","role":"symbol","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-9iai9","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/send(_:assert:fileID:file:line:column:)-8877x":{"abstract":[{"text":"Sends an action to the store and asserts when state changes.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/send(_:assert:fileID:file:line:column:)-8877x","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"send"},{"kind":"text","text":"("},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"assert"},{"kind":"text","text":": (("},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"State"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":", "},{"text":"column","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"text":"TestStoreTask","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture13TestStoreTaskV"}],"title":"send(_:assert:fileID:file:line:column:)","kind":"symbol","url":"\/documentation\/composablearchitecture\/teststore\/send(_:assert:fileid:file:line:column:)-8877x"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer()":{"kind":"symbol","title":"Reducer()","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","url":"\/documentation\/composablearchitecture\/reducer()","abstract":[{"text":"Helps implement the conformance to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","isActive":true},{"text":" protocol for a type.","type":"text"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.11":{"type":"topic","abstract":[{"text":"Update your code to use the new ","type":"text"},{"type":"codeVoice","code":"withLock"},{"type":"text","text":" method for mutating shared state from asynchronous"},{"type":"text","text":" "},{"type":"text","text":"contexts, rather than mutating the underlying wrapped value directly."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.11","url":"\/documentation\/composablearchitecture\/migratingto1.11","title":"Migrating to 1.11","kind":"article","role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.8":{"abstract":[{"type":"text","text":"Update your code to make use of the new capabilities of the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","isActive":true},{"type":"text","text":" macro, including automatic"},{"text":" ","type":"text"},{"type":"text","text":"fulfillment of requirements for destination reducers and path reducers."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.8","type":"topic","role":"article","title":"Migrating to 1.8","kind":"article","url":"\/documentation\/composablearchitecture\/migratingto1.8"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:action:)-90255":{"url":"\/documentation\/composablearchitecture\/store\/scope(state:action:)-90255","abstract":[{"type":"text","text":"Scopes the store to one that exposes child state and actions."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scope","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ChildState","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ChildAction"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"text":": ","kind":"text"},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"text":"ChildState","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"kind":"text","text":"<"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"ChildState"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"typeIdentifier"},{"kind":"text","text":">"}],"role":"symbol","type":"topic","title":"scope(state:action:)","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.17":{"url":"\/documentation\/composablearchitecture\/migratingto1.17","role":"article","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.17","title":"Migrating to 1.17","type":"topic","abstract":[{"text":"The ","type":"text"},{"code":"@Shared","type":"codeVoice"},{"type":"text","text":" property wrapper and related tools have been extracted to their own"},{"type":"text","text":" "},{"type":"text","text":"library so that they can be used in non-Composable Architecture applications. This a"},{"type":"text","text":" "},{"text":"backwards compatible change, but some new deprecations have been introduced.","type":"text"}]},"#Store-scoping-with-key-paths":{"title":"Store scoping with key paths","url":"#Store-scoping-with-key-paths","identifier":"#Store-scoping-with-key-paths","type":"link","titleInlineContent":[{"type":"text","text":"Store scoping with key paths"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.16":{"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":".appStorage"},{"type":"text","text":" strategy used with "},{"code":"@Shared","type":"codeVoice"},{"text":" now uses key-value observing instead of","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"NotificationCenter"},{"type":"text","text":" when possible. Learn how this may affect your code."}],"url":"\/documentation\/composablearchitecture\/migratingto1.16","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.16","type":"topic","role":"article","kind":"article","title":"Migrating to 1.16"},"http://github.com/pointfreeco/swift-composable-architecture/discussions":{"title":"discussion","url":"http:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions","identifier":"http:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions","type":"link","titleInlineContent":[{"type":"text","text":"discussion"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/init(_:state:action:then:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"DestinationState"},{"kind":"text","text":", "},{"text":"DestinationAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"IfContent"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier","text":"Store"},{"text":"<","kind":"text"},{"text":"PresentationState","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"DestinationState"},{"text":">, ","kind":"text"},{"text":"PresentationAction","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"DestinationAction","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"text":"state","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"DestinationState"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"State"},{"text":"?, ","kind":"text"},{"text":"action","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"DestinationAction"},{"kind":"text","text":", "},{"kind":"externalParam","text":"then"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier","text":"Store"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"IfContent","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Initializes an "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","type":"reference","isActive":true},{"type":"text","text":" view that computes content depending on if a store of"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","isActive":true},{"type":"text","text":" and "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","type":"reference"},{"type":"text","text":" is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" or non-"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" and state can further"},{"type":"text","text":" "},{"text":"be extracted from the destination state, ","type":"text"},{"inlineContent":[{"text":"e.g.","type":"text"}],"type":"emphasis"},{"type":"text","text":" it matches a particular case of an enum."}],"deprecated":true,"title":"init(_:state:action:then:)","url":"\/documentation\/composablearchitecture\/ifletstore\/init(_:state:action:then:)","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:state:action:then:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","kind":"symbol","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.6":{"url":"\/documentation\/composablearchitecture\/migratingto1.6","type":"topic","abstract":[{"text":"Update your code to make use of the new","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/receive(_:_:timeout:assert:fileID:file:line:column:)-9jd7x","isActive":true,"type":"reference"},{"type":"text","text":" method when you need to"},{"type":"text","text":" "},{"type":"text","text":"assert on the payload inside an action received."}],"title":"Migrating to 1.6","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.6","role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.4#Identified-actions":{"type":"topic","title":"Identified actions","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.4#Identified-actions","url":"\/documentation\/composablearchitecture\/migratingto1.4#Identified-actions","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"role":"symbol","title":"Store","navigatorTitle":[{"text":"Store","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/store","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"text":"around to views that need to interact with the application.","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"IfLetStore","kind":"identifier"}],"title":"IfLetStore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}],"url":"\/documentation\/composablearchitecture\/ifletstore","deprecated":true,"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.9":{"url":"\/documentation\/composablearchitecture\/migratingto1.9","type":"topic","abstract":[{"type":"text","text":"Update your code to make use of the new "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/send(_:assert:fileID:file:line:column:)-8877x","isActive":true,"type":"reference"},{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"method on "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","type":"reference"},{"text":" which gives a succinct syntax for sending actions with case key paths, and","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:)","isActive":true,"type":"reference"},{"type":"text","text":" method for overriding dependencies."}],"title":"Migrating to 1.9","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.9","role":"article"}}}