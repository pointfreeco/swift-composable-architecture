{"metadata":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BindingReducer"}],"role":"symbol","symbolKind":"struct","title":"BindingReducer","navigatorTitle":[{"kind":"identifier","text":"BindingReducer"}],"roleHeading":"Structure","modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture14BindingReducerV"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer"},"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration"]]},"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"A reducer that updates bindable state when it receives binding actions."}],"seeAlsoSections":[{"title":"Supporting reducers","anchor":"Supporting-reducers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional"],"generated":true}],"variants":[{"paths":["\/documentation\/composablearchitecture\/bindingreducer"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"],"type":"conformsTo","kind":"relationships"}],"topicSections":[{"anchor":"Initializers","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/init()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/init(action:)-33ljj","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/init(action:)-8fpg"],"title":"Initializers"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/reduce(into:action:)"],"generated":true,"anchor":"Instance-Methods","title":"Instance Methods"},{"anchor":"Default-Implementations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/Reducer-Implementations"],"title":"Default Implementations","generated":true}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingReducer","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"State"},{"text":", ","kind":"text"},{"text":"Action","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ViewAction"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/State","text":"State","preciseIdentifier":"s:22ComposableArchitecture14BindableActionP5StateQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewAction"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture14BindableActionP","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction","text":"BindableAction"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This reducer should typically be composed into the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-20w8t"},{"type":"text","text":" of your"},{"text":" ","type":"text"},{"text":"feature’s reducer:","type":"text"}]},{"type":"codeListing","code":["@Reducer","struct Feature {","  struct State {","    @BindingState var isOn = false","    \/\/ More properties...","  }","  enum Action: BindableAction {","    case binding(BindingAction<State>)","    \/\/ More actions","  }","","  var body: some ReducerOf<Self> {","    BindingReducer()","    Reduce { state, action in","      \/\/ Your feature's logic...","    }","  }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This makes it so that the binding’s logic is run before the feature’s logic, "},{"inlineContent":[{"text":"i.e.","type":"text"}],"type":"emphasis"},{"text":" you will","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"only see the state after the binding was written. If you want to react to the state "},{"inlineContent":[{"text":"before","type":"text"}],"type":"emphasis"},{"text":" the","type":"text"},{"text":" ","type":"text"},{"text":"binding was written, you can flip the order of the composition:","type":"text"}]},{"type":"codeListing","code":["var body: some ReducerOf<Self> {","  Reduce { state, action in","    \/\/ Your feature's logic...","  }","  BindingReducer()","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you forget to compose the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer"},{"type":"text","text":" into your feature’s reducer, then when a binding"},{"text":" ","type":"text"},{"type":"text","text":"is written to it will cause a runtime purple Xcode warning letting you know what needs to be"},{"text":" ","type":"text"},{"type":"text","text":"fixed."}]}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer/init(action:)-33ljj":{"kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/init(action:)-33ljj","role":"symbol","title":"init(action:)","url":"\/documentation\/composablearchitecture\/bindingreducer\/init(action:)-33ljj","abstract":[],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":">)"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","kind":"symbol","url":"\/documentation\/composablearchitecture\/bindingreducer","abstract":[{"text":"A reducer that updates bindable state when it receives binding actions.","type":"text"}],"role":"symbol","type":"topic","title":"BindingReducer","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BindingReducer","kind":"identifier"}],"navigatorTitle":[{"text":"BindingReducer","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"role":"collectionGroup","type":"topic","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"kind":"symbol","title":"ComposableArchitecture","type":"topic","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/body-20w8t":{"title":"body","type":"topic","required":true,"abstract":[{"type":"text","text":"The content and behavior of a reducer that is composed from other reducers."}],"defaultImplementations":2,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-20w8t","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Body","preciseIdentifier":"s:22ComposableArchitecture7ReducerP4BodyQa","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/reducer\/body-20w8t"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer/reduce(into:action:)":{"title":"reduce(into:action:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/reduce(into:action:)","abstract":[],"type":"topic","url":"\/documentation\/composablearchitecture\/bindingreducer\/reduce(into:action:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"reduce","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Effect","preciseIdentifier":"s:22ComposableArchitecture6EffectV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"text":">","kind":"text"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EmptyReducer":{"abstract":[{"type":"text","text":"A reducer that does nothing."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"EmptyReducer","kind":"identifier"}],"kind":"symbol","title":"EmptyReducer","type":"topic","url":"\/documentation\/composablearchitecture\/emptyreducer","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer","navigatorTitle":[{"kind":"identifier","text":"EmptyReducer"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Swift/Optional":{"fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"text":"Optional","kind":"identifier","preciseIdentifier":"s:Sq"}],"title":"Optional","type":"topic","url":"\/documentation\/composablearchitecture\/swift\/optional","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Optional","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingAction":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BindingAction","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","type":"topic","kind":"symbol","navigatorTitle":[{"text":"BindingAction","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/bindingaction","abstract":[{"type":"text","text":"An action that describes simple mutations to some root state at a writable key path."}],"title":"BindingAction"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"kind":"symbol","title":"Effect","type":"topic","url":"\/documentation\/composablearchitecture\/effect","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","navigatorTitle":[{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer/Reducer-Implementations":{"type":"topic","kind":"article","title":"Reducer Implementations","url":"\/documentation\/composablearchitecture\/bindingreducer\/reducer-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/Reducer-Implementations","role":"collectionGroup","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer/init()":{"kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/init()","role":"symbol","title":"init()","url":"\/documentation\/composablearchitecture\/bindingreducer\/init()","abstract":[{"type":"text","text":"Initializes a reducer that updates bindable state when it receives binding actions."}],"fragments":[{"kind":"identifier","text":"init"},{"text":"()","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer/init(action:)-8fpg":{"kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/init(action:)-8fpg","role":"symbol","title":"init(action:)","url":"\/documentation\/composablearchitecture\/bindingreducer\/init(action:)-8fpg","abstract":[],"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"action"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":") -> "},{"text":"ViewAction","kind":"typeIdentifier"},{"text":"?)","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true,"type":"reference"},{"text":"s should be executed later by the store, if any.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","role":"symbol","kind":"symbol","title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction/State":{"url":"\/documentation\/composablearchitecture\/bindableaction\/state","title":"State","abstract":[{"text":"The root state type that contains bindable fields.","type":"text"}],"role":"symbol","required":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/State","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"State"}],"kind":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction":{"abstract":[{"text":"An action type that exposes a ","type":"text"},{"type":"codeVoice","code":"binding"},{"type":"text","text":" case that holds a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","isActive":true},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"BindableAction","kind":"identifier"}],"type":"topic","url":"\/documentation\/composablearchitecture\/bindableaction","kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction","title":"BindableAction","navigatorTitle":[{"text":"BindableAction","kind":"identifier"}]}}}